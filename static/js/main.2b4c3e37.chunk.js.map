{"version":3,"sources":["assets/img/anime3.png","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","components/sub/querycard.js","components/sub/axios.js","components/sub/eventsTable.js","views/Dashboard.js","views/UserProfile.js","components/sub/Editor.js","components/sub/autosuggest-norm.js","components/sub/autosuggest.js","components/sub/categorychips.js","components/sub/agendas.js","components/sub/transfers.js","views/ManageEvents.js","components/sub/cities&countriesTable.js","views/cities&countries.js","components/sub/customersTable.js","views/customers.js","routes.js","layouts/Admin/Admin.js","index.js"],"names":["module","exports","AdminNavbar","React","Component","constructor","props","super","updateColor","window","innerWidth","this","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","type","onClick","toggleSidebar","NavbarBrand","href","e","preventDefault","brandText","aria-expanded","aria-label","data-target","data-toggle","id","Collapse","navbar","isOpen","Nav","InputGroup","Button","UncontrolledDropdown","nav","DropdownToggle","caret","alt","src","require","DropdownMenu","right","tag","NavLink","DropdownItem","divider","Modal","modalClassName","toggle","Input","placeholder","data-dismiss","Footer","NavItem","Date","getFullYear","target","ps","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","imgSrc","text","to","innerLink","data","ref","map","prop","key","redirect","path","pro","layout","activeClassName","icon","rtlName","name","defaultProps","QuerCard","isOpenQuestion","updateAnswer","sampleAnswerOne","sampleAnswerTwo","sampleAnswerThree","Fragment","Row","Col","md","style","cursor","Badge","Card","marginBottom","CardBody","padding","fontSize","value","onChange","axios","create","baseURL","EventTable","forwardRef","useState","overlayLoader","setOverlayLoader","progress","setProgress","setData","createTheme","primary","secondary","background","default","action","button","hover","disabled","useEffect","handleDeleteAction","swal","title","buttons","dangerMode","then","willDelete","a","arr","filter","item","Axios","delete","columns","useMemo","selector","cell","row","handleDownloadAction","open","ignoreRowClick","allowOverflow","handleEditAction","get","u","localStorage","setItem","JSON","stringify","history","push","display","class","theme","pagination","progressPending","progressComponent","withRouter","Dashboard","Promise","all","currentTableCount","toString","pastTableCount","futureTableCount","b","c","tableTempData","tableData","futureTableData","element","obj","Customers","organisation","liveFrom","toDateString","liveTo","currentTableData","pastTableData","setBgChartData","bigChartData","tableState","console","log","xs","CardHeader","sm","CardTitle","ButtonGroup","active","size","defaultChecked","UserProfile","dropdownOpen","Form","FormGroup","htmlFor","CardFooter","Dropdown","header","Table","responsive","Editor","content","returnContent","config","readonly","tabIndex","onBlur","newContent","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","suggestion","Name","toLowerCase","activeSuggestion","showSuggestions","returnId","removeId","idArr","getElementById","split","index","splice","join","firstChild","innerText","setId","setDataUsingId","Id","onKeyDown","keyCode","length","suggestionsListComponent","fieldLength","clientWidth","width","Phone","hint","marginTop","paddingLeft","Height","paddingBottom","paddingRight","removeAllIds","includes","alert","categoryChipHit","addItemToUpdate","ChipHitAfterRemoving","CategoryChips","addChip","val","tempChips","chips","addChipByremoving","removeAllChips","temArr","Agendas","returnState","resetState","venue","startTime","endTime","remarks","startDate","toISOString","Transfers","origin","destination","mode","vehicleNumber","driverName","distance","driverPhone","journeyTime","transferDate","s26","s50","marginLeft","ManageEvents","createNewTransfer","tempTansfers","transfers","transferRef","createRef","component","isFilled","rIsFilled","haveAnythingEmpty","formData","setDataToFields","parse","eventId","eventName","eventBy","CustomerId","eventFrom","eventTo","venueName","Locations","venueUrl","url","customerId","eventPlackCardImageName","plackCardImage","eventImageName","eventImage","welcomeNote","countryId","CountryId","cityId","CityId","agendas","EventAttendies","Attendees","isSameAsArriving","dticket","representativeArr","Representatives_for_Events","Employees","Representative_Categories","RepresentativeCategoryId","EmployeeId","elem","countryRef","current","cityRef","customerRef","componentWillMount","d","f","suggestionCountries","suggestionCities","sugggestionCustomers","phone","Representatives","RepresentativesCategory","getItem","representativeNameRef","categoryChipHitAfterRemoving","representativeCategoryRef","representativesNameChipHitAfterRemoving","categoryNameChipHit","categoryIdfromHiddenField","RepresentativeNameAutocompleteRef","categoryIdfromHiddenField_CategoryName","RepresentativeCategoryAutocompleteRef","modifyDataWithEventId","EventId","Attendies","submitEvent","eventFormData","FormData","append","eventPlackCardImage","put","post","representatives","transfersData","attendeesData","agendasData","status","setCountryId","setCityId","setCustomerId","EditorRef","agendaRef","addedAttendie","createNewRepresentative","createNewRepresentativeCategory","createdNewRepresentativeCategory","createdRepresentative","currTransferElement","representativePhone","representativeName","representativeCategoryName","TicketsSame","isEditorOpen","aTicketFileName","dTicketFileName","updatingAgenda","updatingAttendee","updatingAgendaObject","updatingRepresentatives","updatingRepresentativesNameId","updatingRepresentativesCategoryId","updatingAttendeePhone","files","flex","message","temp","Category","representativesIds","representativesCatIds","representativesArray","forEach","elementCatId","newArr","concat","unique","distinct","i","marginRight","checked","newAttendieObj","fileToLoad","fileone","fileReader","FileReader","onload","fileLoadedEvent","result","readAsDataURL","filetwo","fileToLoadSecond","fileReadertwo","fileLoadedEvent1","Ea","updatingAttendeeId","backgroundColor","tempTransfers","toLocaleString","hour","minute","hour12","MyComponentHook","getData","Cities","Countries","image","desc","useImperativeHandle","resetTable","updateState","useCallback","Image","setDataInParent","onSelectedRowsChange","CitiesCountries","suggestionCity","locationName","locationDesc","isAnUpdate","locationId","_cityRef","City","_countryRef","Country","cityModalRef","tableRef","createdLocation","locationImageFile","locationImageName","createdCity","createdCountry","modalCountryCreated","countryName","cityFile","cityFileName","cityName","paddingTop","Label","formdata","values","customers","customerName","customerPhone","customerOrg","customerEmail","email","CustomerTableRef","createdCutomer","Admin","getRoutes","handleBgClick","getBrandText","mainPanel","tables","querySelectorAll","componentDidUpdate","scrollTop","scrollingElement","from","hist","createBrowserHistory","ReactDOM"],"mappings":"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","file":"static/js/main.2b4c3e37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n  Button,\r\n  Collapse,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledDropdown,\r\n  Input,\r\n  InputGroup,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Modal,\r\n} from \"reactstrap\";\r\n\r\nclass AdminNavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapseOpen: false,\r\n      modalSearch: false,\r\n      color: \"navbar-transparent\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateColor);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateColor);\r\n  }\r\n  updateColor = () => {\r\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\r\n      this.setState({\r\n        color: \"bg-white\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"navbar-transparent\",\r\n      });\r\n    }\r\n  };\r\n  toggleCollapse = () => {\r\n    if (this.state.collapseOpen) {\r\n      this.setState({\r\n        color: \"navbar-transparent\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"bg-white\",\r\n      });\r\n    }\r\n    this.setState({\r\n      collapseOpen: !this.state.collapseOpen,\r\n    });\r\n  };\r\n  toggleModalSearch = () => {\r\n    this.setState({\r\n      modalSearch: !this.state.modalSearch,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Navbar\r\n          className={classNames(\"navbar-absolute\", this.state.color)}\r\n          expand=\"lg\"\r\n        >\r\n          <Container fluid>\r\n            <div className=\"navbar-wrapper\">\r\n              <div\r\n                className={classNames(\"navbar-toggle d-inline\", {\r\n                  toggled: this.props.sidebarOpened,\r\n                })}\r\n              >\r\n                <button\r\n                  className=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  onClick={this.props.toggleSidebar}\r\n                >\r\n                  <span className=\"navbar-toggler-bar bar1\" />\r\n                  <span className=\"navbar-toggler-bar bar2\" />\r\n                  <span className=\"navbar-toggler-bar bar3\" />\r\n                </button>\r\n              </div>\r\n              <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\r\n                {this.props.brandText}\r\n              </NavbarBrand>\r\n            </div>\r\n            <button\r\n              aria-expanded={false}\r\n              aria-label=\"Toggle navigation\"\r\n              className=\"navbar-toggler\"\r\n              data-target=\"#navigation\"\r\n              data-toggle=\"collapse\"\r\n              id=\"navigation\"\r\n              type=\"button\"\r\n              onClick={this.toggleCollapse}\r\n            >\r\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            </button>\r\n            <Collapse navbar isOpen={this.state.collapseOpen}>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <InputGroup className=\"search-bar\">\r\n                  <Button\r\n                    color=\"link\"\r\n                    data-target=\"#searchModal\"\r\n                    data-toggle=\"modal\"\r\n                    id=\"search-button\"\r\n                    onClick={this.toggleModalSearch}\r\n                  >\r\n                    <i className=\"tim-icons icon-zoom-split\" />\r\n                    <span className=\"d-lg-none d-md-block\">Search</span>\r\n                  </Button>\r\n                </InputGroup>\r\n                <UncontrolledDropdown nav>\r\n                  <DropdownToggle\r\n                    caret\r\n                    color=\"default\"\r\n                    data-toggle=\"dropdown\"\r\n                    nav\r\n                    onClick={(e) => e.preventDefault()}\r\n                  >\r\n                    <div className=\"photo\">\r\n                      <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\r\n                    </div>\r\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\r\n                    <p className=\"d-lg-none\">Log out</p>\r\n                  </DropdownToggle>\r\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\r\n                    </NavLink>\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\r\n                    </NavLink>\r\n                    <DropdownItem divider tag=\"li\" />\r\n                    <NavLink tag=\"li\">\r\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\r\n                    </NavLink>\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n                <li className=\"separator d-lg-none\" />\r\n              </Nav>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n        <Modal\r\n          modalClassName=\"modal-search\"\r\n          isOpen={this.state.modalSearch}\r\n          toggle={this.toggleModalSearch}\r\n        >\r\n          <div className=\"modal-header\">\r\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\r\n            <button\r\n              aria-label=\"Close\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              type=\"button\"\r\n              onClick={this.toggleModalSearch}\r\n            >\r\n              <i className=\"tim-icons icon-simple-remove\" />\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbar;\r\n","import React from \"react\";\r\nimport { Container, Row, Nav, NavItem, NavLink } from \"reactstrap\";\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <Container fluid>\r\n          <Nav>\r\n            <NavItem>\r\n              <NavLink href=\"http://www.delve-serwiz.com/\">\r\n                DELVE SERVIZ\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"http://www.delve-serwiz.com/index.php#d_about\">\r\n                About Us\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <div className=\"copyright\">\r\n            © {new Date().getFullYear()} made with{\" \"}\r\n            <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\r\n            <a\r\n              href=\"https://grevity.in\"\r\n              target=\"_blank\"\r\n            >\r\n              Grevity\r\n            </a>{\" \"}\r\n            for a better web.\r\n          </div>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\n\r\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\r\n\r\nvar ps;\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.activeRoute.bind(this);\r\n  }\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(this.refs.sidebar, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps.destroy();\r\n    }\r\n  }\r\n  linkOnClick = () => {\r\n    document.documentElement.classList.remove(\"nav-open\");\r\n  };\r\n  render() {\r\n    const { bgColor, routes, rtlActive, logo } = this.props;\r\n    let logoImg = null;\r\n    let logoText = null;\r\n    if (logo !== undefined) {\r\n      if (logo.outterLink !== undefined) {\r\n        logoImg = (\r\n          <a\r\n            href={logo.outterLink}\r\n            className=\"simple-text logo-mini\"\r\n            target=\"_blank\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            <div className=\"logo-img\">\r\n              <img src={logo.imgSrc} alt=\"react-logo\" />\r\n            </div>\r\n          </a>\r\n        );\r\n        logoText = (\r\n          <a\r\n            href={logo.outterLink}\r\n            className=\"simple-text logo-normal\"\r\n            target=\"_blank\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            {logo.text}\r\n          </a>\r\n        );\r\n      } else {\r\n        logoImg = (\r\n          <Link\r\n            to={logo.innerLink}\r\n            className=\"simple-text logo-mini\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            <div className=\"logo-img\">\r\n              <img src={logo.imgSrc} alt=\"react-logo\" />\r\n            </div>\r\n          </Link>\r\n        );\r\n        logoText = (\r\n          <Link\r\n            to={logo.innerLink}\r\n            className=\"simple-text logo-normal\"\r\n            onClick={this.props.toggleSidebar}\r\n          >\r\n            {logo.text}\r\n          </Link>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"sidebar\" data={bgColor}>\r\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\r\n          {logoImg !== null || logoText !== null ? (\r\n            <div className=\"logo\">\r\n              {logoImg}\r\n              {logoText}\r\n            </div>\r\n          ) : null}\r\n          <Nav>\r\n            {routes.map((prop, key) => {\r\n              if (prop.redirect) return null;\r\n              return (\r\n                <li\r\n                  className={\r\n                    this.activeRoute(prop.path) +\r\n                    (prop.pro ? \" active-pro\" : \"\")\r\n                  }\r\n                  key={key}\r\n                >\r\n                  <NavLink\r\n                    to={prop.layout + prop.path}\r\n                    className=\"nav-link\"\r\n                    activeClassName=\"active\"\r\n                    onClick={this.props.toggleSidebar}\r\n                  >\r\n                    <i className={prop.icon} />\r\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\r\n                  </NavLink>\r\n                </li>\r\n              );\r\n            })}\r\n          </Nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSidebar.defaultProps = {\r\n  rtlActive: false,\r\n  bgColor: \"primary\",\r\n  routes: [{}],\r\n};\r\n\r\nSidebar.propTypes = {\r\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\r\n  // insde the links of this component\r\n  rtlActive: PropTypes.bool,\r\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  logo: PropTypes.shape({\r\n    // innerLink is for links that will direct the user within the app\r\n    // it will be rendered as <Link to=\"...\">...</Link> tag\r\n    innerLink: PropTypes.string,\r\n    // outterLink is for links that will direct the user outside the app\r\n    // it will be rendered as simple <a href=\"...\">...</a> tag\r\n    outterLink: PropTypes.string,\r\n    // the text of the logo\r\n    text: PropTypes.node,\r\n    // the image src of the logo\r\n    imgSrc: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Collapse,\r\n  Col,\r\n  Row,\r\n  Badge,\r\n  Button,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nexport default class QuerCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      isOpenQuestion: false,\r\n      updateAnswer: false,\r\n      sampleAnswerOne:\r\n        \"Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident\",\r\n      sampleAnswerTwo:\r\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\r\n      sampleAnswerThree: \"\",\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"Collapse-Query-Header\">\r\n          <Row>\r\n            <Col md=\"4\">\r\n              <h4\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    isOpen: !this.state.isOpen,\r\n                  });\r\n                }}\r\n              >\r\n                Sample Event Name\r\n              </h4>\r\n            </Col>\r\n            <Col md=\"4\" className=\"d-flex align-items-center\">\r\n              <h6>\r\n                New Queries Raised <Badge color=\"warning\">0</Badge>\r\n              </h6>\r\n            </Col>\r\n            <Col md=\"4\" className=\"d-flex align-items-center\">\r\n              <h6>\r\n                Queries Resolved <Badge color=\"success\">1</Badge>\r\n              </h6>\r\n            </Col>\r\n          </Row>\r\n          <Collapse isOpen={this.state.isOpen}>\r\n            <Card\r\n              style={{\r\n                marginBottom: \"0px\",\r\n              }}\r\n            >\r\n              <CardBody\r\n                style={{\r\n                  padding: \"0px\",\r\n                }}\r\n              >\r\n                <div className=\"Collapse-Query-Header\">\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <label\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                          fontSize: \"14px\",\r\n                        }}\r\n                      >\r\n                        Sample Question raised from sample attendee from sample\r\n                        event Lorem Ipsum\r\n                      </label>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                      <Button\r\n                        color=\"success\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          this.setState({\r\n                            isOpenQuestion: !this.state.isOpenQuestion,\r\n                          });\r\n                        }}\r\n                      >\r\n                        {this.state.isOpenQuestion ? \"Hide\" : \"Show\"} Answer\r\n                      </Button>\r\n                      <Button\r\n                        color=\"success\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          this.setState({\r\n                            updateAnswer: !this.state.updateAnswer,\r\n                          });\r\n                        }}\r\n                      >\r\n                        Update Answer\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Collapse isOpen={this.state.isOpenQuestion}>\r\n                    <Card\r\n                      style={{\r\n                        marginBottom: \"0px\",\r\n                      }}\r\n                    >\r\n                      <CardBody\r\n                        style={{\r\n                          color: \"white\",\r\n                        }}\r\n                      >\r\n                        {this.state.updateAnswer ? (\r\n                          <Input\r\n                            type=\"textarea\"\r\n                            value={this.state.sampleAnswerOne}\r\n                            onChange={(e) => {\r\n                              this.setState({\r\n                                sampleAnswerOne: e.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          this.state.sampleAnswerOne\r\n                        )}\r\n                      </CardBody>\r\n                    </Card>\r\n                  </Collapse>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          </Collapse>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: `http://162.241.71.139:5000/v1/`,\r\n});\r\n","import React, {\r\n  useState,\r\n  useMemo,\r\n  useEffect,\r\n  forwardRef,\r\n} from \"react\";\r\nimport DataTable, { createTheme } from \"react-data-table-component\";\r\nimport Axios from \"./axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Button } from \"reactstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nconst EventTable = forwardRef((props, ref) => {\r\n  const [overlayLoader, setOverlayLoader] = useState(false);\r\n  const [progress, setProgress] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  createTheme(\"solarized\", {\r\n    text: {\r\n      primary: \"#ffffff\",\r\n      secondary: \"#9A9A9A\",\r\n    },\r\n    background: {\r\n      default: \"#27293d\",\r\n    },\r\n    action: {\r\n      button: \"rgba(0,0,0,.54)\",\r\n      hover: \"rgba(0,0,0,.08)\",\r\n      disabled: \"rgba(0,0,0,.12)\",\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(props.data != null){\r\n      setProgress(false);\r\n    }\r\n  }, [props.data]);\r\n  const handleDeleteAction = (value) => {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover it!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then(async (willDelete) => {\r\n      if (willDelete) {\r\n        var arr = data.filter((item) => item.id !== value.id);\r\n        setData(arr);\r\n        await Axios.delete(\"/customer/delete/\" + value.id);\r\n        swal(\"Poof! Your content has been deleted!\", {\r\n          icon: \"success\",\r\n        });\r\n      } else {\r\n        swal(\"Your Data is Safe!\");\r\n      }\r\n    });\r\n  };\r\n  const handleEditAction = (value) => {\r\n    setOverlayLoader(true);\r\n    Axios.get(\"/events/read-for-admin/\"+value.id)\r\n    .then(u=> {\r\n      setOverlayLoader(false);\r\n      localStorage.setItem(\"eventDataToUpdate\", JSON.stringify(u));\r\n      return props.history.push('/admin/manage-events');\r\n    })\r\n    \r\n  };\r\n  const handleDownloadAction = (value) => {\r\n    window.open(\"http://localhost:5000/v1/events/download-id-proofs/\" + value.id, \"_blank\");\r\n  };\r\n  const columns = useMemo(() => [\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n    },\r\n    {\r\n      name: \"Customer Name\",\r\n      selector: \"customerName\",\r\n    },\r\n    {\r\n      name: \"Organisation\",\r\n      selector: \"customerOrganisation\",\r\n    },\r\n    {\r\n      name: \"Starts On\",\r\n      selector: \"liveFrom\",\r\n    },\r\n    {\r\n      name: \"Ends On\",\r\n      selector: \"liveTo\",\r\n    },\r\n    {\r\n      cell: (row) => (\r\n        <Button\r\n          style={{ padding: \"15px\" }}\r\n          className=\"btn btn-primary\"\r\n          onClick={() => handleDownloadAction(row)}\r\n        >\r\n          <i className=\"tim-icons icon-cloud-download-93\" />\r\n        </Button>\r\n      ),\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n      name: \"Download\",\r\n      selector: \"Download\",\r\n    },\r\n    {\r\n      cell: (row) => (\r\n        <Button\r\n          style={{ padding: \"15px\" }}\r\n          className=\"btn btn-primary\"\r\n          onClick={() => handleEditAction(row)}\r\n        >\r\n          <i className=\"tim-icons icon-pencil\" />\r\n        </Button>\r\n      ),\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n      name: \"Edit\",\r\n      selector: \"edit\",\r\n    },\r\n    {\r\n      cell: (row) => (\r\n        <Button\r\n          style={{ padding: \"15px\" }}\r\n          className=\"btn btn-danger\"\r\n          onClick={() => handleDeleteAction(row)}\r\n        >\r\n          <i className=\"tim-icons icon-trash-simple\" />\r\n        </Button>\r\n      ),\r\n      ignoreRowClick: true,\r\n      button: true,\r\n      name: \"Delete\",\r\n      selector: \"delete\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"loading-overlay\"\r\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\r\n      >\r\n        <div class=\"lds-ripple\">\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        Loading...\r\n      </div>\r\n      <DataTable\r\n        data={props.data || []}\r\n        columns={columns}\r\n        theme=\"solarized\"\r\n        pagination={true}\r\n        progressPending={progress}\r\n        progressComponent={<h2>Loading Events... 📅</h2>}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default withRouter(EventTable);\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport QueryCard from \"../components/sub/querycard\";\r\nimport Axios from '../components/sub/axios'\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport EventTable from \"components/sub/eventsTable\";\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bigChartData: \"data2\",\r\n      tableState: 1,\r\n      currentTableCount: 0,\r\n      pastTableCount: 0,\r\n      futureTableCount: 0,\r\n      tableData: [],\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    Promise.all([\r\n      Axios.get(\r\n        \"/events/get-current-raw/\" + this.state.currentTableCount.toString()\r\n      ),\r\n      Axios.get(\"/events/get-past-raw/\" + this.state.pastTableCount.toString()),\r\n      Axios.get(\r\n        \"/events/get-future-raw/\" + this.state.futureTableCount.toString()\r\n      ),\r\n    ]).then(([a, b, c]) => {\r\n      var tableTempData = this.state.tableData;\r\n      var futureTableData = c.data.map((element) => {\r\n        var obj = {};\r\n        obj[\"id\"] = element.id;\r\n        obj[\"customerId\"] = element.Customers.id;\r\n        obj[\"customerName\"] = element.Customers.name;\r\n        obj[\"customerOrganisation\"] = element.Customers.organisation;\r\n        obj[\"liveFrom\"] = new Date(element.liveFrom).toDateString();\r\n        obj[\"liveTo\"] = new Date(element.liveTo).toDateString();\r\n        obj[\"name\"] = element.name;\r\n        return obj;\r\n      });\r\n      tableTempData.push(futureTableData);\r\n      var currentTableData = a.data.map((element) => {\r\n        var obj = {};\r\n        obj[\"id\"] = element.id;\r\n        obj[\"customerId\"] = element.Customers.id;\r\n        obj[\"customerName\"] = element.Customers.name;\r\n        obj[\"customerOrganisation\"] = element.Customers.organisation;\r\n        obj[\"liveFrom\"] = new Date(element.liveFrom).toDateString();\r\n        obj[\"liveTo\"] = new Date(element.liveTo).toDateString();\r\n        obj[\"name\"] = element.name;\r\n        return obj;\r\n      });\r\n      tableTempData.push(currentTableData);\r\n      var pastTableData = b.data.map((element) => {\r\n        var obj = {};\r\n        obj[\"id\"] = element.id;\r\n        obj[\"customerId\"] = element.Customers.id;\r\n        obj[\"customerName\"] = element.Customers.name;\r\n        obj[\"customerOrganisation\"] = element.Customers.organisation;\r\n        obj[\"liveFrom\"] = new Date(element.liveFrom).toDateString();\r\n        obj[\"liveTo\"] = new Date(element.liveTo).toDateString();\r\n        obj[\"name\"] = element.name;\r\n        return obj;\r\n      });\r\n      tableTempData.push(pastTableData);\r\n\r\n      this.setState({\r\n        tableData: tableTempData,\r\n      });\r\n    });\r\n  }\r\n  setBgChartData = (name) => {\r\n    this.setState({\r\n      bigChartData: name,\r\n    });\r\n  };\r\n  render() {\r\n    console.log(this.state.tableData[this.state.tableState]);\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col xs=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <Row>\r\n                    <Col className=\"text-left\" sm=\"6\">\r\n                      <h5 className=\"card-category\">Total Events</h5>\r\n                      <CardTitle tag=\"h2\">Events</CardTitle>\r\n                    </Col>\r\n                    <Col sm=\"6\">\r\n                      <ButtonGroup\r\n                        className=\"btn-group-toggle float-right\"\r\n                        data-toggle=\"buttons\"\r\n                      >\r\n                        <Button\r\n                          tag=\"label\"\r\n                          className={classNames(\"btn-simple\", {\r\n                            active: this.state.bigChartData === \"data1\",\r\n                          })}\r\n                          color=\"info\"\r\n                          id=\"0\"\r\n                          size=\"sm\"\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              tableState: 2,\r\n                              bigChartData: \"data1\",\r\n                            })\r\n                          }\r\n                        >\r\n                          <input\r\n                            defaultChecked\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            Expired\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-single-02\" />\r\n                          </span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"1\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames(\"btn-simple\", {\r\n                            active: this.state.bigChartData === \"data2\",\r\n                          })}\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              tableState: 1,\r\n                              bigChartData: \"data2\",\r\n                            })\r\n                          }\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            Current\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-gift-2\" />\r\n                          </span>\r\n                        </Button>\r\n                        <Button\r\n                          color=\"info\"\r\n                          id=\"2\"\r\n                          size=\"sm\"\r\n                          tag=\"label\"\r\n                          className={classNames(\"btn-simple\", {\r\n                            active: this.state.bigChartData === \"data3\",\r\n                          })}\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              tableState: 0,\r\n                              bigChartData: \"data3\",\r\n                            })\r\n                          }\r\n                        >\r\n                          <input\r\n                            className=\"d-none\"\r\n                            name=\"options\"\r\n                            type=\"radio\"\r\n                          />\r\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\r\n                            Upcoming\r\n                          </span>\r\n                          <span className=\"d-block d-sm-none\">\r\n                            <i className=\"tim-icons icon-tap-02\" />\r\n                          </span>\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <EventTable\r\n                    data={this.state.tableData[this.state.tableState] || null}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs=\"12\">\r\n              <Card className=\"card-chart\">\r\n                <CardBody>\r\n                  <QueryCard />\r\n                  <QueryCard />\r\n                  <QueryCard />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  Table,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  Dropdown,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nclass UserProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dropdownOpen: false,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"8\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <h5 className=\"title\">Edit Profile</h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <Row>\r\n                      <Col className=\"pr-md-1\" md=\"6\">\r\n                        <FormGroup>\r\n                          <label>Full Name</label>\r\n                          <Input placeholder=\"Name\" type=\"text\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col className=\"pl-md-1\" md=\"6\">\r\n                        <FormGroup>\r\n                          <label htmlFor=\"exampleInputEmail1\">\r\n                            Email address\r\n                          </label>\r\n                          <Input placeholder=\"mike@email.com\" type=\"email\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <FormGroup>\r\n                          <label>Phone Number</label>\r\n                          <Input placeholder=\"Phone Number\" type=\"number\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <FormGroup>\r\n                          <label>Password</label>\r\n                          <Input placeholder=\"password\" type=\"password\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\r\n                    Save\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"8\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <h5 className=\"title\">Create Profile</h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <Row>\r\n                      <Col className=\"pr-md-1\" md=\"6\">\r\n                        <FormGroup>\r\n                          <label>Full Name</label>\r\n                          <Input placeholder=\"Name\" type=\"text\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col className=\"pl-md-1\" md=\"6\">\r\n                        <FormGroup>\r\n                          <label htmlFor=\"exampleInputEmail1\">\r\n                            Email address\r\n                          </label>\r\n                          <Input placeholder=\"mike@email.com\" type=\"email\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <FormGroup>\r\n                          <label>Password</label>\r\n                          <Input placeholder=\"password\" type=\"password\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <FormGroup>\r\n                          <label>Phone Number</label>\r\n                          <Input placeholder=\"Phone Number\" type=\"number\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <FormGroup>\r\n                          <label>Role</label>\r\n                          <Dropdown\r\n                            isOpen={this.state.dropdownOpen}\r\n                            toggle={() => {\r\n                              this.setState({\r\n                                dropdownOpen: !this.state.dropdownOpen,\r\n                              });\r\n                            }}\r\n                          >\r\n                            <DropdownToggle>Select Role</DropdownToggle>\r\n                            <DropdownMenu>\r\n                              <DropdownItem header>\r\n                                Roles Available\r\n                              </DropdownItem>\r\n                              <DropdownItem>Super Admin</DropdownItem>\r\n                              <DropdownItem>Admin</DropdownItem>\r\n                            </DropdownMenu>\r\n                          </Dropdown>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\r\n                    Create\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"8\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardHeader>\r\n                    <h5 className=\"title\">Users List</h5>\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                    <Table className=\"tablesorter\" responsive>\r\n                      <thead className=\"text-primary\">\r\n                        <tr>\r\n                          <th>User Name</th>\r\n                          <th>User Email</th>\r\n                          <th>User Phone</th>\r\n                          <th className=\"text-center\">Actions</th>\r\n                        </tr>\r\n                      </thead>\r\n                    </Table>\r\n                  </CardBody>\r\n                </CardHeader>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;\r\n","import React, { Component } from \"react\";\r\nimport JoditEditor from \"jodit-react\";\r\n\r\nclass Editor extends Component {\r\n  state = {\r\n    content: \"\",\r\n  };\r\n  returnContent = () => {\r\n    return this.state.content\r\n  }\r\n  render() {\r\n    const config = {\r\n      readonly: false, // all options from https://xdsoft.net/jodit/doc/\r\n    };\r\n    return (\r\n      <JoditEditor\r\n        value={this.content}\r\n        config={config}\r\n        tabIndex={1} // tabIndex of textarea\r\n        onBlur={(newContent) => this.setState({ content: newContent })} // preferred to use only this option to update the content for performance reasons\r\n        onChange={(newContent) => {}}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Editor;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input, Col,Row } from \"reactstrap\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array),\r\n  };\r\n  static defaultProps = {\r\n    suggestions: [],\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props)\r\n    this.state = {\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: \"\",\r\n      id:null,\r\n    };\r\n  }\r\n  onChange = (e) => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n    const filteredSuggestions = suggestions.filter(\r\n      (suggestion) =>\r\n        suggestion.Name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n    });\r\n  };\r\n  returnId = () => {\r\n    return this.state.id;\r\n  }\r\n  removeId = (id) => {\r\n    var idArr = document.getElementById(this.props.id).value.split(\",\");\r\n    const index = idArr.indexOf(id);\r\n    if (index > -1) {\r\n      idArr.splice(index, 1);\r\n    }\r\n    document.getElementById(this.props.id).value = idArr.join();\r\n  };\r\n  onClick = (e) => {\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      id: e.currentTarget.id,\r\n      userInput: e.currentTarget.firstChild.firstChild.innerText,\r\n    });\r\n    if(this.props.setId) this.props.setId(e.currentTarget.id);\r\n  };\r\n  setData = (data) => {\r\n    this.setState({\r\n      id: this.props.suggestions.filter((e) => e.Name == data)[0].id,\r\n      userInput: data,\r\n    });\r\n  }\r\n  setDataUsingId = (Id) => {\r\n    this.setState({\r\n      id: this.props.suggestions.filter((e) => e.id == Id)[0].id,\r\n      userInput: this.props.suggestions.filter((e) => e.id == Id)[0].Name,\r\n    });\r\n  }\r\n  onKeyDown = (e) => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n    if (e.keyCode === 13) {\r\n      this.setState({\r\n        activeSuggestion: 0,\r\n        showSuggestions: false,\r\n        userInput: filteredSuggestions[activeSuggestion],\r\n      });\r\n    } else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n    } else if (e.keyCode === 40) {\r\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput,\r\n      },\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        var fieldLength = document.getElementById(this.props.id).clientWidth;\r\n        suggestionsListComponent = (\r\n          <div className=\"row\">\r\n            <ul\r\n              class={`suggestions ${this.props.className}`}\r\n              style={{ width: fieldLength }}\r\n            >\r\n              {filteredSuggestions.map((suggestion, index) => {\r\n                let className;\r\n                if (index === activeSuggestion) {\r\n                  className = \"suggestion-active\";\r\n                }\r\n                console.log(suggestion);\r\n                return (\r\n                  <li\r\n                    className={className}\r\n                    key={suggestion.id}\r\n                    id={suggestion.id}\r\n                    onClick={onClick}\r\n                  >\r\n                    <Row>\r\n                      <Col md=\"6\">{suggestion.Name}</Col>\r\n                      {suggestion.Phone != undefined ?  <Col md=\"6\">\r\n                        <em>{suggestion.Phone}</em>\r\n                      </Col> : null}\r\n                    </Row>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        );\r\n      } else {\r\n        var fieldLength = document.getElementById(this.props.id).clientWidth;\r\n        suggestionsListComponent = (\r\n          <div className=\"row justify-content-center\">\r\n            <ul class=\"suggestions\" style={{ width: fieldLength }}>\r\n              <li>\r\n                <em>No suggestions (or wait)</em>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <Input\r\n          type=\"text\"\r\n          class=\"form-control d-xl-flex\"\r\n          id={this.props.id}\r\n          placeholder={this.props.hint == null ? \"Name\" : this.props.hint}\r\n          onChange={onChange}\r\n          onKeyDown={onKeyDown}\r\n          style={{\r\n            marginTop: this.props.marginTop || \"17px\",\r\n            paddingLeft: \"12px\",\r\n            marginBottom: \"0px\",\r\n            Height: \"38px\",\r\n            paddingBottom: \"7px\",\r\n            width: \"100%\",\r\n            paddingRight: \"19px\",\r\n          }}\r\n          value={userInput}\r\n        />\r\n        <div className=\"row\">{suggestionsListComponent}</div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array),\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: [],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n    const filteredSuggestions = suggestions.filter(\r\n      (suggestion) =>\r\n        suggestion.Name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n    });\r\n  };\r\n  removeId = (id) => {\r\n    var idArr = document.getElementById(this.props.id).value.split(\",\");\r\n    const index = idArr.indexOf(id.toString());\r\n    if (index > -1) {\r\n      idArr.splice(index, 1);\r\n    }\r\n    document.getElementById(this.props.id).value = idArr.join();\r\n  };\r\n  removeAllIds = () => {\r\n    document.getElementById(this.props.id).value = \"\"\r\n  }\r\n  onClick = (e) => {\r\n    var idArr =\r\n      document.getElementById(this.props.id).value === \"\"\r\n        ? []\r\n        : document.getElementById(this.props.id).value.split(\",\");\r\n    if (idArr.includes(e.target.id)) {\r\n      alert(\"Already Added this Catagory\");\r\n    } else {\r\n      idArr.push(e.target.id);\r\n      document.getElementById(this.props.id).value = idArr.join();\r\n      this.props.categoryChipHit({\r\n        name: e.currentTarget.innerText,\r\n        id: e.target.id,\r\n      });\r\n    }\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: \"\",\r\n    });\r\n  };\r\n  addItemToUpdate = (data) => {\r\n    document.getElementById(this.props.id).value = data.id;\r\n    this.props.ChipHitAfterRemoving({\r\n      name: data.name,\r\n      id: data.id,\r\n    });\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: \"\",\r\n    });\r\n  }\r\n  onKeyDown = (e) => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n    if (e.keyCode === 13) {\r\n      this.setState({\r\n        activeSuggestion: 0,\r\n        showSuggestions: false,\r\n        userInput: filteredSuggestions[activeSuggestion],\r\n      });\r\n    } else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n    } else if (e.keyCode === 40) {\r\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput,\r\n      },\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        var fieldLength = document.getElementById(\"txtcategory\").clientWidth;\r\n        suggestionsListComponent = (\r\n          <div className=\"row\">\r\n            <ul class=\"suggestions\" style={{ width: fieldLength }}>\r\n              {filteredSuggestions.map((suggestion, index) => {\r\n                let className;\r\n                if (index === activeSuggestion) {\r\n                  className = \"suggestion-active\";\r\n                }\r\n                return (\r\n                  <li\r\n                    className={className}\r\n                    key={suggestion.id}\r\n                    id={suggestion.id}\r\n                    onClick={onClick}\r\n                  >\r\n                    {suggestion.Name}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        );\r\n      } else {\r\n        var fieldLength = document.getElementById(\"txtcategory\").clientWidth;\r\n        suggestionsListComponent = (\r\n          <div className=\"row justify-content-center\">\r\n            <ul class=\"suggestions\" style={{ width: fieldLength }}>\r\n              <li>\r\n                <em>No suggestions</em>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <input type=\"hidden\" id={this.props.id} />\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control d-xl-flex\"\r\n          id=\"txtcategory\"\r\n          placeholder={this.props.hint == null ? \"Name\" : this.props.hint}\r\n          onChange={onChange}\r\n          onKeyDown={onKeyDown}\r\n          style={{\r\n            marginTop: \"17px\",\r\n            paddingLeft: \"12px\",\r\n            Height: \"38px\",\r\n            paddingBottom: \"7px\",\r\n            width: \"100%\",\r\n            paddingRight: \"19px\",\r\n          }}\r\n          value={userInput}\r\n        />\r\n        <div className=\"row\">{suggestionsListComponent}</div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CategoryChips extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chips: [],\r\n    };\r\n  }\r\n  addChip = (val) => {\r\n    var tempChips = this.state.chips;\r\n    tempChips.push(val);\r\n    this.setState({\r\n      chips: tempChips,\r\n    });\r\n  };\r\n  addChipByremoving = (val) => {\r\n    this.setState(\r\n      {\r\n        chips: [],\r\n      },\r\n      () => {\r\n        var tempChips = this.state.chips;\r\n        tempChips.push(val);\r\n        this.setState({\r\n          chips: tempChips,\r\n        });\r\n      }\r\n    );\r\n  }\r\n  removeAllChips = () => {\r\n    this.setState({\r\n      chips: [],\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"root-chips row\">\r\n          {this.state.chips.length == 0 ? (\r\n            <em>Nothing've been Added Yet!</em>\r\n          ) : (\r\n            this.state.chips.map((item) => (\r\n              <div\r\n                key={item.id}\r\n                onClick={() => {\r\n                  this.props.removeId(item.id);\r\n                  var temArr = this.state.chips.filter((element) => {\r\n                    return element.id != item.id;\r\n                  });\r\n                  this.setState({\r\n                    chips: temArr,\r\n                  });\r\n                }}\r\n              >\r\n                {item.name}\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CategoryChips;\r\n","import React,{ Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n} from \"reactstrap\";\r\nexport default class Agendas extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          id:\"\",\r\n          name: \"\",\r\n          venue: \"\",\r\n          startTime: \"\",\r\n          endTime: \"\",\r\n          remarks: \"\",\r\n          startDate: \"\",\r\n        };\r\n    }\r\n    returnState = () => {\r\n        return this.state\r\n    }\r\n    resetState = () => {\r\n      this.setState({\r\n        name: \"\",\r\n        venue: \"\",\r\n        startTime: \"\",\r\n        endTime: \"\",\r\n        remarks: \"\",\r\n        startDate: \"\",\r\n        id:\"\",\r\n      });\r\n    }\r\n    setData = (data) => {\r\n      this.setState({\r\n        id:data.id,\r\n        name: data.name,\r\n        venue: data.venue,\r\n        startTime: new Date(data.startTime).toISOString().split(\"Z\")[0],\r\n        endTime: new Date(data.endTime).toISOString().split(\"Z\")[0],\r\n        remarks: data.remarks,\r\n        startDate: data.startDate,\r\n      });\r\n    }\r\n    render() {\r\n        return (\r\n            <Row>\r\n              <Col md=\"12\">\r\n                <FormGroup>\r\n                  <label>Agendas Name (Particulars)</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Particulars\"\r\n                    value={this.state.name}\r\n                    onChange={(e) => {\r\n                      this.setState({\r\n                        name: e.target.value,\r\n                      });\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <label>Agenda Start Date & Time</label>\r\n                  <Input\r\n                    type=\"datetime-local\"\r\n                    value={this.state.startTime}\r\n                    onChange={(e) => {\r\n                      console.log(e.target.value)\r\n                      this.setState({\r\n                        startTime: e.target.value,\r\n                        startDate: e.target.value,\r\n                      });\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <label>Agenda End Date & Time</label>\r\n                  <Input\r\n                    type=\"datetime-local\"\r\n                    value={this.state.endTime}\r\n                    onChange={(e) => {\r\n                      this.setState({\r\n                        endTime: e.target.value,\r\n                      });\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"12\">\r\n                <FormGroup>\r\n                  <label>Agenda Venue</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Venue\"\r\n                    value={this.state.venue}\r\n                    onChange={(e) => {\r\n                      this.setState({\r\n                        venue: e.target.value,\r\n                      });\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"12\">\r\n                <FormGroup>\r\n                  <label>Remarks</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Remarks/Dress Code\"\r\n                    value={this.state.remarks}\r\n                    onChange={(e) => {\r\n                      this.setState({\r\n                        remarks: e.target.value,\r\n                      });\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n        );\r\n                     \r\n    }\r\n}","import React,{ Component } from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    Input,\r\n} from \"reactstrap\";\r\n\r\nexport default class Transfers extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          id: undefined,\r\n          name: \"\",\r\n          origin: \"\",\r\n          destination: \"\",\r\n          mode: \"\",\r\n          vehicleNumber: \"\",\r\n          driverName: \"\",\r\n          distance: \"\",\r\n          driverPhone: \"\",\r\n          journeyTime: \"\",\r\n          transferDate: \"\",\r\n        };\r\n    }\r\n\r\n    returnState = () => {\r\n        return this.state\r\n    }\r\n    setData = (data) => {\r\n      this.setState({\r\n        id:data.id,\r\n        name: data.name,\r\n        origin: data.origin,\r\n        destination: data.destination,\r\n        mode: data.mode,\r\n        vehicleNumber: data.vehicleNumber,\r\n        driverName: data.driverName,\r\n        distance: data.distance,\r\n        driverPhone: data.driverPhone,\r\n        journeyTime: data.journeyTime,\r\n        transferDate: data.transferDate.split(\"Z\")[0],\r\n      });\r\n    }\r\n    render() {\r\n        return (\r\n          <Col md=\"12\">\r\n            <Col md=\"12\" className=\"category-col\">\r\n              <label>Transfer Name</label>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Transfer Name\"\r\n                      value={this.state.name}\r\n                      onChange={(e) => {\r\n                        this.setState({\r\n                          name: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></Input>\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <label>Transfer Date</label>\r\n                    <Input\r\n                      type=\"datetime-local\"\r\n                      value={this.state.transferDate}\r\n                      onChange={(e) => {\r\n                        this.setState({\r\n                          transferDate: e.target.value,\r\n                        });\r\n                      }}\r\n                    ></Input>\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <Row>\r\n                <Col md=\"6\">\r\n                  <label>Mode of Transfer</label>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Vehicle Type\"\r\n                          value={this.state.mode}\r\n                          onChange={(e) => {\r\n                            this.setState({\r\n                              mode: e.target.value,\r\n                            });\r\n                          }}\r\n                        ></Input>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <label>Vehicle Number</label>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Vehicle Number\"\r\n                          value={this.state.vehicleNumber}\r\n                          onChange={(e) => {\r\n                            this.setState({\r\n                              vehicleNumber: e.target.value,\r\n                            });\r\n                          }}\r\n                        ></Input>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md=\"6\">\r\n                  <label>Driver Name</label>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Name\"\r\n                          value={this.state.driverName}\r\n                          onChange={(e) => {\r\n                            this.setState({\r\n                              driverName: e.target.value,\r\n                            });\r\n                          }}\r\n                        ></Input>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <label>Driver Phone</label>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Input\r\n                          type=\"number\"\r\n                          placeholder=\"Phone Number\"\r\n                          value={this.state.driverPhone}\r\n                          onChange={(e) => {\r\n                            this.setState({\r\n                              driverPhone: e.target.value,\r\n                            });\r\n                          }}\r\n                        ></Input>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md=\"6\">\r\n                  <label>Origin</label>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Location\"\r\n                          value={this.state.origin}\r\n                          onChange={(e) => {\r\n                            this.setState({\r\n                              origin: e.target.value,\r\n                            });\r\n                          }}\r\n                        ></Input>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <label>Destination</label>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Location\"\r\n                          value={this.state.destination}\r\n                          onChange={(e) => {\r\n                            this.setState({\r\n                              destination: e.target.value,\r\n                            });\r\n                          }}\r\n                        ></Input>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md=\"6\">\r\n                  <label>Total Distance</label>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Distance (Kms)\"\r\n                          value={this.state.distance}\r\n                          onChange={(e) => {\r\n                            this.setState({\r\n                              distance: e.target.value,\r\n                            });\r\n                          }}\r\n                        ></Input>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <label>Journey Time</label>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          placeholder=\"Time\"\r\n                          value={this.state.journeyTime}\r\n                          onChange={(e) => {\r\n                            this.setState({\r\n                              journeyTime: e.target.value,\r\n                            });\r\n                          }}\r\n                        ></Input>\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Col>\r\n        );\r\n\r\n    }\r\n}","import React, { createRef } from \"react\";\r\nimport Editor from \"../components/sub/Editor\";\r\nimport Autocomplete from \"../components/sub/autosuggest-norm\";\r\nimport Axios from \"../components/sub/axios\";\r\nimport AutocompleteSimple from \"../components/sub/autosuggest\";\r\nimport CategoryChips from \"../components/sub/categorychips\";\r\nimport Agendas from \"../components/sub/agendas\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Table,\r\n} from \"reactstrap\";\r\nimport Transfers from \"components/sub/transfers\";\r\nimport dist from \"react-notification-alert\";\r\nconst s26 = {\r\n  width: \"100%\",\r\n};\r\n\r\nconst s50 = {\r\n  marginLeft: \"15px\",\r\n  marginTop: \"14px\",\r\n};\r\n\r\nclass ManageEvents extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.EditorRef = createRef();\r\n    this.EventAttendies = createRef();\r\n    this.agendaRef = createRef();\r\n    this.countryRef = createRef();\r\n    this.customerRef = createRef();\r\n    this.cityRef = createRef();\r\n\r\n    this.representativeNameRef = createRef();\r\n    this.RepresentativeNameAutocompleteRef = createRef();\r\n\r\n    this.representativeCategoryRef = createRef();\r\n    this.RepresentativeCategoryAutocompleteRef = createRef();\r\n    this.state = {\r\n      eventId: null,\r\n      eventName: \"\",\r\n      eventBy: null,\r\n      eventFrom: \"\",\r\n      eventTo: \"\",\r\n      venueName: \"\",\r\n      venueUrl: \"\",\r\n      eventImage: \"\",\r\n      eventPlackCardImage: \"\",\r\n      addedAttendie: true,\r\n      eventPlackCardImageName: \"Choose Image File\",\r\n      eventImage: \"\",\r\n      eventImageName: \"Choose Image File\",\r\n      welcomeNote: \"\",\r\n      countryId: null,\r\n      cityId: null,\r\n      customerId: null,\r\n      createNewRepresentative: false,\r\n      createNewRepresentativeCategory: false,\r\n      createdNewRepresentativeCategory: true,\r\n      createdRepresentative: true,\r\n      suggestionCities: [],\r\n      sugggestionCustomers: [],\r\n      suggestionCountries: [],\r\n      transfers: [],\r\n      agendas: [],\r\n      currTransferElement: null,\r\n      rIsFilled: true,\r\n      representativePhone: \"\",\r\n      representativeName: \"\",\r\n      representativeCategoryName: \"\",\r\n      Representatives: [],\r\n      EventAttendies: [],\r\n      representativeArr: [],\r\n      RepresentativesCategory: [],\r\n      TicketsSame: false,\r\n      isEditorOpen:false,\r\n      aTicketFileName: \"Choose Ticket File\",\r\n      dTicketFileName: \"Choose Ticket File\",\r\n      updatingAgenda: false,\r\n      updatingAttendee: false,\r\n      updatingAgendaObject: null,\r\n      updatingRepresentatives: false,\r\n      updatingRepresentativesNameId: null,\r\n      updatingRepresentativesCategoryId: null,\r\n      updatingAttendeePhone: null,\r\n    };\r\n  }\r\n  createNewTransfer = (data) => {\r\n    var tempTansfers = [];\r\n    tempTansfers = this.state.transfers;\r\n    var transferRef = createRef();\r\n    tempTansfers.push({\r\n      component: (\r\n        <Transfers ref={transferRef} key={this.state.transfers.length + 1} />\r\n      ),\r\n      ref: transferRef,\r\n      isFilled: data ? true : false,\r\n      data: data || {},\r\n    });\r\n    this.setState({\r\n      transfers: tempTansfers,\r\n      rIsFilled: data ? !!this.state.rIsFilled : !this.state.rIsFilled,\r\n    });\r\n  };\r\n  haveAnythingEmpty = (formData) => {\r\n    for (var key in formData) {\r\n      if (formData[key] === \"\") {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  setDataToFields = (u) => {\r\n    var data = JSON.parse(u).data;\r\n    this.setState({\r\n      eventId: data.id,\r\n      eventName: data.name,\r\n      eventBy: data.CustomerId,\r\n      eventFrom: new Date(data.liveFrom).toISOString().split(\"T\")[0],\r\n      eventTo: new Date(data.liveTo).toISOString().split(\"T\")[0],\r\n      venueName: data.Locations.name,\r\n      venueUrl: data.Locations.url,\r\n      customerId: data.CustomerId,\r\n      eventPlackCardImageName: data.plackCardImage.split(\"/\")[\r\n        data.plackCardImage.split(\"/\").length - 1\r\n      ],\r\n      eventImageName: data.eventImage.split(\"/\")[\r\n        data.eventImage.split(\"/\").length - 1\r\n      ],\r\n      welcomeNote: data.welcomeNote,\r\n      countryId: data.Locations.CountryId,\r\n      cityId: data.Locations.CityId,\r\n      agendas: data.Agendas.map((a) => {\r\n        a = { ...a, startTime: new Date(a.startDate + \"T\" + a.startTime) };\r\n        a = { ...a, endTime: new Date(a.startDate + \"T\" + a.endTime) };\r\n        return a;\r\n      }),\r\n      EventAttendies: data.Attendees.map((a) => {\r\n        return {\r\n          ...a,\r\n          isSameAsArriving: a.dticket == null,\r\n        };\r\n      }),\r\n      representativeArr: data.Representatives_for_Events.map((a) => {\r\n        var obj = {};\r\n        obj[\"Name\"] = a.Employees.name;\r\n        obj[\"Category\"] = a.Representative_Categories.name;\r\n        obj[\"RepresentativeCategoryId\"] = a.RepresentativeCategoryId;\r\n        obj[\"EmployeeId\"] = a.EmployeeId;\r\n        obj[\"id\"] = a.id;\r\n        return obj;\r\n      }),\r\n    });\r\n    data.Transfers.map((elem) => {\r\n      this.createNewTransfer(elem);\r\n    });\r\n    this.countryRef.current.setDataUsingId(this.state.countryId);\r\n    this.cityRef.current.setDataUsingId(this.state.cityId);\r\n    this.customerRef.current.setDataUsingId(this.state.customerId);\r\n  };\r\n  componentWillMount = () => {\r\n    Promise.all([\r\n      Axios.get(\"/location/country/get-all\"),\r\n      Axios.get(\"/location/city/get-all\"),\r\n      Axios.get(\"/customer/get-all\"),\r\n      Axios.get(\"/representative/category/get-all\"),\r\n      Axios.get(\"/representative/employee/get-all\"),\r\n    ]).then(([u, a, d, e, f]) => {\r\n      this.setState({\r\n        suggestionCountries: u.data.map((a) => {\r\n          var b = {};\r\n          b[\"Name\"] = a.name;\r\n          b[\"id\"] = a.id;\r\n          return b;\r\n        }),\r\n        suggestionCities: a.data.map((a) => {\r\n          var b = {};\r\n          b[\"Name\"] = a.name;\r\n          b[\"id\"] = a.id;\r\n          return b;\r\n        }),\r\n        sugggestionCustomers: d.data.map((a) => {\r\n          var b = {};\r\n          b[\"Name\"] = a.name;\r\n          b[\"id\"] = a.id;\r\n          b[\"Phone\"] = a.phone;\r\n          return b;\r\n        }),\r\n        Representatives: f.data.map((a) => {\r\n          var b = {};\r\n          b[\"Name\"] = a.name;\r\n          b[\"id\"] = a.id;\r\n          b[\"Phone\"] = a.phone;\r\n          return b;\r\n        }),\r\n        RepresentativesCategory: e.data.map((a) => {\r\n          var b = {};\r\n          b[\"Name\"] = a.name;\r\n          b[\"id\"] = a.id;\r\n          return b;\r\n        }),\r\n      });\r\n      if (localStorage.getItem(\"eventDataToUpdate\"))\r\n        this.setDataToFields(localStorage.getItem(\"eventDataToUpdate\"));\r\n    });\r\n  };\r\n  categoryChipHit = (val) => {\r\n    this.representativeNameRef.current.addChip(val);\r\n  };\r\n  categoryChipHitAfterRemoving = (val) => {\r\n    this.representativeCategoryRef.current.addChipByremoving(val);\r\n  };\r\n  representativesNameChipHitAfterRemoving = (val) => {\r\n    this.representativeNameRef.current.addChipByremoving(val);\r\n  };\r\n  categoryNameChipHit = (val) => {\r\n    this.representativeCategoryRef.current.addChip(val);\r\n  };\r\n  categoryIdfromHiddenField = (val) => {\r\n    this.RepresentativeNameAutocompleteRef.current.removeId(val);\r\n  };\r\n  categoryIdfromHiddenField_CategoryName = (val) => {\r\n    this.RepresentativeCategoryAutocompleteRef.current.removeId(val);\r\n  };\r\n  modifyDataWithEventId = (EventId) => {\r\n    //represntatives...\r\n    var representativeTemp = this.state.representativeArr;\r\n    var newRepresentativeArr = representativeTemp.map((obj) => ({\r\n      ...obj,\r\n      EventId: EventId,\r\n    }));\r\n    //event attendies...\r\n    var EventAttendiesTemp = this.state.EventAttendies;\r\n    var newAttendiesObj = EventAttendiesTemp.map((obj) => ({\r\n      ...obj,\r\n      EventId: EventId,\r\n    }));\r\n    //event transfers...\r\n    var transfersTemp = this.state.transfers.map((a) => a.data);\r\n    var newTransferObj = transfersTemp.map((obj) => ({\r\n      ...obj,\r\n      EventId: EventId,\r\n    }));\r\n\r\n    //event agendas...\r\n    var eventAgendasTemp = this.state.agendas;\r\n    var newAgendasObj = eventAgendasTemp.map((obj) => ({\r\n      ...obj,\r\n      EventId: EventId,\r\n    }));\r\n\r\n    return {\r\n      Representatives: newRepresentativeArr,\r\n      Attendies: newAttendiesObj,\r\n      Transfers: newTransferObj,\r\n      Agendas: newAgendasObj,\r\n    };\r\n  };\r\n  submitEvent = (e) => {\r\n    e.preventDefault();\r\n    var eventFormData = new FormData();\r\n    eventFormData.append(\"name\", this.state.eventName);\r\n    eventFormData.append(\"liveFrom\", this.state.eventFrom);\r\n    eventFormData.append(\"liveTo\", this.state.eventFrom);\r\n    eventFormData.append(\"CustomerId\", this.state.eventBy);\r\n    eventFormData.append(\"PlackCardImage\", this.state.eventPlackCardImage);\r\n    eventFormData.append(\"desc\", this.state.welcomeNote);\r\n    eventFormData.append(\r\n      \"PlackCardImageName\",\r\n      this.state.eventPlackCardImageName\r\n    );\r\n    eventFormData.append(\"EventImage\", this.state.eventImage);\r\n    eventFormData.append(\"EventImageName\", this.state.eventImageName);\r\n    eventFormData.append(\"CityId\", this.state.cityId);\r\n    eventFormData.append(\"CountryId\", this.state.countryId);\r\n    eventFormData.append(\"url\", this.state.venueUrl);\r\n    eventFormData.append(\"venueName\", this.state.venueName);\r\n\r\n    if (this.state.eventId) {\r\n      //this is an update condition...\r\n      var EventId = this.state.eventId;\r\n      Axios.put(\"/events/update/\" + this.state.eventId, eventFormData).then(\r\n        (u) => {\r\n          var data = this.modifyDataWithEventId(EventId);\r\n          Axios.post(\"/events/upload-updated\", {\r\n            representatives: data.Representatives,\r\n            transfersData: data.Transfers,\r\n            attendeesData: data.Attendies,\r\n            agendasData: data.Agendas,\r\n            EventId: EventId,\r\n          }).then((a) => {\r\n            console.log(a);\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      Axios.post(\"/events/create\", eventFormData).then((u) => {\r\n        if (u.data.status == \"success\") {\r\n          var EventId = u.data.EventId;\r\n          var data = this.modifyDataWithEventId(EventId);\r\n          Axios.post(\"/events/upload\", {\r\n            representatives: data.Representatives,\r\n            transfersData: data.Transfers,\r\n            attendeesData: data.Attendies,\r\n            agendasData: data.Agendas,\r\n            EventId: EventId,\r\n          }).then((u) => {});\r\n        }\r\n      });\r\n    }\r\n  };\r\n  setCountryId = (id) => {\r\n    this.setState({\r\n      countryId: id,\r\n    });\r\n  };\r\n  setCityId = (id) => {\r\n    this.setState({\r\n      cityId: id,\r\n    });\r\n  };\r\n  setCustomerId = (id) => {\r\n    this.setState({\r\n      eventBy: id,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle tag=\"h2\">Manage Events</CardTitle>\r\n                  <h5 className=\"card-category\">Create Event</h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <FormGroup>\r\n                          <label>Event Name</label>\r\n                          <Input\r\n                            placeholder=\"Event Name\"\r\n                            type=\"text\"\r\n                            value={this.state.eventName}\r\n                            onChange={(e) => {\r\n                              this.setState({\r\n                                eventName: e.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <FormGroup>\r\n                          <label>Event By</label>\r\n                          <Autocomplete\r\n                            suggestions={this.state.sugggestionCustomers}\r\n                            hint={\"Customer Name\"}\r\n                            marginTop={\"0px\"}\r\n                            id={\"txtEventBy\"}\r\n                            paddingBottom={\"0px\"}\r\n                            ref={this.customerRef}\r\n                            setId={this.setCustomerId}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <label>Event From</label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            value={this.state.eventFrom}\r\n                            onChange={(e) => {\r\n                              this.setState({\r\n                                eventFrom: e.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <label>Event To</label>\r\n                          <Input\r\n                            type=\"date\"\r\n                            value={this.state.eventTo}\r\n                            onChange={(e) => {\r\n                              this.setState({\r\n                                eventTo: e.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <label>Venue Name</label>\r\n                          <Input\r\n                            placeholder=\"Full Name\"\r\n                            type=\"text\"\r\n                            value={this.state.venueName}\r\n                            onChange={(e) => {\r\n                              this.setState({\r\n                                venueName: e.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <label>Venue Location Url</label>\r\n                          <Input\r\n                            placeholder=\"Url\"\r\n                            type=\"text\"\r\n                            value={this.state.venueUrl}\r\n                            onChange={(e) => {\r\n                              this.setState({\r\n                                venueUrl: e.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <label>Pick Plack Card Image</label>\r\n                        <div className=\"custom-file mb-2\">\r\n                          <Input\r\n                            type=\"file\"\r\n                            className=\"custom-file-input\"\r\n                            onChange={(e) => {\r\n                              this.setState({\r\n                                eventPlackCardImage: e.target.files[0],\r\n                                eventPlackCardImageName: e.target.files[0].name,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <label\r\n                            className=\"custom-file-label\"\r\n                            htmlFor=\"customFileThumbanail\"\r\n                          >\r\n                            {this.state.eventPlackCardImageName}\r\n                          </label>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <label>Pick Event Image</label>\r\n                        <div className=\"custom-file mb-2\">\r\n                          <Input\r\n                            type=\"file\"\r\n                            className=\"custom-file-input\"\r\n                            onChange={(e) => {\r\n                              this.setState({\r\n                                eventImage: e.target.files[0],\r\n                                eventImageName: e.target.files[0].name,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <label\r\n                            className=\"custom-file-label\"\r\n                            htmlFor=\"customFileThumbanail\"\r\n                          >\r\n                            {this.state.eventImageName}\r\n                          </label>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <label>Country</label>\r\n                          <Autocomplete\r\n                            suggestions={this.state.suggestionCountries}\r\n                            hint={\"Country Name\"}\r\n                            marginTop={\"0px\"}\r\n                            id={\"txtCountrySuggest\"}\r\n                            ref={this.countryRef}\r\n                            setId={this.setCountryId}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <label>City</label>\r\n                          <Autocomplete\r\n                            suggestions={this.state.suggestionCities}\r\n                            hint={\"City Name\"}\r\n                            marginTop={\"0px\"}\r\n                            id={\"txtCitySuggest\"}\r\n                            ref={this.cityRef}\r\n                            setId={this.setCityId}\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"12\">\r\n                        <label>Welcome Note</label>\r\n                        <Row>\r\n                          <Col md=\"12\">\r\n                            <Button\r\n                              color={this.state.isEditorOpen ? \"danger\" : \"\"}\r\n                              onClick={() => {\r\n                                if(this.state.isEditorOpen){\r\n                                  this.setState({\r\n                                    welcomeNote: this.EditorRef.current.returnContent(),\r\n                                  });\r\n                                }\r\n                                this.setState({\r\n                                  isEditorOpen: !this.state.isEditorOpen,\r\n                                });\r\n                              }}\r\n                            >\r\n                              {this.state.isEditorOpen\r\n                                ? \"Save & Close Editor\"\r\n                                : \"Open Editor\"}\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                        {this.state.isEditorOpen ? (\r\n                          <Editor ref={this.EditorRef} />\r\n                        ) : null}\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle tag=\"h2\">Event Representatives</CardTitle>\r\n                  <h5 className=\"card-category\">Add Representatives</h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      {this.state.createNewRepresentative ? (\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label>New Representative</label>\r\n                            <Input\r\n                              type=\"text\"\r\n                              placeholder=\"Name\"\r\n                              value={this.state.representativeName}\r\n                              onChange={(e) => {\r\n                                this.setState({\r\n                                  representativeName: e.target.value,\r\n                                });\r\n                              }}\r\n                            ></Input>\r\n                          </FormGroup>\r\n                          <FormGroup>\r\n                            <label>Phone Number</label>\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                              }}\r\n                            >\r\n                              <Input\r\n                                name=\"search\"\r\n                                className=\"form-control\"\r\n                                style={{\r\n                                  flex: \"2\",\r\n                                  marginTop: \"4px\",\r\n                                }}\r\n                                value={this.state.representativePhone}\r\n                                onChange={(e) => {\r\n                                  this.setState({\r\n                                    representativePhone: e.target.value,\r\n                                  });\r\n                                }}\r\n                                placeholder=\"Phone Number\"\r\n                              />\r\n                              <button\r\n                                disabled={!this.state.createdRepresentative}\r\n                                style={{\r\n                                  marginLeft: \"15px\",\r\n                                }}\r\n                                class=\"btn btn-success\"\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  this.setState({\r\n                                    createdRepresentative: !this.state\r\n                                      .createdRepresentative,\r\n                                  });\r\n                                  Axios.post(\r\n                                    \"/representative/employee/create\",\r\n                                    {\r\n                                      name: this.state.representativeName,\r\n                                      phone: this.state.representativePhone,\r\n                                    }\r\n                                  ).then((u) => {\r\n                                    if (u.data.message == \"success\") {\r\n                                      var temp = this.state.Representatives;\r\n                                      temp.push({\r\n                                        Name: this.state.representativeName,\r\n                                        Phone: this.state.representativePhone,\r\n                                        id: u.data.data,\r\n                                      });\r\n                                      this.setState({\r\n                                        createdRepresentative: !this.state\r\n                                          .createdRepresentative,\r\n                                        representativeName: \"\",\r\n                                        representativePhone: \"\",\r\n                                        createNewRepresentative: !this.state\r\n                                          .createNewRepresentative,\r\n                                        Representatives: temp,\r\n                                      });\r\n                                    }\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {this.state.createdRepresentative\r\n                                  ? \"Save\"\r\n                                  : \"Saving...\"}\r\n                              </button>\r\n                              <button\r\n                                disabled={!this.state.createdRepresentative}\r\n                                style={{\r\n                                  marginLeft: \"15px\",\r\n                                  padding: \"11px\",\r\n                                }}\r\n                                class=\"btn btn-danger\"\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  this.setState({\r\n                                    representativeName: \"\",\r\n                                    representativePhone: \"\",\r\n                                    createNewRepresentative: !this.state\r\n                                      .createNewRepresentative,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                <i className=\"tim-icons icon-simple-remove\" />\r\n                              </button>\r\n                            </div>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      ) : (\r\n                        <Col md=\"12\" className=\"category-col\">\r\n                          <label>Representative Name</label>\r\n                          <form\r\n                            class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\r\n                            style={s26}\r\n                          >\r\n                            <div\r\n                              className=\"form-group d-inline mb-2\"\r\n                              style={{ flex: \"1\" }}\r\n                            >\r\n                              <AutocompleteSimple\r\n                                suggestions={this.state.Representatives}\r\n                                id={\"txtRepresentatveSuggest\"}\r\n                                categoryChipHit={this.categoryChipHit}\r\n                                ChipHitAfterRemoving={\r\n                                  this.representativesNameChipHitAfterRemoving\r\n                                }\r\n                                ref={this.RepresentativeNameAutocompleteRef}\r\n                              />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                              <button\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  this.setState({\r\n                                    createNewRepresentative: !this.state\r\n                                      .createNewRepresentative,\r\n                                  });\r\n                                }}\r\n                                className=\"btn btn-success\"\r\n                                style={s50}\r\n                              >\r\n                                + New\r\n                              </button>\r\n                            </div>\r\n                          </form>\r\n                          <CategoryChips\r\n                            ref={this.representativeNameRef}\r\n                            removeId={this.categoryIdfromHiddenField}\r\n                          />\r\n                        </Col>\r\n                      )}\r\n                      {this.state.createNewRepresentativeCategory ? (\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <label>New Representative Category</label>\r\n                            <div\r\n                              style={{\r\n                                display: \"flex\",\r\n                              }}\r\n                            >\r\n                              <Input\r\n                                name=\"search\"\r\n                                className=\"form-control\"\r\n                                value={this.state.representativeCategoryName}\r\n                                onChange={(e) => {\r\n                                  this.setState({\r\n                                    representativeCategoryName: e.target.value,\r\n                                  });\r\n                                }}\r\n                                style={{\r\n                                  flex: \"2\",\r\n                                  marginTop: \"4px\",\r\n                                }}\r\n                                placeholder=\"Category Name\"\r\n                              />\r\n                              <button\r\n                                style={{\r\n                                  marginLeft: \"15px\",\r\n                                }}\r\n                                disabled={\r\n                                  !this.state.createdNewRepresentativeCategory\r\n                                }\r\n                                class=\"btn btn-success\"\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  this.setState({\r\n                                    createdNewRepresentativeCategory: !this\r\n                                      .state.createdNewRepresentativeCategory,\r\n                                  });\r\n                                  Axios.post(\r\n                                    \"/representative/category/create\",\r\n                                    {\r\n                                      name: this.state\r\n                                        .representativeCategoryName,\r\n                                    }\r\n                                  ).then((u) => {\r\n                                    if (u.data.message == \"success\") {\r\n                                      var temp = this.state\r\n                                        .RepresentativesCategory;\r\n                                      temp.push({\r\n                                        Name: this.state\r\n                                          .representativeCategoryName,\r\n                                        id: u.data.data,\r\n                                      });\r\n                                      this.setState({\r\n                                        RepresentativesCategory: temp,\r\n                                        createdNewRepresentativeCategory: !this\r\n                                          .state\r\n                                          .createdNewRepresentativeCategory,\r\n                                        representativeCategoryName: \"\",\r\n                                        createNewRepresentativeCategory: !this\r\n                                          .state\r\n                                          .createNewRepresentativeCategory,\r\n                                      });\r\n                                    }\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {this.state.createdNewRepresentativeCategory\r\n                                  ? \"Save\"\r\n                                  : \"Saving...\"}\r\n                              </button>\r\n                              <button\r\n                                style={{\r\n                                  marginLeft: \"15px\",\r\n                                  padding: \"11px\",\r\n                                }}\r\n                                class=\"btn btn-danger\"\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  this.setState({\r\n                                    representativeName: \"\",\r\n                                    representativePhone: \"\",\r\n                                    createNewRepresentativeCategory: !this.state\r\n                                      .createNewRepresentativeCategory,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                <i className=\"tim-icons icon-simple-remove\" />\r\n                              </button>\r\n                            </div>\r\n                          </FormGroup>\r\n                        </Col>\r\n                      ) : (\r\n                        <Col md=\"12\" className=\"category-col\">\r\n                          <label>Representative Category</label>\r\n                          <form\r\n                            class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\r\n                            style={s26}\r\n                          >\r\n                            <div\r\n                              className=\"form-group d-inline mb-2\"\r\n                              style={{ flex: \"1\" }}\r\n                            >\r\n                              <AutocompleteSimple\r\n                                suggestions={this.state.RepresentativesCategory}\r\n                                id={\"txtRepresentatveCategorySuggest\"}\r\n                                categoryChipHit={this.categoryNameChipHit}\r\n                                ChipHitAfterRemoving={\r\n                                  this.categoryChipHitAfterRemoving\r\n                                }\r\n                                ref={this.RepresentativeCategoryAutocompleteRef}\r\n                              />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                              <button\r\n                                class=\"btn btn-success\"\r\n                                type=\"button\"\r\n                                style={s50}\r\n                                onClick={(e) => {\r\n                                  e.preventDefault();\r\n                                  this.setState({\r\n                                    createNewRepresentativeCategory: !this.state\r\n                                      .createNewRepresentativeCategory,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                + New\r\n                              </button>\r\n                            </div>\r\n                          </form>\r\n                          <CategoryChips\r\n                            ref={this.representativeCategoryRef}\r\n                            removeId={\r\n                              this.categoryIdfromHiddenField_CategoryName\r\n                            }\r\n                          />\r\n                        </Col>\r\n                      )}\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <Table className=\"tablesorter\" responsive>\r\n                        <thead className=\"text-primary\">\r\n                          <tr>\r\n                            <th>Representative Name</th>\r\n                            <th>Category</th>\r\n                            <th className=\"text-center\">Actions</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {this.state.representativeArr.map((a) => (\r\n                            <tr>\r\n                              <td>{a.Name}</td>\r\n                              <td>{a.Category}</td>\r\n                              <td>\r\n                                <Row>\r\n                                  <Col\r\n                                    md=\"6\"\r\n                                    className=\"d-flex justify-content-center\"\r\n                                    style={{\r\n                                      padding: \"0px\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                      var temp = this.state.representativeArr;\r\n                                      const index = temp.indexOf(a);\r\n                                      if (index > -1) {\r\n                                        temp.splice(index, 1);\r\n                                      }\r\n                                      this.setState({\r\n                                        representativeArr: temp,\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    <i\r\n                                      className=\"tim-icons icon-trash-simple hoverable-danger\"\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                    />\r\n                                  </Col>\r\n                                  <Col\r\n                                    style={{\r\n                                      padding: \"0px\",\r\n                                    }}\r\n                                    md=\"6\"\r\n                                    className=\"d-flex justify-content-center\"\r\n                                    onClick={() => {\r\n                                      this.setState({\r\n                                        updatingRepresentatives: true,\r\n                                        updatingRepresentativesNameId:\r\n                                          a.EmployeeId,\r\n                                        updatingRepresentativesCategoryId:\r\n                                          a.RepresentativeCategoryId,\r\n                                      });\r\n                                      this.RepresentativeNameAutocompleteRef.current.addItemToUpdate(\r\n                                        { id: a.EmployeeId, name: a.Name }\r\n                                      );\r\n                                      this.RepresentativeCategoryAutocompleteRef.current.addItemToUpdate(\r\n                                        {\r\n                                          id: a.RepresentativeCategoryId,\r\n                                          name: a.Category,\r\n                                        }\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    <i\r\n                                      className=\"tim-icons icon-pencil hoverable\"\r\n                                      style={{ cursor: \"pointer\" }}\r\n                                    />\r\n                                  </Col>\r\n                                </Row>\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"justify-content-between\">\r\n                    <Col md=\"6\" xs=\"12\" className=\"d-flex justify-content-end\">\r\n                      <Button\r\n                        color=\"success\"\r\n                        className=\"md-auto\"\r\n                        disabled={!this.state.updatingRepresentatives}\r\n                        onClick={() => {\r\n                          this.representativeNameRef.current.removeAllChips();\r\n                          this.representativeCategoryRef.current.removeAllChips();\r\n\r\n                          //remove all ids form hidden inputs...\r\n                          this.RepresentativeNameAutocompleteRef.current.removeAllIds();\r\n                          this.RepresentativeCategoryAutocompleteRef.current.removeAllIds();\r\n                          this.setState({\r\n                            updatingRepresentatives: false,\r\n                            updatingRepresentativesNameId: null,\r\n                            updatingRepresentativesCategoryId: null,\r\n                          });\r\n                        }}\r\n                      >\r\n                        Cancel Update\r\n                      </Button>\r\n                      <Button\r\n                        color=\"success\"\r\n                        onClick={() => {\r\n                          if (\r\n                            document.getElementById(\"txtRepresentatveSuggest\")\r\n                              .value != \"\" &&\r\n                            document.getElementById(\r\n                              \"txtRepresentatveCategorySuggest\"\r\n                            ).value != \"\"\r\n                          ) {\r\n                            var representativesIds = document\r\n                              .getElementById(\"txtRepresentatveSuggest\")\r\n                              .value.split(\",\");\r\n                            var representativesCatIds = document\r\n                              .getElementById(\"txtRepresentatveCategorySuggest\")\r\n                              .value.split(\",\");\r\n                            var representativesArray = [];\r\n                            representativesIds.forEach((element) => {\r\n                              var representativeName = this.state.Representatives.filter(\r\n                                (a) => a.id == element\r\n                              )[0][\"Name\"];\r\n                              representativesCatIds.forEach((elementCatId) => {\r\n                                var obj = {};\r\n                                obj[\"Name\"] = representativeName;\r\n                                obj[\"EmployeeId\"] = element;\r\n                                obj[\"RepresentativeCategoryId\"] = elementCatId;\r\n                                obj[\r\n                                  \"Category\"\r\n                                ] = this.state.RepresentativesCategory.filter(\r\n                                  (a) => a.id == elementCatId\r\n                                )[0][\"Name\"];\r\n                                representativesArray.push(obj);\r\n                              });\r\n                            });\r\n                            var tempArr = this.state.representativeArr;\r\n                            var newArr = tempArr.concat(representativesArray);\r\n                            var unique = [];\r\n                            var distinct = [];\r\n                            for (let i = 0; i < newArr.length; i++) {\r\n                              if (\r\n                                !unique[\r\n                                  newArr[i].EmployeeId +\r\n                                    \",\" +\r\n                                    newArr[i].RepresentativeCategoryId\r\n                                ]\r\n                              ) {\r\n                                distinct.push({\r\n                                  Name: newArr[i].Name,\r\n                                  Category: newArr[i].Category,\r\n                                  EmployeeId: newArr[i].EmployeeId,\r\n                                  RepresentativeCategoryId:\r\n                                    newArr[i].RepresentativeCategoryId,\r\n                                  id: newArr[i].id,\r\n                                });\r\n                                unique[\r\n                                  newArr[i].EmployeeId +\r\n                                    \",\" +\r\n                                    newArr[i].RepresentativeCategoryId\r\n                                ] = 1;\r\n                              }\r\n                            }\r\n                            console.log(distinct);\r\n                            var index = distinct.indexOf(\r\n                              distinct.filter(\r\n                                (a) =>\r\n                                  a.EmployeeId ==\r\n                                    this.state.updatingRepresentativesNameId &&\r\n                                  a.RepresentativeCategoryId ==\r\n                                    this.state.updatingRepresentativesCategoryId\r\n                              )[0]\r\n                            );\r\n                            if (index > -1) {\r\n                              distinct.splice(index, 1);\r\n                            }\r\n                            this.setState({\r\n                              representativeArr: distinct,\r\n                              updatingRepresentativesNameId: null,\r\n                              updatingRepresentativesCategoryId: null,\r\n                              updatingRepresentatives: !this.state\r\n                                .updatingRepresentatives,\r\n                            });\r\n                            this.representativeNameRef.current.removeAllChips();\r\n                            this.representativeCategoryRef.current.removeAllChips();\r\n\r\n                            //remove all ids form hidden inputs...\r\n                            this.RepresentativeNameAutocompleteRef.current.removeAllIds();\r\n                            this.RepresentativeCategoryAutocompleteRef.current.removeAllIds();\r\n                          }\r\n                        }}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle tag=\"h2\">Event Attendies</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <Row>\r\n                          <Col md=\"12\">\r\n                            <FormGroup>\r\n                              <label>Attendee Full Name</label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                id=\"AttendiesName\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"12\">\r\n                            <FormGroup>\r\n                              <label>Attendee Phone</label>\r\n                              <Input\r\n                                type=\"number\"\r\n                                placeholder=\"Phone\"\r\n                                id=\"AttendiesPhone\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"12\">\r\n                            <FormGroup>\r\n                              <label>Attendee Email</label>\r\n                              <Input\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                id=\"AttendiesEmail\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"12\">\r\n                            <FormGroup>\r\n                              <label>Attendee Location</label>\r\n                              <Input\r\n                                type=\"text\"\r\n                                placeholder=\"Location\"\r\n                                id=\"AttendiesLocation\"\r\n                              />\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"12\">\r\n                            <Col md=\"12\" className=\"category-col\">\r\n                              <label>Arriving Ticket</label>\r\n                              <FormGroup>\r\n                                <Row>\r\n                                  <Col md=\"6\">\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      placeholder=\"Ticket From\"\r\n                                      id=\"Arr_ticketFrom\"\r\n                                    ></Input>\r\n                                  </Col>\r\n                                  <Col md=\"6\">\r\n                                    <Input\r\n                                      type=\"text\"\r\n                                      placeholder=\"Ticket To\"\r\n                                      id=\"Arr_ticketTo\"\r\n                                    ></Input>\r\n                                  </Col>\r\n                                </Row>\r\n                              </FormGroup>\r\n                              <FormGroup>\r\n                                <Row>\r\n                                  <Col md=\"12\">\r\n                                    <div className=\"custom-file mb-2\">\r\n                                      <Input\r\n                                        type=\"file\"\r\n                                        className=\"custom-file-input\"\r\n                                        id=\"ticket-file-from\"\r\n                                        onChange={(e) => {\r\n                                          this.setState({\r\n                                            aTicketFileName:\r\n                                              e.target.files[0].name,\r\n                                          });\r\n                                        }}\r\n                                      />\r\n                                      <label\r\n                                        className=\"custom-file-label\"\r\n                                        htmlFor=\"customFileThumbanail\"\r\n                                      >\r\n                                        {this.state.aTicketFileName}\r\n                                      </label>\r\n                                    </div>\r\n                                  </Col>\r\n                                </Row>\r\n                              </FormGroup>\r\n                            </Col>\r\n                          </Col>\r\n                          <Col md=\"12\">\r\n                            <FormGroup>\r\n                              <label class=\"checkbox\">\r\n                                <input\r\n                                  type=\"checkbox\"\r\n                                  id=\"SameTicketChkId\"\r\n                                  onChange={() => {\r\n                                    this.setState({\r\n                                      TicketsSame: !this.state.TicketsSame,\r\n                                    });\r\n                                  }}\r\n                                  style={{\r\n                                    marginRight: \"8px\",\r\n                                  }}\r\n                                />\r\n                                Same Ticket as Arriving Ticket\r\n                              </label>\r\n                            </FormGroup>\r\n                          </Col>\r\n                          <Col md=\"12\">\r\n                            <fieldset disabled={this.state.TicketsSame}>\r\n                              <Col md=\"12\" className=\"category-col\">\r\n                                <label>\r\n                                  Departing Ticket\r\n                                  {this.state.TicketsSame ? \" - Disabled\" : \"\"}\r\n                                </label>\r\n                                <FormGroup>\r\n                                  <Row>\r\n                                    <Col md=\"6\">\r\n                                      <Input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Ticket From\"\r\n                                        id=\"Dep_ticketFrom\"\r\n                                      ></Input>\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                      <Input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Ticket To\"\r\n                                        id=\"Dep_ticketTo\"\r\n                                      ></Input>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                  <Row>\r\n                                    <Col md=\"12\">\r\n                                      <div className=\"custom-file mb-2\">\r\n                                        <Input\r\n                                          type=\"file\"\r\n                                          className=\"custom-file-input\"\r\n                                          id=\"ticket-file-to\"\r\n                                          onChange={(e) => {\r\n                                            this.setState({\r\n                                              dTicketFileName:\r\n                                                e.target.files[0].name,\r\n                                            });\r\n                                          }}\r\n                                        />\r\n                                        <label\r\n                                          className=\"custom-file-label\"\r\n                                          htmlFor=\"customFileThumbanail\"\r\n                                        >\r\n                                          {this.state.dTicketFileName}\r\n                                        </label>\r\n                                      </div>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </FormGroup>\r\n                              </Col>\r\n                            </fieldset>\r\n                          </Col>\r\n                          <Col md=\"12\" className=\"d-flex justify-content-end\">\r\n                            <Button\r\n                              color=\"success\"\r\n                              className=\"md-auto\"\r\n                              disabled={!this.state.updatingAttendee}\r\n                              onClick={() => {\r\n                                document.getElementById(\"AttendiesName\").value =\r\n                                  \"\";\r\n                                document.getElementById(\r\n                                  \"AttendiesPhone\"\r\n                                ).value = \"\";\r\n                                document.getElementById(\r\n                                  \"AttendiesEmail\"\r\n                                ).value = \"\";\r\n                                document.getElementById(\r\n                                  \"AttendiesLocation\"\r\n                                ).value = \"\";\r\n                                document.getElementById(\r\n                                  \"Arr_ticketFrom\"\r\n                                ).value = \"\";\r\n                                document.getElementById(\"Arr_ticketTo\").value =\r\n                                  \"\";\r\n                                document.getElementById(\r\n                                  \"Dep_ticketFrom\"\r\n                                ).value = \"\";\r\n                                document.getElementById(\"Dep_ticketTo\").value =\r\n                                  \"\";\r\n                                document.getElementById(\r\n                                  \"SameTicketChkId\"\r\n                                ).checked = false;\r\n                                this.setState({\r\n                                  TicketsSame: false,\r\n                                  aTicketFileName: \"Choose Ticket File\",\r\n                                  dTicketFileName: \"Choose Ticket File\",\r\n                                  updatingAttendee: false,\r\n                                  updatingAttendeePhone: null,\r\n                                });\r\n                              }}\r\n                            >\r\n                              Cancel Update\r\n                            </Button>\r\n                            <Button\r\n                              color=\"success\"\r\n                              className=\"md-auto\"\r\n                              onClick={() => {\r\n                                this.setState({\r\n                                  addedAttendie: !this.state.addedAttendie,\r\n                                });\r\n                                var newAttendieObj = {};\r\n                                newAttendieObj[\r\n                                  \"name\"\r\n                                ] = document.getElementById(\r\n                                  \"AttendiesName\"\r\n                                ).value;\r\n\r\n                                newAttendieObj[\r\n                                  \"phone\"\r\n                                ] = document.getElementById(\r\n                                  \"AttendiesPhone\"\r\n                                ).value;\r\n\r\n                                newAttendieObj[\r\n                                  \"email\"\r\n                                ] = document.getElementById(\r\n                                  \"AttendiesEmail\"\r\n                                ).value;\r\n\r\n                                newAttendieObj[\r\n                                  \"location\"\r\n                                ] = document.getElementById(\r\n                                  \"AttendiesLocation\"\r\n                                ).value;\r\n                                newAttendieObj[\r\n                                  \"aTicketFrom\"\r\n                                ] = document.getElementById(\r\n                                  \"Arr_ticketFrom\"\r\n                                ).value;\r\n\r\n                                newAttendieObj[\r\n                                  \"aTicketTo\"\r\n                                ] = document.getElementById(\r\n                                  \"Arr_ticketTo\"\r\n                                ).value;\r\n                                newAttendieObj[\"isSameAsArriving\"] = this.state\r\n                                  .TicketsSame\r\n                                  ? true\r\n                                  : false;\r\n                                newAttendieObj[\r\n                                  \"aticket\"\r\n                                ] = this.state.aTicketFileName;\r\n                                newAttendieObj[\r\n                                  \"dticket\"\r\n                                ] = this.state.dTicketFileName;\r\n                                //converting files to base64...\r\n                                let fileToLoad = document.getElementById(\r\n                                  \"ticket-file-from\"\r\n                                ).files[0];\r\n                                let fileone = null;\r\n                                let fileReader = new FileReader();\r\n                                fileReader.onload = function (fileLoadedEvent) {\r\n                                  fileone = fileLoadedEvent.target.result;\r\n                                  newAttendieObj[\"ticketFileFrom\"] = fileone;\r\n                                };\r\n                                if (fileToLoad) {\r\n                                  fileReader.readAsDataURL(fileToLoad);\r\n                                }\r\n\r\n                                //second file...\r\n                                let filetwo = null;\r\n                                if (!this.state.TicketsSame) {\r\n                                  newAttendieObj[\r\n                                    \"dTicketFrom\"\r\n                                  ] = document.getElementById(\r\n                                    \"Dep_ticketFrom\"\r\n                                  ).value;\r\n                                  newAttendieObj[\r\n                                    \"dTicketTo\"\r\n                                  ] = document.getElementById(\r\n                                    \"Dep_ticketTo\"\r\n                                  ).value;\r\n                                  let fileToLoadSecond = document.getElementById(\r\n                                    \"ticket-file-to\"\r\n                                  ).files[0];\r\n                                  let fileReadertwo = new FileReader();\r\n                                  fileReadertwo.onload = function (\r\n                                    fileLoadedEvent1\r\n                                  ) {\r\n                                    filetwo = fileLoadedEvent1.target.result;\r\n                                    newAttendieObj[\"ticketFileTo\"] = filetwo;\r\n                                  };\r\n                                  fileReadertwo.readAsDataURL(fileToLoadSecond);\r\n                                }\r\n                                var Ea = this.state.EventAttendies;\r\n                                if (this.state.updatingAttendeePhone) {\r\n                                  var index = Ea.indexOf(\r\n                                    Ea.filter(\r\n                                      (a) =>\r\n                                        a.phone ==\r\n                                        this.state.updatingAttendeePhone\r\n                                    )[0]\r\n                                  );\r\n                                  if (index > -1) {\r\n                                    Ea.splice(index, 1);\r\n                                  }\r\n                                  newAttendieObj.id = this.state.updatingAttendeeId;\r\n                                  Ea.push(newAttendieObj);\r\n                                  console.log(Ea);\r\n                                } else {\r\n                                  Ea.push(newAttendieObj);\r\n                                }\r\n                                //reseting the state...\r\n                                this.setState({\r\n                                  EventAttendies: Ea,\r\n                                  addedAttendie: !this.state.addedAttendie,\r\n                                  TicketsSame: false,\r\n                                  aTicketFileName: \"Choose Ticket File\",\r\n                                  dTicketFileName: \"Choose Ticket File\",\r\n                                  updatingAttendee: false,\r\n                                  updatingAttendeePhone: null,\r\n                                });\r\n                                document.getElementById(\"AttendiesName\").value =\r\n                                  \"\";\r\n                                document.getElementById(\r\n                                  \"AttendiesPhone\"\r\n                                ).value = \"\";\r\n                                document.getElementById(\r\n                                  \"AttendiesEmail\"\r\n                                ).value = \"\";\r\n                                document.getElementById(\r\n                                  \"AttendiesLocation\"\r\n                                ).value = \"\";\r\n                                document.getElementById(\r\n                                  \"Arr_ticketFrom\"\r\n                                ).value = \"\";\r\n                                document.getElementById(\"Arr_ticketTo\").value =\r\n                                  \"\";\r\n                                document.getElementById(\r\n                                  \"Dep_ticketFrom\"\r\n                                ).value = \"\";\r\n                                document.getElementById(\"Dep_ticketTo\").value =\r\n                                  \"\";\r\n                                document.getElementById(\r\n                                  \"SameTicketChkId\"\r\n                                ).checked = false;\r\n                              }}\r\n                            >\r\n                              Add\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <Table className=\"tablesorter\" responsive>\r\n                          <thead className=\"text-primary\">\r\n                            <tr>\r\n                              <th>Attendee Name</th>\r\n                              <th>Attendee Phone</th>\r\n                              <th className=\"text-center\">Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.EventAttendies.map((element) => (\r\n                              <tr\r\n                                style={{\r\n                                  backgroundColor: this.haveAnythingEmpty(\r\n                                    element\r\n                                  )\r\n                                    ? \"#0000005e\"\r\n                                    : \"transparent\",\r\n                                }}\r\n                              >\r\n                                <td>{element[\"name\"]}</td>\r\n                                <td>{element[\"phone\"]}</td>\r\n                                <td>\r\n                                  <Row>\r\n                                    <Col\r\n                                      md=\"6\"\r\n                                      style={{\r\n                                        padding: \"0px\",\r\n                                      }}\r\n                                      className=\"d-flex justify-content-center\"\r\n                                      onClick={() => {\r\n                                        var temp = this.state.EventAttendies;\r\n                                        var index = temp.indexOf(element);\r\n                                        if (index > -1) {\r\n                                          temp.splice(index, 1);\r\n                                        }\r\n                                        this.setState({\r\n                                          EventAttendies: temp,\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      <i className=\"tim-icons icon-trash-simple hoverable-danger\" />\r\n                                    </Col>\r\n                                    <Col\r\n                                      md=\"6\"\r\n                                      style={{\r\n                                        padding: \"0px\",\r\n                                      }}\r\n                                      className=\"d-flex justify-content-center\"\r\n                                      onClick={() => {\r\n                                        this.setState({\r\n                                          updatingAttendeePhone: element.phone,\r\n                                        });\r\n                                        document.getElementById(\r\n                                          \"AttendiesName\"\r\n                                        ).value = element[\"name\"];\r\n                                        document.getElementById(\r\n                                          \"AttendiesPhone\"\r\n                                        ).value = element[\"phone\"];\r\n                                        document.getElementById(\r\n                                          \"AttendiesEmail\"\r\n                                        ).value = element[\"email\"];\r\n                                        document.getElementById(\r\n                                          \"AttendiesLocation\"\r\n                                        ).value = element[\"location\"];\r\n                                        document.getElementById(\r\n                                          \"Arr_ticketFrom\"\r\n                                        ).value = element[\"aTicketFrom\"];\r\n                                        document.getElementById(\r\n                                          \"Arr_ticketTo\"\r\n                                        ).value = element[\"aTicketTo\"];\r\n                                        document.getElementById(\r\n                                          \"Dep_ticketFrom\"\r\n                                        ).value = element[\"dTicketFrom\"] || \"\";\r\n                                        document.getElementById(\r\n                                          \"Dep_ticketTo\"\r\n                                        ).value = element[\"dTicketTo\"] || \"\";\r\n                                        document.getElementById(\r\n                                          \"SameTicketChkId\"\r\n                                        ).checked =\r\n                                          element[\"dTicketFrom\"] == null;\r\n                                        this.setState({\r\n                                          updatingAttendee: true,\r\n                                          TicketsSame:\r\n                                            element[\"dTicketFrom\"] == null,\r\n                                          aTicketFileName: element[\r\n                                            \"aticket\"\r\n                                          ].split(\"/\")[\r\n                                            element[\"aticket\"].split(\"/\")\r\n                                              .length - 1\r\n                                          ],\r\n                                          dTicketFileName:\r\n                                            element[\"dticket\"]?.split(\"/\")[\r\n                                              element[\"dticket\"].split(\"/\")\r\n                                                .length - 1\r\n                                            ] || \"Choose Ticket File\",\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      <i className=\"tim-icons icon-pencil hoverable\" />\r\n                                    </Col>\r\n                                  </Row>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle tag=\"h2\">Event Transfers</CardTitle>\r\n                  <Row className=\"justify-content-between\">\r\n                    <Col md=\"4\" xs=\"4\" className=\"d-flex align-items-center\">\r\n                      <h5 className=\"card-category\">Create Transfers</h5>\r\n                    </Col>\r\n                    <Col md=\"4\" xs=\"8\" className=\"d-flex justify-content-end\">\r\n                      <Button\r\n                        color=\"success\"\r\n                        onClick={() => this.createNewTransfer()}\r\n                        disabled={!this.state.rIsFilled}\r\n                      >\r\n                        Create New\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <Row>\r\n                      {this.state.transfers.map((element) =>\r\n                        element.isFilled ? null : element.component\r\n                      )}\r\n                    </Row>\r\n                    <Row className=\"justify-content-between\">\r\n                      {this.state.rIsFilled ? null : (\r\n                        <Col\r\n                          md=\"12\"\r\n                          xs=\"12\"\r\n                          className=\"d-flex justify-content-end\"\r\n                        >\r\n                          <Button\r\n                            color=\"warning\"\r\n                            onClick={() => {\r\n                              var temp = this.state.transfers;\r\n                              temp.forEach((element) => {\r\n                                var index;\r\n                                if (!element.isFilled) {\r\n                                  if (!element.data.id) {\r\n                                    index = temp.indexOf(element);\r\n                                  }\r\n                                  element.isFilled = !element.isFilled;\r\n                                }\r\n                                if (index > -1) {\r\n                                  temp.splice(index, 1);\r\n                                }\r\n                                this.setState({\r\n                                  transfers: temp,\r\n                                  rIsFilled: !this.state.rIsFilled,\r\n                                });\r\n                              });\r\n                            }}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button\r\n                            color=\"success\"\r\n                            onClick={() => {\r\n                              var tempTransfers = this.state.transfers;\r\n                              tempTransfers.forEach((element) => {\r\n                                if (!element.isFilled) {\r\n                                  element.data = element.ref.current.returnState();\r\n                                  element.isFilled = !element.isFilled;\r\n                                }\r\n                              });\r\n                              this.setState({\r\n                                transfers: tempTransfers,\r\n                                rIsFilled: !this.state.rIsFilled,\r\n                              });\r\n                            }}\r\n                          >\r\n                            Save\r\n                          </Button>\r\n                        </Col>\r\n                      )}\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <Table className=\"tablesorter\" responsive>\r\n                          <thead className=\"text-primary\">\r\n                            <tr>\r\n                              <th>Transfer Name</th>\r\n                              <th>Date</th>\r\n                              <th>Origin</th>\r\n                              <th>Destination</th>\r\n                              <th className=\"text-center\">Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.transfers.map((element) =>\r\n                              element.isFilled ? (\r\n                                <tr>\r\n                                  <td>{element.data.name}</td>\r\n                                  <td>{element.data.transferDate}</td>\r\n                                  <td>{element.data.origin}</td>\r\n                                  <td>{element.data.destination}</td>\r\n                                  <td>\r\n                                    <Row>\r\n                                      <Col\r\n                                        md=\"6\"\r\n                                        className=\"d-flex justify-content-center\"\r\n                                        style={{\r\n                                          padding: \"0px\",\r\n                                        }}\r\n                                        onClick={() => {\r\n                                          var temp = this.state.transfers;\r\n                                          var index = temp.indexOf(element);\r\n                                          if (index > -1) {\r\n                                            temp.splice(index, 1);\r\n                                          }\r\n                                          this.setState({\r\n                                            transfers: temp,\r\n                                          });\r\n                                        }}\r\n                                      >\r\n                                        <i className=\"tim-icons icon-trash-simple hoverable-danger\" />\r\n                                      </Col>\r\n                                      <Col\r\n                                        md=\"6\"\r\n                                        style={{\r\n                                          padding: \"0px\",\r\n                                        }}\r\n                                        className=\"d-flex justify-content-center\"\r\n                                        onClick={() => {\r\n                                          var temp = this.state.transfers;\r\n                                          var index = temp.indexOf(element);\r\n                                          temp[index].isFilled = false;\r\n                                          // temp[index].ref.current.setData(element.data)\r\n                                          this.setState(\r\n                                            {\r\n                                              rIsFilled: !this.state.rIsFilled,\r\n                                              transfers: temp,\r\n                                            },\r\n                                            () => {\r\n                                              temp[index].ref.current.setData(\r\n                                                element.data\r\n                                              );\r\n                                            }\r\n                                          );\r\n                                        }}\r\n                                      >\r\n                                        <i className=\"tim-icons icon-pencil hoverable\" />\r\n                                      </Col>\r\n                                    </Row>\r\n                                  </td>\r\n                                </tr>\r\n                              ) : null\r\n                            )}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle tag=\"h2\">Event Agendas</CardTitle>\r\n                  <h5 className=\"card-category\">Create Agendas</h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Form>\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <Agendas ref={this.agendaRef} />\r\n                        <Col md=\"12\" className=\"d-flex justify-content-end\">\r\n                          <Button\r\n                            color=\"success\"\r\n                            className=\"md-auto\"\r\n                            disabled={!this.state.updatingAgenda}\r\n                            onClick={() => {\r\n                              this.agendaRef.current.resetState();\r\n                              this.setState({\r\n                                updatingAgenda: false,\r\n                                updatingAgendaObject: null,\r\n                              });\r\n                            }}\r\n                          >\r\n                            Cancel Update\r\n                          </Button>\r\n                          <Button\r\n                            color=\"success\"\r\n                            className=\"md-auto\"\r\n                            onClick={() => {\r\n                              var data = this.state.agendas;\r\n                              if (this.state.updatingAgendaObject) {\r\n                                var index = data.indexOf(\r\n                                  this.state.updatingAgendaObject\r\n                                );\r\n                                console.log(index);\r\n                                if (index > -1) {\r\n                                  data.splice(index, 1);\r\n                                }\r\n                              }\r\n                              data.push(this.agendaRef.current.returnState());\r\n                              this.setState(\r\n                                {\r\n                                  agendas: data,\r\n                                  updatingAgendaObject: null,\r\n                                },\r\n                                () => {\r\n                                  this.agendaRef.current.resetState();\r\n                                }\r\n                              );\r\n                            }}\r\n                          >\r\n                            Add\r\n                          </Button>\r\n                        </Col>\r\n                      </Col>\r\n                      <Col md=\"6\">\r\n                        <Table className=\"tablesorter\" responsive>\r\n                          <thead className=\"text-primary\">\r\n                            <tr>\r\n                              <th>Agenda Name</th>\r\n                              <th>Start</th>\r\n                              <th>End</th>\r\n                              <th>Venue</th>\r\n                              <th className=\"text-center\">Actions</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {this.state.agendas.map((element) => (\r\n                              <tr>\r\n                                <td>{element.name}</td>\r\n                                <td>\r\n                                  {new Date(element.startTime).toDateString() +\r\n                                    \" \" +\r\n                                    new Date(element.startTime).toLocaleString(\r\n                                      \"en-US\",\r\n                                      {\r\n                                        hour: \"numeric\",\r\n                                        minute: \"numeric\",\r\n                                        hour12: true,\r\n                                      }\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                  {new Date(element.endTime).toDateString() +\r\n                                    \" \" +\r\n                                    new Date(element.endTime).toLocaleString(\r\n                                      \"en-US\",\r\n                                      {\r\n                                        hour: \"numeric\",\r\n                                        minute: \"numeric\",\r\n                                        hour12: true,\r\n                                      }\r\n                                    ) || \"Onwards\"}\r\n                                </td>\r\n                                <td>{element.venue}</td>\r\n                                <td>\r\n                                  <Row>\r\n                                    <Col\r\n                                      md=\"6\"\r\n                                      className=\"d-flex justify-content-center\"\r\n                                      style={{\r\n                                        padding: \"0px\",\r\n                                      }}\r\n                                      onClick={() => {\r\n                                        var temp = this.state.agendas;\r\n                                        var index = temp.indexOf(element);\r\n                                        if (index > -1) {\r\n                                          temp.splice(index, 1);\r\n                                        }\r\n                                        this.setState({\r\n                                          agendas: temp,\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      <i className=\"tim-icons icon-trash-simple hoverable-danger\" />\r\n                                    </Col>\r\n                                    <Col\r\n                                      md=\"6\"\r\n                                      style={{\r\n                                        padding: \"0px\",\r\n                                      }}\r\n                                      onClick={() => {\r\n                                        this.agendaRef.current.setData(element);\r\n                                        this.setState({\r\n                                          updatingAgenda: true,\r\n                                          updatingAgendaObject: element,\r\n                                        });\r\n                                      }}\r\n                                      className=\"d-flex justify-content-center\"\r\n                                    >\r\n                                      <i className=\"tim-icons icon-pencil hoverable\" />\r\n                                    </Col>\r\n                                  </Row>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"12\" className=\"d-flex justify-content-end\">\r\n              <Button\r\n                color=\"success\"\r\n                style={{\r\n                  padding: \"18px\",\r\n                  paddingRight: \"38px\",\r\n                  paddingLeft: \"38px\",\r\n                }}\r\n                onClick={(e) => this.submitEvent(e)}\r\n              >\r\n                Save Event\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageEvents;\r\n","import React, { useState, useMemo, useCallback, useEffect, forwardRef, useImperativeHandle } from \"react\";\r\nimport DataTable, { createTheme } from \"react-data-table-component\";\r\nimport Axios from \"./axios\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  Button\r\n} from \"reactstrap\";\r\n\r\nconst MyComponentHook = forwardRef((props,ref) => {\r\n  const [overlayLoader, setOverlayLoader] = useState(false);\r\n  const [progress, setProgress] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  createTheme(\"solarized\", {\r\n    text: {\r\n      primary: \"#ffffff\",\r\n      secondary: \"#9A9A9A\",\r\n    },\r\n    background: {\r\n      default: \"#27293d\",\r\n    },\r\n    action: {\r\n      button: \"rgba(0,0,0,.54)\",\r\n      hover: \"rgba(0,0,0,.08)\",\r\n      disabled: \"rgba(0,0,0,.12)\",\r\n    },\r\n  });\r\n  const getData = () => {\r\n    Axios.get(\"/location/get-all\").then((u) => {\r\n      setData(\r\n        u.data.map((a) => {\r\n          var obj = {};\r\n          obj[\"id\"] = a.id\r\n          obj[\"Name\"] = a.name;\r\n          obj[\"City\"] = a.Cities.name;\r\n          obj[\"Country\"] = a.Cities.Countries.name;\r\n          obj[\"Image\"] = a.image;\r\n          obj[\"desc\"] = a.desc;\r\n          return obj;\r\n        })\r\n      );\r\n      setProgress(false);\r\n    });\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getData()\r\n  }, []);\r\n\r\n  const handleDeleteAction = (value) => {\r\n    console.log(value);\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this content!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then(async (willDelete) => {\r\n      if (willDelete) {\r\n        var arr = data.filter((item) => item.id !== value.id);\r\n        console.log(arr)\r\n        setData(arr);\r\n        await Axios.delete(\"/location/delete/\" + value.id);\r\n        swal(\"Poof! Your content has been deleted!\", {\r\n          icon: \"success\",\r\n        });\r\n      } else {\r\n        swal(\"Your content is safe!\");\r\n      }\r\n    });\r\n  };\r\n  const handleEditAction = (value) => {\r\n    props.setDataInParent(value)\r\n  };\r\n  useImperativeHandle(ref, () => ({\r\n    resetTable: () => {\r\n      getData();\r\n    },\r\n  }));\r\n\r\n  const updateState = useCallback((state) => console.log(state));\r\n  const columns = useMemo(() => [\r\n    {\r\n      name: \"Name\",\r\n      selector: \"Name\",\r\n    },\r\n    {\r\n      name: \"City\",\r\n      selector: \"City\",\r\n    },\r\n    {\r\n      cell: (row) => <img src={row.Image} alt=\"location image\" />,\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n      name: \"Image\",\r\n      selector: \"Image\",\r\n    },\r\n    {\r\n      cell: (row) => (\r\n        <Button\r\n          style={{ padding: \"15px\" }}\r\n          className=\"btn btn-primary\"\r\n          onClick={() => handleEditAction(row)}\r\n        >\r\n          <i className=\"tim-icons icon-pencil\" />\r\n        </Button>\r\n      ),\r\n      button: true,\r\n      name: \"Edit\",\r\n      selector: \"edit\",\r\n    },\r\n    {\r\n      cell: (row) => (\r\n        <Button\r\n          style={{ padding: \"15px\" }}\r\n          className=\"btn btn-danger\"\r\n          onClick={() => handleDeleteAction(row)}\r\n        >\r\n          <i className=\"tim-icons icon-trash-simple\" />\r\n        </Button>\r\n      ),\r\n      button: true,\r\n      name: \"Delete\",\r\n      selector: \"delete\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"loading-overlay\"\r\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\r\n      >\r\n        <div class=\"lds-ripple\">\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        Loading...\r\n      </div>\r\n      <DataTable\r\n        data={data}\r\n        columns={columns}\r\n        theme=\"solarized\"\r\n        onSelectedRowsChange={updateState}\r\n        pagination={true}\r\n        progressPending={progress}\r\n        progressComponent={<h2>Hang on...😊</h2>}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default MyComponentHook;\r\n","import React, { Component, createRef } from \"react\";\r\nimport Autocomplete from \"../components/sub/autosuggest-norm\";\r\nimport swal from \"sweetalert\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  FormGroup,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport Axios from \"../components/sub/axios\";\r\nimport MyComponentHook from \"components/sub/cities&countriesTable\";\r\n\r\nconst s26 = {\r\n  width: \"100%\",\r\n};\r\n\r\nconst s50 = {\r\n  marginLeft: \"15px\",\r\n  marginTop: \"14px\",\r\n};\r\n\r\nexport default class CitiesCountries extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.cityModalRef = createRef();\r\n    this.tableRef = createRef();\r\n    this._countryRef = createRef();\r\n    this._cityRef = createRef();\r\n    this.state = {\r\n      createdLocation: true,\r\n      locationName: \"\",\r\n      locationImageFile: null,\r\n      locationImageName: \"Choose Image File\",\r\n      locationDesc: \"\",\r\n      isAnUpdate: false,\r\n\r\n      createdCity: true,\r\n      createdCountry: true,\r\n      modalCountryCreated: true,\r\n      countryName: \"\",\r\n\r\n      cityFile: null,\r\n      cityFileName: \"Choose New File\",\r\n      cityName: \"\",\r\n      suggestionCountries: [],\r\n      suggestionCity: [],\r\n      locationId: null,\r\n    };\r\n  }\r\n  componentWillMount = () => {\r\n    Promise.all([\r\n      Axios.get(\"/location/country/get-all\"),\r\n      Axios.get(\"/location/city/get-all\"),\r\n    ]).then(([u, a]) => {\r\n      this.setState({\r\n        suggestionCountries: u.data.map((a) => {\r\n          var b = {};\r\n          b[\"Name\"] = a.name;\r\n          b[\"id\"] = a.id;\r\n          return b;\r\n        }),\r\n        suggestionCity: a.data.map((a) => {\r\n          var b = {};\r\n          b[\"Name\"] = a.name;\r\n          b[\"id\"] = a.id;\r\n          return b;\r\n        }),\r\n      });\r\n    });\r\n  };\r\n  setDataToFields = (data) => {\r\n    this.setState({\r\n      locationName: data.Name,\r\n      locationDesc: data.desc,\r\n      isAnUpdate: !this.state.isAnUpdate,\r\n      locationId: data.id,\r\n    });\r\n    this._cityRef.current.setData(data.City);\r\n    this._countryRef.current.setData(data.Country);\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.createdCountry ? null : (\r\n          <div className=\"Modal-Root\">\r\n            <div\r\n              className=\"Country-Modal\"\r\n              style={{\r\n                backgroundColor: \"#27293d\",\r\n              }}\r\n            >\r\n              <Col md=\"12\">\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <h3\r\n                      style={{\r\n                        paddingTop: \"18px\",\r\n                      }}\r\n                    >\r\n                      Create New Country\r\n                    </h3>\r\n                  </Col>\r\n                  <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\r\n                    <Label>Country Name</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      value={this.state.countryName}\r\n                      onChange={(e) => {\r\n                        this.setState({\r\n                          countryName: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-between\">\r\n                  <Col\r\n                    md=\"12\"\r\n                    xs=\"12\"\r\n                    className=\"d-flex justify-content-end\"\r\n                    style={{ padding: \"18px\" }}\r\n                  >\r\n                    <Button\r\n                      color=\"warning\"\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          createdCountry: !this.state.createdCountry,\r\n                          countryName: \"\",\r\n                        });\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      color=\"success\"\r\n                      disabled={!this.state.modalCountryCreated}\r\n                      onClick={(e) => {\r\n                        this.setState({\r\n                          modalCountryCreated: !this.state.modalCountryCreated,\r\n                        });\r\n                        var formdata = new FormData();\r\n                        formdata.append(\"name\", this.state.countryName);\r\n                        Axios.post(\"/location/country/create\", formdata).then(\r\n                          (u) => {\r\n                            if (u.data.status == \"success\") {\r\n                              var temp = this.state.suggestionCountries;\r\n                              temp.push({\r\n                                id: u.data.data,\r\n                                Name: this.state.countryName,\r\n                              });\r\n                              this.setState({\r\n                                suggestionCountries: temp,\r\n                                createdCountry: !this.state.createdCountry,\r\n                                countryName: \"\",\r\n                                modalCountryCreated: !this.state\r\n                                  .modalCountryCreated,\r\n                              });\r\n                            }\r\n                          }\r\n                        );\r\n                      }}\r\n                    >\r\n                      {this.state.modalCountryCreated ? \"Save\" : \"Saving...\"}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.state.createdCity ? null : (\r\n          <div className=\"Modal-Root\">\r\n            <div\r\n              className=\"Country-Modal\"\r\n              style={{\r\n                backgroundColor: \"#27293d\",\r\n                padding: \"19px\",\r\n              }}\r\n            >\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <h3\r\n                    style={{\r\n                      paddingTop: \"18px\",\r\n                    }}\r\n                  >\r\n                    Create New City\r\n                  </h3>\r\n                </Col>\r\n                <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\r\n                  <div className=\"form-group d-inline mb-2\">\r\n                    <Autocomplete\r\n                      suggestions={this.state.suggestionCountries}\r\n                      id={\"category-suggest\"}\r\n                      hint={\"Country Name\"}\r\n                      className=\"suggestions-in-container\"\r\n                      ref={this.cityModalRef}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\r\n                  <Label>City Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={this.state.cityName}\r\n                    placeholder=\"City Name\"\r\n                    onChange={(e) => {\r\n                      this.setState({\r\n                        cityName: e.target.value,\r\n                      });\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Col md=\"12\">\r\n                  <Label>City Image</Label>\r\n                  <div className=\"custom-file mb-2\">\r\n                    <Input\r\n                      type=\"file\"\r\n                      className=\"custom-file-input\"\r\n                      id=\"ticket-file\"\r\n                      onChange={(e) => {\r\n                        this.setState({\r\n                          cityFile: e.target.files[0],\r\n                          cityFileName: e.target.files[0].name,\r\n                        });\r\n                      }}\r\n                    />\r\n                    <label\r\n                      className=\"custom-file-label\"\r\n                      htmlFor=\"customFileThumbanail\"\r\n                    >\r\n                      {this.state.cityFileName}\r\n                    </label>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"justify-content-between\">\r\n                <Col\r\n                  md=\"12\"\r\n                  xs=\"12\"\r\n                  className=\"d-flex justify-content-end\"\r\n                  style={{ padding: \"18px\" }}\r\n                >\r\n                  <Button\r\n                    color=\"warning\"\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        createdCity: !this.state.createdCity,\r\n                        modalCountryCreated: !this.state.modalCountryCreated,\r\n                        cityFile: null,\r\n                        cityFileName: \"Choose New File\",\r\n                        cityName: \"\",\r\n                      });\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    color=\"success\"\r\n                    disabled={!this.state.modalCountryCreated}\r\n                    onClick={(e) => {\r\n                      this.setState({\r\n                        modalCountryCreated: !this.state.modalCountryCreated,\r\n                      });\r\n                      var formdata = new FormData();\r\n                      formdata.append(\r\n                        \"countryId\",\r\n                        this.cityModalRef.current.returnId()\r\n                      );\r\n                      formdata.append(\"name\", this.state.cityName);\r\n                      formdata.append(\"image\", this.state.cityFile);\r\n                      Axios.post(\"/location/city/create\", formdata).then(\r\n                        (u) => {\r\n                          if (u.data.status == \"success\") {\r\n                            var temp = this.state.suggestionCity;\r\n                            console.log(u)\r\n                            temp.push({\r\n                              id: u.data.data,\r\n                              Name: this.state.cityName,\r\n                            });\r\n                            console.log(temp)\r\n                            this.setState({\r\n                              createdCity: !this.state.createdCity,\r\n                              suggestionCountries: temp,\r\n                              cityFile: null,\r\n                              cityFileName: \"Choose New File\",\r\n                              cityName: \"\",\r\n                              modalCountryCreated: !this.state\r\n                                .modalCountryCreated,\r\n                            });\r\n                          }\r\n                        }\r\n                      );\r\n                    }}\r\n                  >\r\n                    {this.state.modalCountryCreated ? \"Save\" : \"Saving...\"}\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Card>\r\n              <CardHeader>\r\n                <Row>\r\n                  <Col className=\"text-left\" sm=\"6\">\r\n                    <CardTitle tag=\"h2\">Manage City Attractions</CardTitle>\r\n                    <h5 className=\"card-category\">create city attractions</h5>\r\n                  </Col>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <div\r\n                      class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\r\n                      style={s26}\r\n                    >\r\n                      <div\r\n                        className=\"form-group d-inline mb-2\"\r\n                        style={{ flex: \"1\" }}\r\n                      >\r\n                        <Autocomplete\r\n                          suggestions={this.state.suggestionCountries}\r\n                          id={\"category-suggest\"}\r\n                          categoryChipHit={this.categoryChipHit}\r\n                          ref={this._countryRef}\r\n                          hint={\"Country Name\"}\r\n                        />\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <button\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.setState({\r\n                              createdCountry: !this.state.createdCountry,\r\n                            });\r\n                          }}\r\n                          className=\"btn btn-success\"\r\n                          style={s50}\r\n                        >\r\n                          New\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <div\r\n                      class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\r\n                      style={s26}\r\n                    >\r\n                      <div\r\n                        className=\"form-group d-inline mb-2\"\r\n                        style={{ flex: \"1\" }}\r\n                      >\r\n                        <Autocomplete\r\n                          suggestions={this.state.suggestionCity}\r\n                          id={\"category-suggest\"}\r\n                          ref={this._cityRef}\r\n                          hint={\"City Name\"}\r\n                        />\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <button\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            this.setState({\r\n                              createdCity: !this.state.createdCity,\r\n                            });\r\n                          }}\r\n                          className=\"btn btn-success\"\r\n                          style={s50}\r\n                        >\r\n                          New\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <label>Place of Interest</label>\r\n                      <Input\r\n                        placeholder=\"Place Name\"\r\n                        type=\"text\"\r\n                        value={this.state.locationName}\r\n                        onChange={(e) => {\r\n                          this.setState({\r\n                            locationName: e.target.value,\r\n                          });\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <label>Place Image</label>\r\n                      <div className=\"custom-file mb-2\">\r\n                        <Input\r\n                          type=\"file\"\r\n                          className=\"custom-file-input\"\r\n                          onChange={(e) => {\r\n                            this.setState({\r\n                              locationImageFile: e.target.files[0],\r\n                              locationImageName: e.target.files[0].name,\r\n                            });\r\n                          }}\r\n                        />\r\n                        <label\r\n                          className=\"custom-file-label\"\r\n                          htmlFor=\"customFileThumbanail\"\r\n                        >\r\n                          {this.state.locationImageName}\r\n                        </label>\r\n                      </div>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"12\">\r\n                    <FormGroup>\r\n                      <label>Place Discription</label>\r\n                      <Input\r\n                        placeholder=\"Description\"\r\n                        type=\"text\"\r\n                        value={this.state.locationDesc}\r\n                        onChange={(e) => {\r\n                          this.setState({\r\n                            locationDesc: e.target.value,\r\n                          });\r\n                        }}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-between\">\r\n                  <Col\r\n                    md=\"12\"\r\n                    xs=\"12\"\r\n                    className=\"d-flex justify-content-end\"\r\n                    style={{ padding: \"18px\" }}\r\n                  >\r\n                    <Button\r\n                      color=\"success\"\r\n                      disabled={!this.state.createdLocation}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          createdLocation: !this.state.createdLocation,\r\n                        });\r\n                        var formdata = new FormData();\r\n                        formdata.append(\"name\", this.state.locationName);\r\n                        formdata.append(\"desc\", this.state.locationDesc);\r\n                        formdata.append(\r\n                          \"CityId\",\r\n                          this._cityRef.current.returnId()\r\n                        );\r\n                        formdata.append(\r\n                          \"CountryId\",\r\n                          this._countryRef.current.returnId()\r\n                        );\r\n                        formdata.append(\"image\", this.state.locationImageFile);\r\n                        for (var value of formdata.values()) {\r\n                          if (!value) {\r\n                            swal(\r\n                              \"Can't Update\",\r\n                              \"All Fields Are Mandatory!\",\r\n                              \"error\"\r\n                            );\r\n                            this.setState({\r\n                              createdLocation: true,\r\n                            });\r\n                            return;\r\n                          }\r\n                        }\r\n                        if (!this.state.isAnUpdate) {\r\n                          Axios.post(\"/location/create\", formdata).then((u) => {\r\n                            this.setState({\r\n                              createdLocation: !this.state.createdLocation,\r\n                              locationName: \"\",\r\n                              locationImageFile: null,\r\n                              locationImageName: \"Choose Image File\",\r\n                              locationDesc: \"\",\r\n                            });\r\n                            this.tableRef.current.resetTable();\r\n                          });\r\n                        } else {\r\n                          Axios.put(\r\n                            \"/location/update/\" + this.state.locationId,\r\n                            formdata\r\n                          ).then((u) => {\r\n                            this.setState({\r\n                              createdLocation: !this.state.createdLocation,\r\n                              locationName: \"\",\r\n                              locationImageFile: null,\r\n                              locationImageName: \"Choose Image File\",\r\n                              locationDesc: \"\",\r\n                            });\r\n                            this.tableRef.current.resetTable();\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      {this.state.createdLocation ? \"Save\" : \"Saving...\"}\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Row>\r\n          <Row>\r\n            <Card>\r\n              <CardHeader>\r\n                <Row>\r\n                  <Col className=\"text-left\" sm=\"6\">\r\n                    <CardTitle tag=\"h2\">Added City Attractions</CardTitle>\r\n                  </Col>\r\n                </Row>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <MyComponentHook\r\n                  ref={this.tableRef}\r\n                  setDataInParent={this.setDataToFields}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </Row>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, {\r\n  useState,\r\n  useMemo,\r\n  useCallback,\r\n  useEffect,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport DataTable, { createTheme } from \"react-data-table-component\";\r\nimport Axios from \"./axios\";\r\nimport swal from \"sweetalert\";\r\nimport { Button } from \"reactstrap\";\r\nconst MyComponentHook = forwardRef((props, ref) => {\r\n  const [overlayLoader, setOverlayLoader] = useState(false);\r\n  const [progress, setProgress] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  useImperativeHandle(ref, () => ({\r\n    resetTable: () => {\r\n      getData();\r\n    },\r\n  }));\r\n\r\n  createTheme(\"solarized\", {\r\n    text: {\r\n      primary: \"#ffffff\",\r\n      secondary: \"#9A9A9A\",\r\n    },\r\n    background: {\r\n      default: \"#27293d\",\r\n    },\r\n    action: {\r\n      button: \"rgba(0,0,0,.54)\",\r\n      hover: \"rgba(0,0,0,.08)\",\r\n      disabled: \"rgba(0,0,0,.12)\",\r\n    },\r\n  });\r\n  const getData = () => {\r\n    Axios.get(\"/customer/get-all\").then((u) => {\r\n      console.log(u.data);\r\n      setData(u.data);\r\n      setProgress(false);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  const handleDeleteAction = (value) => {\r\n    console.log(value);\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover it!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then(async (willDelete) => {\r\n      if (willDelete) {\r\n        var arr = data.filter((item) => item.id !== value.id);\r\n        console.log(arr);\r\n        setData(arr);\r\n        await Axios.delete(\"/customer/delete/\" + value.id);\r\n        swal(\"Poof! Your content has been deleted!\", {\r\n          icon: \"success\",\r\n        });\r\n      } else {\r\n        swal(\"Your Data is Safe!\");\r\n      }\r\n    });\r\n  };\r\n  const handleEditAction = (value) => {\r\n    props.setDataInParent(value);\r\n  };\r\n  const updateState = useCallback((state) => console.log(state));\r\n  const columns = useMemo(() => [\r\n    {\r\n      name: \"Name\",\r\n      selector: \"name\",\r\n    },\r\n    {\r\n      name: \"Organisation\",\r\n      selector: \"organisation\",\r\n    },\r\n    {\r\n      name: \"Phone\",\r\n      selector: \"phone\",\r\n    },\r\n    {\r\n      name: \"Email\",\r\n      selector: \"email\",\r\n    },\r\n    {\r\n      cell: (row) => (\r\n        <Button\r\n          style={{ padding: \"15px\" }}\r\n          className=\"btn btn-primary\"\r\n          onClick={() => handleEditAction(row)}\r\n        >\r\n          <i className=\"tim-icons icon-pencil\" />\r\n        </Button>\r\n      ),\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n      name: \"Edit\",\r\n      selector: \"edit\",\r\n    },\r\n    {\r\n      cell: (row) => (\r\n        <Button\r\n          style={{ padding: \"15px\" }}\r\n          className=\"btn btn-danger\"\r\n          onClick={() => handleDeleteAction(row)}\r\n        >\r\n          <i className=\"tim-icons icon-trash-simple\" />\r\n        </Button>\r\n      ),\r\n      ignoreRowClick: true,\r\n      button: true,\r\n      name: \"Delete\",\r\n      selector: \"delete\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"loading-overlay\"\r\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\r\n      >\r\n        <div class=\"lds-ripple\">\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n        Loading...\r\n      </div>\r\n      <DataTable\r\n        data={data}\r\n        columns={columns}\r\n        theme=\"solarized\"\r\n        onSelectedRowsChange={updateState}\r\n        pagination={true}\r\n        progressPending={progress}\r\n        progressComponent={<h2>Hang on...😊</h2>}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default MyComponentHook;\r\n","import React, { Component, createRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport CustomerTable from \"../components/sub/customersTable\";\r\nimport Axios from \"../components/sub/axios\";\r\nexport default class customers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.CustomerTableRef = createRef();\r\n    this.state = {\r\n      customerName: \"\",\r\n      customerPhone: \"\",\r\n      customerOrg: \"\",\r\n      customerEmail: \"\",\r\n      createdCutomer: true,\r\n      isAnUpdate: false,\r\n      customerId:null,\r\n    };\r\n  }\r\n  setDataToFields = (data) => {\r\n    this.setState({\r\n      customerName: data.name,\r\n      customerPhone: data.phone,\r\n      customerOrg: data.organisation,\r\n      customerEmail: data.email,\r\n      isAnUpdate: !this.state.isAnUpdate,\r\n      customerId: data.id,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"content\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle tag=\"h2\">Manage Customers</CardTitle>\r\n                  <h5 className=\"card-category\">Add new Customers</h5>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <label>Customer Name</label>\r\n                      <Input\r\n                        placeholder=\"Full Name\"\r\n                        value={this.state.customerName}\r\n                        onChange={(e) => {\r\n                          this.setState({\r\n                            customerName: e.target.value,\r\n                          });\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <label>Organisation Name</label>\r\n                      <Input\r\n                        placeholder=\"Name\"\r\n                        value={this.state.customerOrg}\r\n                        onChange={(e) => {\r\n                          this.setState({\r\n                            customerOrg: e.target.value,\r\n                          });\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <label>Customer Phone</label>\r\n                      <Input\r\n                        placeholder=\"Phone\"\r\n                        type=\"number\"\r\n                        value={this.state.customerPhone}\r\n                        onChange={(e) => {\r\n                          this.setState({\r\n                            customerPhone: e.target.value,\r\n                          });\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <label>Customer Email</label>\r\n                      <Input\r\n                        placeholder=\"Email\"\r\n                        type=\"email\"\r\n                        value={this.state.customerEmail}\r\n                        onChange={(e) => {\r\n                          this.setState({\r\n                            customerEmail: e.target.value,\r\n                          });\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className=\"justify-content-between\">\r\n                    <Col\r\n                      md=\"12\"\r\n                      xs=\"12\"\r\n                      className=\"d-flex justify-content-end\"\r\n                      style={{ padding: \"18px\" }}\r\n                    >\r\n                      <Button\r\n                        disabled={!this.state.createdCutomer}\r\n                        color=\"success\"\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            createdCutomer: !this.state.createdCutomer,\r\n                          });\r\n                          if(!this.state.isAnUpdate){\r\n                            Axios.post(\"customer/create\", {\r\n                              name: this.state.customerName,\r\n                              organisation: this.state.customerOrg,\r\n                              email: this.state.customerEmail,\r\n                              phone: this.state.customerPhone,\r\n                            }).then((u) => {\r\n                              this.setState({\r\n                                createdCutomer: !this.state.createdCutomer,\r\n                                customerName: \"\",\r\n                                customerPhone: \"\",\r\n                                customerOrg: \"\",\r\n                                customerEmail: \"\",\r\n                              });\r\n                              this.CustomerTableRef.current.resetTable();\r\n                            });\r\n                          } else {\r\n                            Axios.put(\"customer/update/\"+this.state.customerId, {\r\n                              name: this.state.customerName,\r\n                              organisation: this.state.customerOrg,\r\n                              email: this.state.customerEmail,\r\n                              phone: this.state.customerPhone,\r\n                            }).then((u) => {\r\n                              this.setState({\r\n                                createdCutomer: !this.state.createdCutomer,\r\n                                customerName: \"\",\r\n                                customerPhone: \"\",\r\n                                customerOrg: \"\",\r\n                                customerEmail: \"\",\r\n                                isAnUpdate:!this.state.isAnUpdate\r\n                              });\r\n                              this.CustomerTableRef.current.resetTable();\r\n                            });\r\n                          }\r\n                        }}\r\n                      >\r\n                        {this.state.createdCutomer ? \"Save\" : \"Saving...\"}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle tag=\"h2\">Added Customers</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <CustomerTable\r\n                    ref={this.CustomerTableRef}\r\n                    setDataInParent={this.setDataToFields}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import Dashboard from \"views/Dashboard.js\";\r\nimport UserProfile from \"views/UserProfile.js\";\r\nimport ManageEvents from \"views/ManageEvents.js\";\r\nimport CitiesCountries from \"views/cities&countries.js\";\r\nimport Customers from \"views/customers.js\";\r\n\r\nvar routes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    rtlName: \"لوحة القيادة\",\r\n    icon: \"tim-icons icon-chart-pie-36\",\r\n    component: Dashboard,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/manage-events\",\r\n    name: \"Manage Events\",\r\n    rtlName: \"إخطارات\",\r\n    icon: \"tim-icons icon-calendar-60\",\r\n    component: ManageEvents,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/Cities-Countries\",\r\n    name: \"Cities & Countries\",\r\n    rtlName: \"إخطارات\",\r\n    icon: \"tim-icons icon-book-bookmark\",\r\n    component: CitiesCountries,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/user-profile\",\r\n    name: \"Manage Users\",\r\n    rtlName: \"ملف تعريفي للمستخدم\",\r\n    icon: \"tim-icons icon-badge\",\r\n    component: UserProfile,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/customers\",\r\n    name: \"Customers\",\r\n    rtlName: \"ملف تعريفي للمستخدم\",\r\n    icon: \"tim-icons icon-single-02\",\r\n    component: Customers,\r\n    layout: \"/admin\",\r\n  },\r\n];\r\nexport default routes;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\r\nimport Footer from \"components/Footer/Footer.js\";\r\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\r\nimport routes from \"routes.js\";\r\n\r\nvar ps;\r\n\r\nclass Admin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backgroundColor: \"blue\",\r\n      sidebarOpened:\r\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      document.documentElement.className += \" perfect-scrollbar-on\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\r\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\r\n      let tables = document.querySelectorAll(\".table-responsive\");\r\n      for (let i = 0; i < tables.length; i++) {\r\n        ps = new PerfectScrollbar(tables[i]);\r\n      }\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps.destroy();\r\n      document.documentElement.className += \" perfect-scrollbar-off\";\r\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\r\n    }\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (e.history.action === \"PUSH\") {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        let tables = document.querySelectorAll(\".table-responsive\");\r\n        for (let i = 0; i < tables.length; i++) {\r\n          ps = new PerfectScrollbar(tables[i]);\r\n        }\r\n      }\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n  }\r\n  // this function opens and closes the sidebar on small devices\r\n  toggleSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\r\n  };\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  handleBgClick = color => {\r\n    this.setState({ backgroundColor: color });\r\n  };\r\n  getBrandText = path => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"wrapper\">\r\n          <Sidebar\r\n            {...this.props}\r\n            routes={routes}\r\n            bgColor={this.state.backgroundColor}\r\n            toggleSidebar={this.toggleSidebar}\r\n          />\r\n          <div\r\n            className=\"main-panel\"\r\n            ref=\"mainPanel\"\r\n            data={this.state.backgroundColor}\r\n          >\r\n            <AdminNavbar\r\n              {...this.props}\r\n              brandText={this.getBrandText(this.props.location.pathname)}\r\n              toggleSidebar={this.toggleSidebar}\r\n              sidebarOpened={this.state.sidebarOpened}\r\n            />\r\n            <Switch>\r\n              {this.getRoutes(routes)}\r\n              <Redirect from=\"*\" to=\"/admin/dashboard\"/>\r\n            </Switch>\r\n            {// we don't want the Footer to be rendered on map page\r\n            this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\r\n              <Footer fluid />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","/*!\r\n\r\n=========================================================\r\n* Black Dashboard React v1.1.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport AdminLayout from \"layouts/Admin/Admin.js\";\r\n\r\nimport \"assets/scss/black-dashboard-react.scss\";\r\nimport \"assets/demo/demo.css\";\r\nimport \"assets/css/nucleo-icons.css\";\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={hist}>\r\n    <Switch>\r\n      <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\r\n      <Redirect from=\"/\" to=\"/admin/dashboard\" />\r\n    </Switch>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}