{"version":3,"sources":["assets/img/anime3.png","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/Sidebar/Sidebar.js","components/sub/querycard.js","components/sub/axios.js","components/sub/eventsTable.js","views/Dashboard.js","views/UserProfile.js","components/sub/Editor.js","components/sub/autosuggest-norm.js","components/sub/autosuggest.js","components/sub/categorychips.js","components/sub/agendas.js","components/sub/transfers.js","views/ManageEvents.js","components/sub/cities&countriesTable.js","views/cities&countries.js","components/sub/customersTable.js","views/customers.js","routes.js","layouts/Admin/Admin.js","index.js"],"names":["module","exports","AdminNavbar","React","Component","constructor","props","super","updateColor","window","innerWidth","this","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","type","onClick","toggleSidebar","NavbarBrand","href","e","preventDefault","brandText","aria-expanded","aria-label","data-target","data-toggle","id","Collapse","navbar","isOpen","Nav","InputGroup","Button","UncontrolledDropdown","nav","DropdownToggle","caret","alt","src","require","DropdownMenu","right","tag","NavLink","DropdownItem","divider","Modal","modalClassName","toggle","Input","placeholder","data-dismiss","Footer","NavItem","Date","getFullYear","target","ps","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","imgSrc","text","to","innerLink","data","ref","map","prop","key","redirect","path","pro","layout","activeClassName","icon","rtlName","name","defaultProps","QuerCard","isOpenQuestion","updateAnswer","sampleAnswerOne","sampleAnswerTwo","sampleAnswerThree","Fragment","Row","Col","md","style","cursor","Badge","Card","marginBottom","CardBody","padding","fontSize","value","onChange","axios","create","baseURL","EventTable","forwardRef","useState","overlayLoader","setOverlayLoader","progress","setProgress","setData","createTheme","primary","secondary","background","default","action","button","hover","disabled","useEffect","handleDeleteAction","swal","title","buttons","dangerMode","then","willDelete","a","arr","filter","item","Axios","delete","columns","useMemo","selector","cell","row","handleDownloadAction","open","ignoreRowClick","allowOverflow","handleEditAction","get","u","localStorage","setItem","JSON","stringify","history","push","display","class","theme","pagination","progressPending","progressComponent","withRouter","Dashboard","Promise","all","currentTableCount","toString","pastTableCount","futureTableCount","b","c","tableTempData","tableData","futureTableData","element","obj","Customers","organisation","liveFrom","toDateString","liveTo","currentTableData","pastTableData","setBgChartData","bigChartData","tableState","console","log","xs","CardHeader","sm","CardTitle","ButtonGroup","active","size","defaultChecked","UserProfile","dropdownOpen","Form","FormGroup","htmlFor","CardFooter","Dropdown","header","Table","responsive","Editor","content","returnContent","config","readonly","tabIndex","onBlur","newContent","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","suggestion","Name","toLowerCase","activeSuggestion","showSuggestions","returnId","removeId","idArr","getElementById","split","index","splice","join","firstChild","innerText","setId","setDataUsingId","Id","onKeyDown","keyCode","length","suggestionsListComponent","fieldLength","clientWidth","width","Phone","hint","marginTop","paddingLeft","Height","paddingBottom","paddingRight","removeAllIds","includes","alert","categoryChipHit","addItemToUpdate","ChipHitAfterRemoving","CategoryChips","addChip","val","tempChips","chips","addChipByremoving","removeAllChips","temArr","Agendas","returnState","resetState","venue","startTime","endTime","remarks","startDate","toISOString","Transfers","origin","destination","mode","vehicleNumber","driverName","distance","driverPhone","journeyTime","transferDate","s26","s50","marginLeft","ManageEvents","createNewTransfer","tempTansfers","transfers","transferRef","createRef","component","isFilled","rIsFilled","haveAnythingEmpty","formData","setDataToFields","parse","eventId","eventName","eventBy","CustomerId","eventFrom","eventTo","venueName","Locations","venueUrl","url","customerId","eventPlackCardImageName","plackCardImage","eventImageName","eventImage","welcomeNote","countryId","CountryId","cityId","CityId","agendas","EventAttendies","Attendees","isSameAsArriving","dticket","representativeArr","Representatives_for_Events","Employees","Representative_Categories","RepresentativeCategoryId","EmployeeId","elem","countryRef","current","cityRef","customerRef","componentWillMount","d","f","suggestionCountries","suggestionCities","sugggestionCustomers","phone","Representatives","RepresentativesCategory","getItem","representativeNameRef","categoryChipHitAfterRemoving","representativeCategoryRef","representativesNameChipHitAfterRemoving","categoryNameChipHit","categoryIdfromHiddenField","RepresentativeNameAutocompleteRef","categoryIdfromHiddenField_CategoryName","RepresentativeCategoryAutocompleteRef","modifyDataWithEventId","EventId","Attendies","submitEvent","eventFormData","FormData","append","eventPlackCardImage","put","post","representatives","transfersData","attendeesData","agendasData","status","setCountryId","setCityId","setCustomerId","EditorRef","agendaRef","addedAttendie","createNewRepresentative","createNewRepresentativeCategory","createdNewRepresentativeCategory","createdRepresentative","currTransferElement","representativePhone","representativeName","representativeCategoryName","TicketsSame","isEditorOpen","aTicketFileName","dTicketFileName","updatingAgenda","updatingAttendee","updatingAgendaObject","updatingRepresentatives","updatingRepresentativesNameId","updatingRepresentativesCategoryId","updatingAttendeePhone","files","flex","message","temp","Category","representativesIds","representativesCatIds","representativesArray","forEach","elementCatId","newArr","concat","unique","distinct","i","marginRight","checked","newAttendieObj","fileToLoad","fileone","fileReader","FileReader","onload","fileLoadedEvent","result","readAsDataURL","filetwo","fileToLoadSecond","fileReadertwo","fileLoadedEvent1","Ea","updatingAttendeeId","backgroundColor","tempTransfers","toLocaleString","hour","minute","hour12","MyComponentHook","getData","Cities","Countries","image","desc","useImperativeHandle","resetTable","updateState","useCallback","Image","setDataInParent","onSelectedRowsChange","CitiesCountries","suggestionCity","locationName","locationDesc","isAnUpdate","locationId","_cityRef","City","_countryRef","Country","cityModalRef","tableRef","createdLocation","locationImageFile","locationImageName","createdCity","createdCountry","modalCountryCreated","countryName","cityFile","cityFileName","cityName","paddingTop","Label","formdata","values","customers","customerName","customerPhone","customerOrg","customerEmail","email","CustomerTableRef","createdCutomer","Admin","getRoutes","handleBgClick","getBrandText","mainPanel","tables","querySelectorAll","componentDidUpdate","scrollTop","scrollingElement","from","hist","createBrowserHistory","ReactDOM"],"mappings":"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","file":"static/js/main.b615b1b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\",\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\",\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\",\n      });\n    }\n  };\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\",\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen,\n    });\n  };\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch,\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened,\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                <InputGroup className=\"search-bar\">\n                  <Button\n                    color=\"link\"\n                    data-target=\"#searchModal\"\n                    data-toggle=\"modal\"\n                    id=\"search-button\"\n                    onClick={this.toggleModalSearch}\n                  >\n                    <i className=\"tim-icons icon-zoom-split\" />\n                    <span className=\"d-lg-none d-md-block\">Search</span>\n                  </Button>\n                </InputGroup>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                    </NavLink>\n                    <DropdownItem divider tag=\"li\" />\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","import React from \"react\";\nimport { Container, Row, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Container fluid>\n          <Nav>\n            <NavItem>\n              <NavLink href=\"http://www.delve-serwiz.com/\">\n                DELVE SERVIZ\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"http://www.delve-serwiz.com/index.php#d_about\">\n                About Us\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <div className=\"copyright\">\n            © {new Date().getFullYear()} made with{\" \"}\n            <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\n            <a\n              href=\"https://grevity.in\"\n              target=\"_blank\"\n            >\n              Grevity\n            </a>{\" \"}\n            for a better web.\n          </div>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  render() {\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </Link>\n        );\n        logoText = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </Link>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav>\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.props.toggleSidebar}\n                  >\n                    <i className={prop.icon} />\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardBody,\n  Collapse,\n  Col,\n  Row,\n  Badge,\n  Button,\n  Input,\n} from \"reactstrap\";\n\nexport default class QuerCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      isOpenQuestion: false,\n      updateAnswer: false,\n      sampleAnswerOne:\n        \"Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident\",\n      sampleAnswerTwo:\n        \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n      sampleAnswerThree: \"\",\n    };\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"Collapse-Query-Header\">\n          <Row>\n            <Col md=\"4\">\n              <h4\n                style={{\n                  cursor: \"pointer\",\n                }}\n                onClick={() => {\n                  this.setState({\n                    isOpen: !this.state.isOpen,\n                  });\n                }}\n              >\n                Sample Event Name\n              </h4>\n            </Col>\n            <Col md=\"4\" className=\"d-flex align-items-center\">\n              <h6>\n                New Queries Raised <Badge color=\"warning\">0</Badge>\n              </h6>\n            </Col>\n            <Col md=\"4\" className=\"d-flex align-items-center\">\n              <h6>\n                Queries Resolved <Badge color=\"success\">1</Badge>\n              </h6>\n            </Col>\n          </Row>\n          <Collapse isOpen={this.state.isOpen}>\n            <Card\n              style={{\n                marginBottom: \"0px\",\n              }}\n            >\n              <CardBody\n                style={{\n                  padding: \"0px\",\n                }}\n              >\n                <div className=\"Collapse-Query-Header\">\n                  <Row>\n                    <Col md=\"12\">\n                      <label\n                        style={{\n                          cursor: \"pointer\",\n                          fontSize: \"14px\",\n                        }}\n                      >\n                        Sample Question raised from sample attendee from sample\n                        event Lorem Ipsum\n                      </label>\n                    </Col>\n                    <Col md=\"12\">\n                      <Button\n                        color=\"success\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          this.setState({\n                            isOpenQuestion: !this.state.isOpenQuestion,\n                          });\n                        }}\n                      >\n                        {this.state.isOpenQuestion ? \"Hide\" : \"Show\"} Answer\n                      </Button>\n                      <Button\n                        color=\"success\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          this.setState({\n                            updateAnswer: !this.state.updateAnswer,\n                          });\n                        }}\n                      >\n                        Update Answer\n                      </Button>\n                    </Col>\n                  </Row>\n                  <Collapse isOpen={this.state.isOpenQuestion}>\n                    <Card\n                      style={{\n                        marginBottom: \"0px\",\n                      }}\n                    >\n                      <CardBody\n                        style={{\n                          color: \"white\",\n                        }}\n                      >\n                        {this.state.updateAnswer ? (\n                          <Input\n                            type=\"textarea\"\n                            value={this.state.sampleAnswerOne}\n                            onChange={(e) => {\n                              this.setState({\n                                sampleAnswerOne: e.target.value,\n                              });\n                            }}\n                          />\n                        ) : (\n                          this.state.sampleAnswerOne\n                        )}\n                      </CardBody>\n                    </Card>\n                  </Collapse>\n                </div>\n              </CardBody>\n            </Card>\n          </Collapse>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: `http://162.241.71.139:5000/v1/`,\n});\n","import React, {\n  useState,\n  useMemo,\n  useEffect,\n  forwardRef,\n} from \"react\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport Axios from \"./axios\";\nimport swal from \"sweetalert\";\nimport { Button } from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\nconst EventTable = forwardRef((props, ref) => {\n  const [overlayLoader, setOverlayLoader] = useState(false);\n  const [progress, setProgress] = useState(true);\n  const [data, setData] = useState([]);\n  createTheme(\"solarized\", {\n    text: {\n      primary: \"#ffffff\",\n      secondary: \"#9A9A9A\",\n    },\n    background: {\n      default: \"#27293d\",\n    },\n    action: {\n      button: \"rgba(0,0,0,.54)\",\n      hover: \"rgba(0,0,0,.08)\",\n      disabled: \"rgba(0,0,0,.12)\",\n    },\n  });\n\n  useEffect(() => {\n    if(props.data != null){\n      setProgress(false);\n    }\n  }, [props.data]);\n  const handleDeleteAction = (value) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        var arr = data.filter((item) => item.id !== value.id);\n        setData(arr);\n        await Axios.delete(\"/customer/delete/\" + value.id);\n        swal(\"Poof! Your content has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your Data is Safe!\");\n      }\n    });\n  };\n  const handleEditAction = (value) => {\n    setOverlayLoader(true);\n    Axios.get(\"/events/read-for-admin/\"+value.id)\n    .then(u=> {\n      setOverlayLoader(false);\n      localStorage.setItem(\"eventDataToUpdate\", JSON.stringify(u));\n      return props.history.push('/admin/manage-events');\n    })\n    \n  };\n  const handleDownloadAction = (value) => {\n    window.open(\"http://162.241.71.139:5000/v1/events/download-id-proofs/\" + value.id, \"_blank\");\n  };\n  const columns = useMemo(() => [\n    {\n      name: \"Name\",\n      selector: \"name\",\n    },\n    {\n      name: \"Customer Name\",\n      selector: \"customerName\",\n    },\n    {\n      name: \"Organisation\",\n      selector: \"customerOrganisation\",\n    },\n    {\n      name: \"Starts On\",\n      selector: \"liveFrom\",\n    },\n    {\n      name: \"Ends On\",\n      selector: \"liveTo\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleDownloadAction(row)}\n        >\n          <i className=\"tim-icons icon-cloud-download-93\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Download\",\n      selector: \"Download\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleEditAction(row)}\n        >\n          <i className=\"tim-icons icon-pencil\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Edit\",\n      selector: \"edit\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-danger\"\n          onClick={() => handleDeleteAction(row)}\n        >\n          <i className=\"tim-icons icon-trash-simple\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      button: true,\n      name: \"Delete\",\n      selector: \"delete\",\n    },\n  ]);\n\n  return (\n    <>\n      <div\n        className=\"loading-overlay\"\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\n      >\n        <div class=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n        Loading...\n      </div>\n      <DataTable\n        data={props.data || []}\n        columns={columns}\n        theme=\"solarized\"\n        pagination={true}\n        progressPending={progress}\n        progressComponent={<h2>Loading Events... 📅</h2>}\n      />\n    </>\n  );\n});\n\nexport default withRouter(EventTable);\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport QueryCard from \"../components/sub/querycard\";\nimport Axios from '../components/sub/axios'\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport EventTable from \"components/sub/eventsTable\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data2\",\n      tableState: 1,\n      currentTableCount: 0,\n      pastTableCount: 0,\n      futureTableCount: 0,\n      tableData: [],\n    };\n  }\n  componentDidMount = () => {\n    Promise.all([\n      Axios.get(\n        \"/events/get-current-raw/\" + this.state.currentTableCount.toString()\n      ),\n      Axios.get(\"/events/get-past-raw/\" + this.state.pastTableCount.toString()),\n      Axios.get(\n        \"/events/get-future-raw/\" + this.state.futureTableCount.toString()\n      ),\n    ]).then(([a, b, c]) => {\n      var tableTempData = this.state.tableData;\n      var futureTableData = c.data.map((element) => {\n        var obj = {};\n        obj[\"id\"] = element.id;\n        obj[\"customerId\"] = element.Customers.id;\n        obj[\"customerName\"] = element.Customers.name;\n        obj[\"customerOrganisation\"] = element.Customers.organisation;\n        obj[\"liveFrom\"] = new Date(element.liveFrom).toDateString();\n        obj[\"liveTo\"] = new Date(element.liveTo).toDateString();\n        obj[\"name\"] = element.name;\n        return obj;\n      });\n      tableTempData.push(futureTableData);\n      var currentTableData = a.data.map((element) => {\n        var obj = {};\n        obj[\"id\"] = element.id;\n        obj[\"customerId\"] = element.Customers.id;\n        obj[\"customerName\"] = element.Customers.name;\n        obj[\"customerOrganisation\"] = element.Customers.organisation;\n        obj[\"liveFrom\"] = new Date(element.liveFrom).toDateString();\n        obj[\"liveTo\"] = new Date(element.liveTo).toDateString();\n        obj[\"name\"] = element.name;\n        return obj;\n      });\n      tableTempData.push(currentTableData);\n      var pastTableData = b.data.map((element) => {\n        var obj = {};\n        obj[\"id\"] = element.id;\n        obj[\"customerId\"] = element.Customers.id;\n        obj[\"customerName\"] = element.Customers.name;\n        obj[\"customerOrganisation\"] = element.Customers.organisation;\n        obj[\"liveFrom\"] = new Date(element.liveFrom).toDateString();\n        obj[\"liveTo\"] = new Date(element.liveTo).toDateString();\n        obj[\"name\"] = element.name;\n        return obj;\n      });\n      tableTempData.push(pastTableData);\n\n      this.setState({\n        tableData: tableTempData,\n      });\n    });\n  }\n  setBgChartData = (name) => {\n    this.setState({\n      bigChartData: name,\n    });\n  };\n  render() {\n    console.log(this.state.tableData[this.state.tableState]);\n    return (\n      <React.Fragment>\n        <div className=\"content\">\n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"6\">\n                      <h5 className=\"card-category\">Total Events</h5>\n                      <CardTitle tag=\"h2\">Events</CardTitle>\n                    </Col>\n                    <Col sm=\"6\">\n                      <ButtonGroup\n                        className=\"btn-group-toggle float-right\"\n                        data-toggle=\"buttons\"\n                      >\n                        <Button\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data1\",\n                          })}\n                          color=\"info\"\n                          id=\"0\"\n                          size=\"sm\"\n                          onClick={() =>\n                            this.setState({\n                              tableState: 2,\n                              bigChartData: \"data1\",\n                            })\n                          }\n                        >\n                          <input\n                            defaultChecked\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Expired\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-single-02\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"1\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data2\",\n                          })}\n                          onClick={() =>\n                            this.setState({\n                              tableState: 1,\n                              bigChartData: \"data2\",\n                            })\n                          }\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Current\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-gift-2\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"2\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data3\",\n                          })}\n                          onClick={() =>\n                            this.setState({\n                              tableState: 0,\n                              bigChartData: \"data3\",\n                            })\n                          }\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Upcoming\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-tap-02\" />\n                          </span>\n                        </Button>\n                      </ButtonGroup>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <EventTable\n                    data={this.state.tableData[this.state.tableState] || null}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardBody>\n                  <QueryCard />\n                  <QueryCard />\n                  <QueryCard />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Table,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Dropdown,\n  Col,\n} from \"reactstrap\";\n\nclass UserProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n    };\n  }\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Edit Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label>Full Name</label>\n                          <Input placeholder=\"Name\" type=\"text\" />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label htmlFor=\"exampleInputEmail1\">\n                            Email address\n                          </label>\n                          <Input placeholder=\"mike@email.com\" type=\"email\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Phone Number</label>\n                          <Input placeholder=\"Phone Number\" type=\"number\" />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Password</label>\n                          <Input placeholder=\"password\" type=\"password\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n                <CardFooter>\n                  <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Create Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label>Full Name</label>\n                          <Input placeholder=\"Name\" type=\"text\" />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label htmlFor=\"exampleInputEmail1\">\n                            Email address\n                          </label>\n                          <Input placeholder=\"mike@email.com\" type=\"email\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Password</label>\n                          <Input placeholder=\"password\" type=\"password\" />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Phone Number</label>\n                          <Input placeholder=\"Phone Number\" type=\"number\" />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Role</label>\n                          <Dropdown\n                            isOpen={this.state.dropdownOpen}\n                            toggle={() => {\n                              this.setState({\n                                dropdownOpen: !this.state.dropdownOpen,\n                              });\n                            }}\n                          >\n                            <DropdownToggle>Select Role</DropdownToggle>\n                            <DropdownMenu>\n                              <DropdownItem header>\n                                Roles Available\n                              </DropdownItem>\n                              <DropdownItem>Super Admin</DropdownItem>\n                              <DropdownItem>Admin</DropdownItem>\n                            </DropdownMenu>\n                          </Dropdown>\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n                <CardFooter>\n                  <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\n                    Create\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <CardHeader>\n                    <h5 className=\"title\">Users List</h5>\n                  </CardHeader>\n                  <CardBody>\n                    <Table className=\"tablesorter\" responsive>\n                      <thead className=\"text-primary\">\n                        <tr>\n                          <th>User Name</th>\n                          <th>User Email</th>\n                          <th>User Phone</th>\n                          <th className=\"text-center\">Actions</th>\n                        </tr>\n                      </thead>\n                    </Table>\n                  </CardBody>\n                </CardHeader>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React, { Component } from \"react\";\nimport JoditEditor from \"jodit-react\";\n\nclass Editor extends Component {\n  state = {\n    content: \"\",\n  };\n  returnContent = () => {\n    return this.state.content\n  }\n  render() {\n    const config = {\n      readonly: false, // all options from https://xdsoft.net/jodit/doc/\n    };\n    return (\n      <JoditEditor\n        value={this.content}\n        config={config}\n        tabIndex={1} // tabIndex of textarea\n        onBlur={(newContent) => this.setState({ content: newContent })} // preferred to use only this option to update the content for performance reasons\n        onChange={(newContent) => {}}\n      />\n    );\n  }\n}\nexport default Editor;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input, Col,Row } from \"reactstrap\";\n\nclass Autocomplete extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array),\n  };\n  static defaultProps = {\n    suggestions: [],\n  };\n  constructor(props) {\n    super(props);\n    console.log(props)\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n      id:null,\n    };\n  }\n  onChange = (e) => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n    const filteredSuggestions = suggestions.filter(\n      (suggestion) =>\n        suggestion.Name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value,\n    });\n  };\n  returnId = () => {\n    return this.state.id;\n  }\n  removeId = (id) => {\n    var idArr = document.getElementById(this.props.id).value.split(\",\");\n    const index = idArr.indexOf(id);\n    if (index > -1) {\n      idArr.splice(index, 1);\n    }\n    document.getElementById(this.props.id).value = idArr.join();\n  };\n  onClick = (e) => {\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      id: e.currentTarget.id,\n      userInput: e.currentTarget.firstChild.firstChild.innerText,\n    });\n    if(this.props.setId) this.props.setId(e.currentTarget.id);\n  };\n  setData = (data) => {\n    this.setState({\n      id: this.props.suggestions.filter((e) => e.Name == data)[0].id,\n      userInput: data,\n    });\n  }\n  setDataUsingId = (Id) => {\n    this.setState({\n      id: this.props.suggestions.filter((e) => e.id == Id)[0].id,\n      userInput: this.props.suggestions.filter((e) => e.id == Id)[0].Name,\n    });\n  }\n  onKeyDown = (e) => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n    if (e.keyCode === 13) {\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[activeSuggestion],\n      });\n    } else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n  };\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput,\n      },\n    } = this;\n\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        var fieldLength = document.getElementById(this.props.id).clientWidth;\n        suggestionsListComponent = (\n          <div className=\"row\">\n            <ul\n              class={`suggestions ${this.props.className}`}\n              style={{ width: fieldLength }}\n            >\n              {filteredSuggestions.map((suggestion, index) => {\n                let className;\n                if (index === activeSuggestion) {\n                  className = \"suggestion-active\";\n                }\n                console.log(suggestion);\n                return (\n                  <li\n                    className={className}\n                    key={suggestion.id}\n                    id={suggestion.id}\n                    onClick={onClick}\n                  >\n                    <Row>\n                      <Col md=\"6\">{suggestion.Name}</Col>\n                      {suggestion.Phone != undefined ?  <Col md=\"6\">\n                        <em>{suggestion.Phone}</em>\n                      </Col> : null}\n                    </Row>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        );\n      } else {\n        var fieldLength = document.getElementById(this.props.id).clientWidth;\n        suggestionsListComponent = (\n          <div className=\"row justify-content-center\">\n            <ul class=\"suggestions\" style={{ width: fieldLength }}>\n              <li>\n                <em>No suggestions (or wait)</em>\n              </li>\n            </ul>\n          </div>\n        );\n      }\n    }\n    return (\n      <Fragment>\n        <Input\n          type=\"text\"\n          class=\"form-control d-xl-flex\"\n          id={this.props.id}\n          placeholder={this.props.hint == null ? \"Name\" : this.props.hint}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          style={{\n            marginTop: this.props.marginTop || \"17px\",\n            paddingLeft: \"12px\",\n            marginBottom: \"0px\",\n            Height: \"38px\",\n            paddingBottom: \"7px\",\n            width: \"100%\",\n            paddingRight: \"19px\",\n          }}\n          value={userInput}\n        />\n        <div className=\"row\">{suggestionsListComponent}</div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Autocomplete;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Autocomplete extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array),\n  };\n\n  static defaultProps = {\n    suggestions: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n    };\n  }\n\n  onChange = (e) => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n    const filteredSuggestions = suggestions.filter(\n      (suggestion) =>\n        suggestion.Name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value,\n    });\n  };\n  removeId = (id) => {\n    var idArr = document.getElementById(this.props.id).value.split(\",\");\n    const index = idArr.indexOf(id.toString());\n    if (index > -1) {\n      idArr.splice(index, 1);\n    }\n    document.getElementById(this.props.id).value = idArr.join();\n  };\n  removeAllIds = () => {\n    document.getElementById(this.props.id).value = \"\"\n  }\n  onClick = (e) => {\n    var idArr =\n      document.getElementById(this.props.id).value === \"\"\n        ? []\n        : document.getElementById(this.props.id).value.split(\",\");\n    if (idArr.includes(e.target.id)) {\n      alert(\"Already Added this Catagory\");\n    } else {\n      idArr.push(e.target.id);\n      document.getElementById(this.props.id).value = idArr.join();\n      this.props.categoryChipHit({\n        name: e.currentTarget.innerText,\n        id: e.target.id,\n      });\n    }\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n    });\n  };\n  addItemToUpdate = (data) => {\n    document.getElementById(this.props.id).value = data.id;\n    this.props.ChipHitAfterRemoving({\n      name: data.name,\n      id: data.id,\n    });\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n    });\n  }\n  onKeyDown = (e) => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n    if (e.keyCode === 13) {\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[activeSuggestion],\n      });\n    } else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n  };\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput,\n      },\n    } = this;\n\n    let suggestionsListComponent;\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        var fieldLength = document.getElementById(\"txtcategory\").clientWidth;\n        suggestionsListComponent = (\n          <div className=\"row\">\n            <ul class=\"suggestions\" style={{ width: fieldLength }}>\n              {filteredSuggestions.map((suggestion, index) => {\n                let className;\n                if (index === activeSuggestion) {\n                  className = \"suggestion-active\";\n                }\n                return (\n                  <li\n                    className={className}\n                    key={suggestion.id}\n                    id={suggestion.id}\n                    onClick={onClick}\n                  >\n                    {suggestion.Name}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        );\n      } else {\n        var fieldLength = document.getElementById(\"txtcategory\").clientWidth;\n        suggestionsListComponent = (\n          <div className=\"row justify-content-center\">\n            <ul class=\"suggestions\" style={{ width: fieldLength }}>\n              <li>\n                <em>No suggestions</em>\n              </li>\n            </ul>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <Fragment>\n        <input type=\"hidden\" id={this.props.id} />\n        <input\n          type=\"text\"\n          class=\"form-control d-xl-flex\"\n          id=\"txtcategory\"\n          placeholder={this.props.hint == null ? \"Name\" : this.props.hint}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          style={{\n            marginTop: \"17px\",\n            paddingLeft: \"12px\",\n            Height: \"38px\",\n            paddingBottom: \"7px\",\n            width: \"100%\",\n            paddingRight: \"19px\",\n          }}\n          value={userInput}\n        />\n        <div className=\"row\">{suggestionsListComponent}</div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Autocomplete;\n","import React, { Component } from \"react\";\n\nclass CategoryChips extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chips: [],\n    };\n  }\n  addChip = (val) => {\n    var tempChips = this.state.chips;\n    tempChips.push(val);\n    this.setState({\n      chips: tempChips,\n    });\n  };\n  addChipByremoving = (val) => {\n    this.setState(\n      {\n        chips: [],\n      },\n      () => {\n        var tempChips = this.state.chips;\n        tempChips.push(val);\n        this.setState({\n          chips: tempChips,\n        });\n      }\n    );\n  }\n  removeAllChips = () => {\n    this.setState({\n      chips: [],\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"root-chips row\">\n          {this.state.chips.length == 0 ? (\n            <em>Nothing've been Added Yet!</em>\n          ) : (\n            this.state.chips.map((item) => (\n              <div\n                key={item.id}\n                onClick={() => {\n                  this.props.removeId(item.id);\n                  var temArr = this.state.chips.filter((element) => {\n                    return element.id != item.id;\n                  });\n                  this.setState({\n                    chips: temArr,\n                  });\n                }}\n              >\n                {item.name}\n              </div>\n            ))\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CategoryChips;\n","import React,{ Component } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\nexport default class Agendas extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          id:\"\",\n          name: \"\",\n          venue: \"\",\n          startTime: \"\",\n          endTime: \"\",\n          remarks: \"\",\n          startDate: \"\",\n        };\n    }\n    returnState = () => {\n        return this.state\n    }\n    resetState = () => {\n      this.setState({\n        name: \"\",\n        venue: \"\",\n        startTime: \"\",\n        endTime: \"\",\n        remarks: \"\",\n        startDate: \"\",\n        id:\"\",\n      });\n    }\n    setData = (data) => {\n      this.setState({\n        id:data.id,\n        name: data.name,\n        venue: data.venue,\n        startTime: new Date(data.startTime).toISOString().split(\"Z\")[0],\n        endTime: new Date(data.endTime).toISOString().split(\"Z\")[0],\n        remarks: data.remarks,\n        startDate: data.startDate,\n      });\n    }\n    render() {\n        return (\n            <Row>\n              <Col md=\"12\">\n                <FormGroup>\n                  <label>Agendas Name (Particulars)</label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Particulars\"\n                    value={this.state.name}\n                    onChange={(e) => {\n                      this.setState({\n                        name: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"6\">\n                <FormGroup>\n                  <label>Agenda Start Date & Time</label>\n                  <Input\n                    type=\"datetime-local\"\n                    value={this.state.startTime}\n                    onChange={(e) => {\n                      console.log(e.target.value)\n                      this.setState({\n                        startTime: e.target.value,\n                        startDate: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"6\">\n                <FormGroup>\n                  <label>Agenda End Date & Time</label>\n                  <Input\n                    type=\"datetime-local\"\n                    value={this.state.endTime}\n                    onChange={(e) => {\n                      this.setState({\n                        endTime: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"12\">\n                <FormGroup>\n                  <label>Agenda Venue</label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Venue\"\n                    value={this.state.venue}\n                    onChange={(e) => {\n                      this.setState({\n                        venue: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"12\">\n                <FormGroup>\n                  <label>Remarks</label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Remarks/Dress Code\"\n                    value={this.state.remarks}\n                    onChange={(e) => {\n                      this.setState({\n                        remarks: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n        );\n                     \n    }\n}","import React,{ Component } from \"react\";\nimport {\n    Row,\n    Col,\n    FormGroup,\n    Input,\n} from \"reactstrap\";\n\nexport default class Transfers extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          id: undefined,\n          name: \"\",\n          origin: \"\",\n          destination: \"\",\n          mode: \"\",\n          vehicleNumber: \"\",\n          driverName: \"\",\n          distance: \"\",\n          driverPhone: \"\",\n          journeyTime: \"\",\n          transferDate: \"\",\n        };\n    }\n\n    returnState = () => {\n        return this.state\n    }\n    setData = (data) => {\n      this.setState({\n        id:data.id,\n        name: data.name,\n        origin: data.origin,\n        destination: data.destination,\n        mode: data.mode,\n        vehicleNumber: data.vehicleNumber,\n        driverName: data.driverName,\n        distance: data.distance,\n        driverPhone: data.driverPhone,\n        journeyTime: data.journeyTime,\n        transferDate: data.transferDate.split(\"Z\")[0],\n      });\n    }\n    render() {\n        return (\n          <Col md=\"12\">\n            <Col md=\"12\" className=\"category-col\">\n              <label>Transfer Name</label>\n              <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Transfer Name\"\n                      value={this.state.name}\n                      onChange={(e) => {\n                        this.setState({\n                          name: e.target.value,\n                        });\n                      }}\n                    ></Input>\n                  </Col>\n                </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <label>Transfer Date</label>\n                    <Input\n                      type=\"datetime-local\"\n                      value={this.state.transferDate}\n                      onChange={(e) => {\n                        this.setState({\n                          transferDate: e.target.value,\n                        });\n                      }}\n                    ></Input>\n                  </Col>\n                </Row>\n              </FormGroup>\n              <Row>\n                <Col md=\"6\">\n                  <label>Mode of Transfer</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Vehicle Type\"\n                          value={this.state.mode}\n                          onChange={(e) => {\n                            this.setState({\n                              mode: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <label>Vehicle Number</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Vehicle Number\"\n                          value={this.state.vehicleNumber}\n                          onChange={(e) => {\n                            this.setState({\n                              vehicleNumber: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"6\">\n                  <label>Driver Name</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Name\"\n                          value={this.state.driverName}\n                          onChange={(e) => {\n                            this.setState({\n                              driverName: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <label>Driver Phone</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"number\"\n                          placeholder=\"Phone Number\"\n                          value={this.state.driverPhone}\n                          onChange={(e) => {\n                            this.setState({\n                              driverPhone: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"6\">\n                  <label>Origin</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Location\"\n                          value={this.state.origin}\n                          onChange={(e) => {\n                            this.setState({\n                              origin: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <label>Destination</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Location\"\n                          value={this.state.destination}\n                          onChange={(e) => {\n                            this.setState({\n                              destination: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"6\">\n                  <label>Total Distance</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Distance (Kms)\"\n                          value={this.state.distance}\n                          onChange={(e) => {\n                            this.setState({\n                              distance: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <label>Journey Time</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Time\"\n                          value={this.state.journeyTime}\n                          onChange={(e) => {\n                            this.setState({\n                              journeyTime: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </Col>\n          </Col>\n        );\n\n    }\n}","import React, { createRef } from \"react\";\nimport Editor from \"../components/sub/Editor\";\nimport Autocomplete from \"../components/sub/autosuggest-norm\";\nimport Axios from \"../components/sub/axios\";\nimport AutocompleteSimple from \"../components/sub/autosuggest\";\nimport CategoryChips from \"../components/sub/categorychips\";\nimport Agendas from \"../components/sub/agendas\";\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Table,\n} from \"reactstrap\";\nimport Transfers from \"components/sub/transfers\";\nimport dist from \"react-notification-alert\";\nconst s26 = {\n  width: \"100%\",\n};\n\nconst s50 = {\n  marginLeft: \"15px\",\n  marginTop: \"14px\",\n};\n\nclass ManageEvents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.EditorRef = createRef();\n    this.EventAttendies = createRef();\n    this.agendaRef = createRef();\n    this.countryRef = createRef();\n    this.customerRef = createRef();\n    this.cityRef = createRef();\n\n    this.representativeNameRef = createRef();\n    this.RepresentativeNameAutocompleteRef = createRef();\n\n    this.representativeCategoryRef = createRef();\n    this.RepresentativeCategoryAutocompleteRef = createRef();\n    this.state = {\n      eventId: null,\n      eventName: \"\",\n      eventBy: null,\n      eventFrom: \"\",\n      eventTo: \"\",\n      venueName: \"\",\n      venueUrl: \"\",\n      eventImage: \"\",\n      eventPlackCardImage: \"\",\n      addedAttendie: true,\n      eventPlackCardImageName: \"Choose Image File\",\n      eventImage: \"\",\n      eventImageName: \"Choose Image File\",\n      welcomeNote: \"\",\n      countryId: null,\n      cityId: null,\n      customerId: null,\n      createNewRepresentative: false,\n      createNewRepresentativeCategory: false,\n      createdNewRepresentativeCategory: true,\n      createdRepresentative: true,\n      suggestionCities: [],\n      sugggestionCustomers: [],\n      suggestionCountries: [],\n      transfers: [],\n      agendas: [],\n      currTransferElement: null,\n      rIsFilled: true,\n      representativePhone: \"\",\n      representativeName: \"\",\n      representativeCategoryName: \"\",\n      Representatives: [],\n      EventAttendies: [],\n      representativeArr: [],\n      RepresentativesCategory: [],\n      TicketsSame: false,\n      isEditorOpen:false,\n      aTicketFileName: \"Choose Ticket File\",\n      dTicketFileName: \"Choose Ticket File\",\n      updatingAgenda: false,\n      updatingAttendee: false,\n      updatingAgendaObject: null,\n      updatingRepresentatives: false,\n      updatingRepresentativesNameId: null,\n      updatingRepresentativesCategoryId: null,\n      updatingAttendeePhone: null,\n    };\n  }\n  createNewTransfer = (data) => {\n    var tempTansfers = [];\n    tempTansfers = this.state.transfers;\n    var transferRef = createRef();\n    tempTansfers.push({\n      component: (\n        <Transfers ref={transferRef} key={this.state.transfers.length + 1} />\n      ),\n      ref: transferRef,\n      isFilled: data ? true : false,\n      data: data || {},\n    });\n    this.setState({\n      transfers: tempTansfers,\n      rIsFilled: data ? !!this.state.rIsFilled : !this.state.rIsFilled,\n    });\n  };\n  haveAnythingEmpty = (formData) => {\n    for (var key in formData) {\n      if (formData[key] === \"\") {\n        return true;\n      }\n    }\n    return false;\n  };\n  setDataToFields = (u) => {\n    var data = JSON.parse(u).data;\n    this.setState({\n      eventId: data.id,\n      eventName: data.name,\n      eventBy: data.CustomerId,\n      eventFrom: new Date(data.liveFrom).toISOString().split(\"T\")[0],\n      eventTo: new Date(data.liveTo).toISOString().split(\"T\")[0],\n      venueName: data.Locations.name,\n      venueUrl: data.Locations.url,\n      customerId: data.CustomerId,\n      eventPlackCardImageName: data.plackCardImage.split(\"/\")[\n        data.plackCardImage.split(\"/\").length - 1\n      ],\n      eventImageName: data.eventImage.split(\"/\")[\n        data.eventImage.split(\"/\").length - 1\n      ],\n      welcomeNote: data.welcomeNote,\n      countryId: data.Locations.CountryId,\n      cityId: data.Locations.CityId,\n      agendas: data.Agendas.map((a) => {\n        a = { ...a, startTime: new Date(a.startDate + \"T\" + a.startTime) };\n        a = { ...a, endTime: new Date(a.startDate + \"T\" + a.endTime) };\n        return a;\n      }),\n      EventAttendies: data.Attendees.map((a) => {\n        return {\n          ...a,\n          isSameAsArriving: a.dticket == null,\n        };\n      }),\n      representativeArr: data.Representatives_for_Events.map((a) => {\n        var obj = {};\n        obj[\"Name\"] = a.Employees.name;\n        obj[\"Category\"] = a.Representative_Categories.name;\n        obj[\"RepresentativeCategoryId\"] = a.RepresentativeCategoryId;\n        obj[\"EmployeeId\"] = a.EmployeeId;\n        obj[\"id\"] = a.id;\n        return obj;\n      }),\n    });\n    data.Transfers.map((elem) => {\n      this.createNewTransfer(elem);\n    });\n    this.countryRef.current.setDataUsingId(this.state.countryId);\n    this.cityRef.current.setDataUsingId(this.state.cityId);\n    this.customerRef.current.setDataUsingId(this.state.customerId);\n  };\n  componentWillMount = () => {\n    Promise.all([\n      Axios.get(\"/location/country/get-all\"),\n      Axios.get(\"/location/city/get-all\"),\n      Axios.get(\"/customer/get-all\"),\n      Axios.get(\"/representative/category/get-all\"),\n      Axios.get(\"/representative/employee/get-all\"),\n    ]).then(([u, a, d, e, f]) => {\n      this.setState({\n        suggestionCountries: u.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n        suggestionCities: a.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n        sugggestionCustomers: d.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          b[\"Phone\"] = a.phone;\n          return b;\n        }),\n        Representatives: f.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          b[\"Phone\"] = a.phone;\n          return b;\n        }),\n        RepresentativesCategory: e.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n      });\n      if (localStorage.getItem(\"eventDataToUpdate\"))\n        this.setDataToFields(localStorage.getItem(\"eventDataToUpdate\"));\n    });\n  };\n  categoryChipHit = (val) => {\n    this.representativeNameRef.current.addChip(val);\n  };\n  categoryChipHitAfterRemoving = (val) => {\n    this.representativeCategoryRef.current.addChipByremoving(val);\n  };\n  representativesNameChipHitAfterRemoving = (val) => {\n    this.representativeNameRef.current.addChipByremoving(val);\n  };\n  categoryNameChipHit = (val) => {\n    this.representativeCategoryRef.current.addChip(val);\n  };\n  categoryIdfromHiddenField = (val) => {\n    this.RepresentativeNameAutocompleteRef.current.removeId(val);\n  };\n  categoryIdfromHiddenField_CategoryName = (val) => {\n    this.RepresentativeCategoryAutocompleteRef.current.removeId(val);\n  };\n  modifyDataWithEventId = (EventId) => {\n    //represntatives...\n    var representativeTemp = this.state.representativeArr;\n    var newRepresentativeArr = representativeTemp.map((obj) => ({\n      ...obj,\n      EventId: EventId,\n    }));\n    //event attendies...\n    var EventAttendiesTemp = this.state.EventAttendies;\n    var newAttendiesObj = EventAttendiesTemp.map((obj) => ({\n      ...obj,\n      EventId: EventId,\n    }));\n    //event transfers...\n    var transfersTemp = this.state.transfers.map((a) => a.data);\n    var newTransferObj = transfersTemp.map((obj) => ({\n      ...obj,\n      EventId: EventId,\n    }));\n\n    //event agendas...\n    var eventAgendasTemp = this.state.agendas;\n    var newAgendasObj = eventAgendasTemp.map((obj) => ({\n      ...obj,\n      EventId: EventId,\n    }));\n\n    return {\n      Representatives: newRepresentativeArr,\n      Attendies: newAttendiesObj,\n      Transfers: newTransferObj,\n      Agendas: newAgendasObj,\n    };\n  };\n  submitEvent = (e) => {\n    e.preventDefault();\n    var eventFormData = new FormData();\n    eventFormData.append(\"name\", this.state.eventName);\n    eventFormData.append(\"liveFrom\", this.state.eventFrom);\n    eventFormData.append(\"liveTo\", this.state.eventFrom);\n    eventFormData.append(\"CustomerId\", this.state.eventBy);\n    eventFormData.append(\"PlackCardImage\", this.state.eventPlackCardImage);\n    eventFormData.append(\"desc\", this.state.welcomeNote);\n    eventFormData.append(\n      \"PlackCardImageName\",\n      this.state.eventPlackCardImageName\n    );\n    eventFormData.append(\"EventImage\", this.state.eventImage);\n    eventFormData.append(\"EventImageName\", this.state.eventImageName);\n    eventFormData.append(\"CityId\", this.state.cityId);\n    eventFormData.append(\"CountryId\", this.state.countryId);\n    eventFormData.append(\"url\", this.state.venueUrl);\n    eventFormData.append(\"venueName\", this.state.venueName);\n\n    if (this.state.eventId) {\n      //this is an update condition...\n      var EventId = this.state.eventId;\n      Axios.put(\"/events/update/\" + this.state.eventId, eventFormData).then(\n        (u) => {\n          var data = this.modifyDataWithEventId(EventId);\n          Axios.post(\"/events/upload-updated\", {\n            representatives: data.Representatives,\n            transfersData: data.Transfers,\n            attendeesData: data.Attendies,\n            agendasData: data.Agendas,\n            EventId: EventId,\n          }).then((a) => {\n            console.log(a);\n          });\n        }\n      );\n    } else {\n      Axios.post(\"/events/create\", eventFormData).then((u) => {\n        if (u.data.status == \"success\") {\n          var EventId = u.data.EventId;\n          var data = this.modifyDataWithEventId(EventId);\n          Axios.post(\"/events/upload\", {\n            representatives: data.Representatives,\n            transfersData: data.Transfers,\n            attendeesData: data.Attendies,\n            agendasData: data.Agendas,\n            EventId: EventId,\n          }).then((u) => {});\n        }\n      });\n    }\n  };\n  setCountryId = (id) => {\n    this.setState({\n      countryId: id,\n    });\n  };\n  setCityId = (id) => {\n    this.setState({\n      cityId: id,\n    });\n  };\n  setCustomerId = (id) => {\n    this.setState({\n      eventBy: id,\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Manage Events</CardTitle>\n                  <h5 className=\"card-category\">Create Event</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Event Name</label>\n                          <Input\n                            placeholder=\"Event Name\"\n                            type=\"text\"\n                            value={this.state.eventName}\n                            onChange={(e) => {\n                              this.setState({\n                                eventName: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Event By</label>\n                          <Autocomplete\n                            suggestions={this.state.sugggestionCustomers}\n                            hint={\"Customer Name\"}\n                            marginTop={\"0px\"}\n                            id={\"txtEventBy\"}\n                            paddingBottom={\"0px\"}\n                            ref={this.customerRef}\n                            setId={this.setCustomerId}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Event From</label>\n                          <Input\n                            type=\"date\"\n                            value={this.state.eventFrom}\n                            onChange={(e) => {\n                              this.setState({\n                                eventFrom: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Event To</label>\n                          <Input\n                            type=\"date\"\n                            value={this.state.eventTo}\n                            onChange={(e) => {\n                              this.setState({\n                                eventTo: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Venue Name</label>\n                          <Input\n                            placeholder=\"Full Name\"\n                            type=\"text\"\n                            value={this.state.venueName}\n                            onChange={(e) => {\n                              this.setState({\n                                venueName: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Venue Location Url</label>\n                          <Input\n                            placeholder=\"Url\"\n                            type=\"text\"\n                            value={this.state.venueUrl}\n                            onChange={(e) => {\n                              this.setState({\n                                venueUrl: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <label>Pick Plack Card Image</label>\n                        <div className=\"custom-file mb-2\">\n                          <Input\n                            type=\"file\"\n                            className=\"custom-file-input\"\n                            onChange={(e) => {\n                              this.setState({\n                                eventPlackCardImage: e.target.files[0],\n                                eventPlackCardImageName: e.target.files[0].name,\n                              });\n                            }}\n                          />\n                          <label\n                            className=\"custom-file-label\"\n                            htmlFor=\"customFileThumbanail\"\n                          >\n                            {this.state.eventPlackCardImageName}\n                          </label>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <label>Pick Event Image</label>\n                        <div className=\"custom-file mb-2\">\n                          <Input\n                            type=\"file\"\n                            className=\"custom-file-input\"\n                            onChange={(e) => {\n                              this.setState({\n                                eventImage: e.target.files[0],\n                                eventImageName: e.target.files[0].name,\n                              });\n                            }}\n                          />\n                          <label\n                            className=\"custom-file-label\"\n                            htmlFor=\"customFileThumbanail\"\n                          >\n                            {this.state.eventImageName}\n                          </label>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Country</label>\n                          <Autocomplete\n                            suggestions={this.state.suggestionCountries}\n                            hint={\"Country Name\"}\n                            marginTop={\"0px\"}\n                            id={\"txtCountrySuggest\"}\n                            ref={this.countryRef}\n                            setId={this.setCountryId}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>City</label>\n                          <Autocomplete\n                            suggestions={this.state.suggestionCities}\n                            hint={\"City Name\"}\n                            marginTop={\"0px\"}\n                            id={\"txtCitySuggest\"}\n                            ref={this.cityRef}\n                            setId={this.setCityId}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"12\">\n                        <label>Welcome Note</label>\n                        <Row>\n                          <Col md=\"12\">\n                            <Button\n                              color={this.state.isEditorOpen ? \"danger\" : \"\"}\n                              onClick={() => {\n                                if(this.state.isEditorOpen){\n                                  this.setState({\n                                    welcomeNote: this.EditorRef.current.returnContent(),\n                                  });\n                                }\n                                this.setState({\n                                  isEditorOpen: !this.state.isEditorOpen,\n                                });\n                              }}\n                            >\n                              {this.state.isEditorOpen\n                                ? \"Save & Close Editor\"\n                                : \"Open Editor\"}\n                            </Button>\n                          </Col>\n                        </Row>\n                        {this.state.isEditorOpen ? (\n                          <Editor ref={this.EditorRef} />\n                        ) : null}\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Representatives</CardTitle>\n                  <h5 className=\"card-category\">Add Representatives</h5>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col md=\"6\">\n                      {this.state.createNewRepresentative ? (\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label>New Representative</label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Name\"\n                              value={this.state.representativeName}\n                              onChange={(e) => {\n                                this.setState({\n                                  representativeName: e.target.value,\n                                });\n                              }}\n                            ></Input>\n                          </FormGroup>\n                          <FormGroup>\n                            <label>Phone Number</label>\n                            <div\n                              style={{\n                                display: \"flex\",\n                              }}\n                            >\n                              <Input\n                                name=\"search\"\n                                className=\"form-control\"\n                                style={{\n                                  flex: \"2\",\n                                  marginTop: \"4px\",\n                                }}\n                                value={this.state.representativePhone}\n                                onChange={(e) => {\n                                  this.setState({\n                                    representativePhone: e.target.value,\n                                  });\n                                }}\n                                placeholder=\"Phone Number\"\n                              />\n                              <button\n                                disabled={!this.state.createdRepresentative}\n                                style={{\n                                  marginLeft: \"15px\",\n                                }}\n                                class=\"btn btn-success\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    createdRepresentative: !this.state\n                                      .createdRepresentative,\n                                  });\n                                  Axios.post(\n                                    \"/representative/employee/create\",\n                                    {\n                                      name: this.state.representativeName,\n                                      phone: this.state.representativePhone,\n                                    }\n                                  ).then((u) => {\n                                    if (u.data.message == \"success\") {\n                                      var temp = this.state.Representatives;\n                                      temp.push({\n                                        Name: this.state.representativeName,\n                                        Phone: this.state.representativePhone,\n                                        id: u.data.data,\n                                      });\n                                      this.setState({\n                                        createdRepresentative: !this.state\n                                          .createdRepresentative,\n                                        representativeName: \"\",\n                                        representativePhone: \"\",\n                                        createNewRepresentative: !this.state\n                                          .createNewRepresentative,\n                                        Representatives: temp,\n                                      });\n                                    }\n                                  });\n                                }}\n                              >\n                                {this.state.createdRepresentative\n                                  ? \"Save\"\n                                  : \"Saving...\"}\n                              </button>\n                              <button\n                                disabled={!this.state.createdRepresentative}\n                                style={{\n                                  marginLeft: \"15px\",\n                                  padding: \"11px\",\n                                }}\n                                class=\"btn btn-danger\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    representativeName: \"\",\n                                    representativePhone: \"\",\n                                    createNewRepresentative: !this.state\n                                      .createNewRepresentative,\n                                  });\n                                }}\n                              >\n                                <i className=\"tim-icons icon-simple-remove\" />\n                              </button>\n                            </div>\n                          </FormGroup>\n                        </Col>\n                      ) : (\n                        <Col md=\"12\" className=\"category-col\">\n                          <label>Representative Name</label>\n                          <form\n                            class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\n                            style={s26}\n                          >\n                            <div\n                              className=\"form-group d-inline mb-2\"\n                              style={{ flex: \"1\" }}\n                            >\n                              <AutocompleteSimple\n                                suggestions={this.state.Representatives}\n                                id={\"txtRepresentatveSuggest\"}\n                                categoryChipHit={this.categoryChipHit}\n                                ChipHitAfterRemoving={\n                                  this.representativesNameChipHitAfterRemoving\n                                }\n                                ref={this.RepresentativeNameAutocompleteRef}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <button\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    createNewRepresentative: !this.state\n                                      .createNewRepresentative,\n                                  });\n                                }}\n                                className=\"btn btn-success\"\n                                style={s50}\n                              >\n                                + New\n                              </button>\n                            </div>\n                          </form>\n                          <CategoryChips\n                            ref={this.representativeNameRef}\n                            removeId={this.categoryIdfromHiddenField}\n                          />\n                        </Col>\n                      )}\n                      {this.state.createNewRepresentativeCategory ? (\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label>New Representative Category</label>\n                            <div\n                              style={{\n                                display: \"flex\",\n                              }}\n                            >\n                              <Input\n                                name=\"search\"\n                                className=\"form-control\"\n                                value={this.state.representativeCategoryName}\n                                onChange={(e) => {\n                                  this.setState({\n                                    representativeCategoryName: e.target.value,\n                                  });\n                                }}\n                                style={{\n                                  flex: \"2\",\n                                  marginTop: \"4px\",\n                                }}\n                                placeholder=\"Category Name\"\n                              />\n                              <button\n                                style={{\n                                  marginLeft: \"15px\",\n                                }}\n                                disabled={\n                                  !this.state.createdNewRepresentativeCategory\n                                }\n                                class=\"btn btn-success\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    createdNewRepresentativeCategory: !this\n                                      .state.createdNewRepresentativeCategory,\n                                  });\n                                  Axios.post(\n                                    \"/representative/category/create\",\n                                    {\n                                      name: this.state\n                                        .representativeCategoryName,\n                                    }\n                                  ).then((u) => {\n                                    if (u.data.message == \"success\") {\n                                      var temp = this.state\n                                        .RepresentativesCategory;\n                                      temp.push({\n                                        Name: this.state\n                                          .representativeCategoryName,\n                                        id: u.data.data,\n                                      });\n                                      this.setState({\n                                        RepresentativesCategory: temp,\n                                        createdNewRepresentativeCategory: !this\n                                          .state\n                                          .createdNewRepresentativeCategory,\n                                        representativeCategoryName: \"\",\n                                        createNewRepresentativeCategory: !this\n                                          .state\n                                          .createNewRepresentativeCategory,\n                                      });\n                                    }\n                                  });\n                                }}\n                              >\n                                {this.state.createdNewRepresentativeCategory\n                                  ? \"Save\"\n                                  : \"Saving...\"}\n                              </button>\n                              <button\n                                style={{\n                                  marginLeft: \"15px\",\n                                  padding: \"11px\",\n                                }}\n                                class=\"btn btn-danger\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    representativeName: \"\",\n                                    representativePhone: \"\",\n                                    createNewRepresentativeCategory: !this.state\n                                      .createNewRepresentativeCategory,\n                                  });\n                                }}\n                              >\n                                <i className=\"tim-icons icon-simple-remove\" />\n                              </button>\n                            </div>\n                          </FormGroup>\n                        </Col>\n                      ) : (\n                        <Col md=\"12\" className=\"category-col\">\n                          <label>Representative Category</label>\n                          <form\n                            class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\n                            style={s26}\n                          >\n                            <div\n                              className=\"form-group d-inline mb-2\"\n                              style={{ flex: \"1\" }}\n                            >\n                              <AutocompleteSimple\n                                suggestions={this.state.RepresentativesCategory}\n                                id={\"txtRepresentatveCategorySuggest\"}\n                                categoryChipHit={this.categoryNameChipHit}\n                                ChipHitAfterRemoving={\n                                  this.categoryChipHitAfterRemoving\n                                }\n                                ref={this.RepresentativeCategoryAutocompleteRef}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <button\n                                class=\"btn btn-success\"\n                                type=\"button\"\n                                style={s50}\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    createNewRepresentativeCategory: !this.state\n                                      .createNewRepresentativeCategory,\n                                  });\n                                }}\n                              >\n                                + New\n                              </button>\n                            </div>\n                          </form>\n                          <CategoryChips\n                            ref={this.representativeCategoryRef}\n                            removeId={\n                              this.categoryIdfromHiddenField_CategoryName\n                            }\n                          />\n                        </Col>\n                      )}\n                    </Col>\n                    <Col md=\"6\">\n                      <Table className=\"tablesorter\" responsive>\n                        <thead className=\"text-primary\">\n                          <tr>\n                            <th>Representative Name</th>\n                            <th>Category</th>\n                            <th className=\"text-center\">Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.representativeArr.map((a) => (\n                            <tr>\n                              <td>{a.Name}</td>\n                              <td>{a.Category}</td>\n                              <td>\n                                <Row>\n                                  <Col\n                                    md=\"6\"\n                                    className=\"d-flex justify-content-center\"\n                                    style={{\n                                      padding: \"0px\",\n                                    }}\n                                    onClick={() => {\n                                      var temp = this.state.representativeArr;\n                                      const index = temp.indexOf(a);\n                                      if (index > -1) {\n                                        temp.splice(index, 1);\n                                      }\n                                      this.setState({\n                                        representativeArr: temp,\n                                      });\n                                    }}\n                                  >\n                                    <i\n                                      className=\"tim-icons icon-trash-simple hoverable-danger\"\n                                      style={{ cursor: \"pointer\" }}\n                                    />\n                                  </Col>\n                                  <Col\n                                    style={{\n                                      padding: \"0px\",\n                                    }}\n                                    md=\"6\"\n                                    className=\"d-flex justify-content-center\"\n                                    onClick={() => {\n                                      this.setState({\n                                        updatingRepresentatives: true,\n                                        updatingRepresentativesNameId:\n                                          a.EmployeeId,\n                                        updatingRepresentativesCategoryId:\n                                          a.RepresentativeCategoryId,\n                                      });\n                                      this.RepresentativeNameAutocompleteRef.current.addItemToUpdate(\n                                        { id: a.EmployeeId, name: a.Name }\n                                      );\n                                      this.RepresentativeCategoryAutocompleteRef.current.addItemToUpdate(\n                                        {\n                                          id: a.RepresentativeCategoryId,\n                                          name: a.Category,\n                                        }\n                                      );\n                                    }}\n                                  >\n                                    <i\n                                      className=\"tim-icons icon-pencil hoverable\"\n                                      style={{ cursor: \"pointer\" }}\n                                    />\n                                  </Col>\n                                </Row>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </Col>\n                  </Row>\n                  <Row className=\"justify-content-between\">\n                    <Col md=\"6\" xs=\"12\" className=\"d-flex justify-content-end\">\n                      <Button\n                        color=\"success\"\n                        className=\"md-auto\"\n                        disabled={!this.state.updatingRepresentatives}\n                        onClick={() => {\n                          this.representativeNameRef.current.removeAllChips();\n                          this.representativeCategoryRef.current.removeAllChips();\n\n                          //remove all ids form hidden inputs...\n                          this.RepresentativeNameAutocompleteRef.current.removeAllIds();\n                          this.RepresentativeCategoryAutocompleteRef.current.removeAllIds();\n                          this.setState({\n                            updatingRepresentatives: false,\n                            updatingRepresentativesNameId: null,\n                            updatingRepresentativesCategoryId: null,\n                          });\n                        }}\n                      >\n                        Cancel Update\n                      </Button>\n                      <Button\n                        color=\"success\"\n                        onClick={() => {\n                          if (\n                            document.getElementById(\"txtRepresentatveSuggest\")\n                              .value != \"\" &&\n                            document.getElementById(\n                              \"txtRepresentatveCategorySuggest\"\n                            ).value != \"\"\n                          ) {\n                            var representativesIds = document\n                              .getElementById(\"txtRepresentatveSuggest\")\n                              .value.split(\",\");\n                            var representativesCatIds = document\n                              .getElementById(\"txtRepresentatveCategorySuggest\")\n                              .value.split(\",\");\n                            var representativesArray = [];\n                            representativesIds.forEach((element) => {\n                              var representativeName = this.state.Representatives.filter(\n                                (a) => a.id == element\n                              )[0][\"Name\"];\n                              representativesCatIds.forEach((elementCatId) => {\n                                var obj = {};\n                                obj[\"Name\"] = representativeName;\n                                obj[\"EmployeeId\"] = element;\n                                obj[\"RepresentativeCategoryId\"] = elementCatId;\n                                obj[\n                                  \"Category\"\n                                ] = this.state.RepresentativesCategory.filter(\n                                  (a) => a.id == elementCatId\n                                )[0][\"Name\"];\n                                representativesArray.push(obj);\n                              });\n                            });\n                            var tempArr = this.state.representativeArr;\n                            var newArr = tempArr.concat(representativesArray);\n                            var unique = [];\n                            var distinct = [];\n                            for (let i = 0; i < newArr.length; i++) {\n                              if (\n                                !unique[\n                                  newArr[i].EmployeeId +\n                                    \",\" +\n                                    newArr[i].RepresentativeCategoryId\n                                ]\n                              ) {\n                                distinct.push({\n                                  Name: newArr[i].Name,\n                                  Category: newArr[i].Category,\n                                  EmployeeId: newArr[i].EmployeeId,\n                                  RepresentativeCategoryId:\n                                    newArr[i].RepresentativeCategoryId,\n                                  id: newArr[i].id,\n                                });\n                                unique[\n                                  newArr[i].EmployeeId +\n                                    \",\" +\n                                    newArr[i].RepresentativeCategoryId\n                                ] = 1;\n                              }\n                            }\n                            console.log(distinct);\n                            var index = distinct.indexOf(\n                              distinct.filter(\n                                (a) =>\n                                  a.EmployeeId ==\n                                    this.state.updatingRepresentativesNameId &&\n                                  a.RepresentativeCategoryId ==\n                                    this.state.updatingRepresentativesCategoryId\n                              )[0]\n                            );\n                            if (index > -1) {\n                              distinct.splice(index, 1);\n                            }\n                            this.setState({\n                              representativeArr: distinct,\n                              updatingRepresentativesNameId: null,\n                              updatingRepresentativesCategoryId: null,\n                              updatingRepresentatives: !this.state\n                                .updatingRepresentatives,\n                            });\n                            this.representativeNameRef.current.removeAllChips();\n                            this.representativeCategoryRef.current.removeAllChips();\n\n                            //remove all ids form hidden inputs...\n                            this.RepresentativeNameAutocompleteRef.current.removeAllIds();\n                            this.RepresentativeCategoryAutocompleteRef.current.removeAllIds();\n                          }\n                        }}\n                      >\n                        Add\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Attendies</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col md=\"6\">\n                        <Row>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label>Attendee Full Name</label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                id=\"AttendiesName\"\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label>Attendee Phone</label>\n                              <Input\n                                type=\"number\"\n                                placeholder=\"Phone\"\n                                id=\"AttendiesPhone\"\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label>Attendee Email</label>\n                              <Input\n                                type=\"email\"\n                                placeholder=\"Email\"\n                                id=\"AttendiesEmail\"\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label>Attendee Location</label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Location\"\n                                id=\"AttendiesLocation\"\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <Col md=\"12\" className=\"category-col\">\n                              <label>Arriving Ticket</label>\n                              <FormGroup>\n                                <Row>\n                                  <Col md=\"6\">\n                                    <Input\n                                      type=\"text\"\n                                      placeholder=\"Ticket From\"\n                                      id=\"Arr_ticketFrom\"\n                                    ></Input>\n                                  </Col>\n                                  <Col md=\"6\">\n                                    <Input\n                                      type=\"text\"\n                                      placeholder=\"Ticket To\"\n                                      id=\"Arr_ticketTo\"\n                                    ></Input>\n                                  </Col>\n                                </Row>\n                              </FormGroup>\n                              <FormGroup>\n                                <Row>\n                                  <Col md=\"12\">\n                                    <div className=\"custom-file mb-2\">\n                                      <Input\n                                        type=\"file\"\n                                        className=\"custom-file-input\"\n                                        id=\"ticket-file-from\"\n                                        onChange={(e) => {\n                                          this.setState({\n                                            aTicketFileName:\n                                              e.target.files[0].name,\n                                          });\n                                        }}\n                                      />\n                                      <label\n                                        className=\"custom-file-label\"\n                                        htmlFor=\"customFileThumbanail\"\n                                      >\n                                        {this.state.aTicketFileName}\n                                      </label>\n                                    </div>\n                                  </Col>\n                                </Row>\n                              </FormGroup>\n                            </Col>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label class=\"checkbox\">\n                                <input\n                                  type=\"checkbox\"\n                                  id=\"SameTicketChkId\"\n                                  onChange={() => {\n                                    this.setState({\n                                      TicketsSame: !this.state.TicketsSame,\n                                    });\n                                  }}\n                                  style={{\n                                    marginRight: \"8px\",\n                                  }}\n                                />\n                                Same Ticket as Arriving Ticket\n                              </label>\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <fieldset disabled={this.state.TicketsSame}>\n                              <Col md=\"12\" className=\"category-col\">\n                                <label>\n                                  Departing Ticket\n                                  {this.state.TicketsSame ? \" - Disabled\" : \"\"}\n                                </label>\n                                <FormGroup>\n                                  <Row>\n                                    <Col md=\"6\">\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Ticket From\"\n                                        id=\"Dep_ticketFrom\"\n                                      ></Input>\n                                    </Col>\n                                    <Col md=\"6\">\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Ticket To\"\n                                        id=\"Dep_ticketTo\"\n                                      ></Input>\n                                    </Col>\n                                  </Row>\n                                </FormGroup>\n                                <FormGroup>\n                                  <Row>\n                                    <Col md=\"12\">\n                                      <div className=\"custom-file mb-2\">\n                                        <Input\n                                          type=\"file\"\n                                          className=\"custom-file-input\"\n                                          id=\"ticket-file-to\"\n                                          onChange={(e) => {\n                                            this.setState({\n                                              dTicketFileName:\n                                                e.target.files[0].name,\n                                            });\n                                          }}\n                                        />\n                                        <label\n                                          className=\"custom-file-label\"\n                                          htmlFor=\"customFileThumbanail\"\n                                        >\n                                          {this.state.dTicketFileName}\n                                        </label>\n                                      </div>\n                                    </Col>\n                                  </Row>\n                                </FormGroup>\n                              </Col>\n                            </fieldset>\n                          </Col>\n                          <Col md=\"12\" className=\"d-flex justify-content-end\">\n                            <Button\n                              color=\"success\"\n                              className=\"md-auto\"\n                              disabled={!this.state.updatingAttendee}\n                              onClick={() => {\n                                document.getElementById(\"AttendiesName\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"AttendiesPhone\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"AttendiesEmail\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"AttendiesLocation\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"Arr_ticketFrom\"\n                                ).value = \"\";\n                                document.getElementById(\"Arr_ticketTo\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"Dep_ticketFrom\"\n                                ).value = \"\";\n                                document.getElementById(\"Dep_ticketTo\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"SameTicketChkId\"\n                                ).checked = false;\n                                this.setState({\n                                  TicketsSame: false,\n                                  aTicketFileName: \"Choose Ticket File\",\n                                  dTicketFileName: \"Choose Ticket File\",\n                                  updatingAttendee: false,\n                                  updatingAttendeePhone: null,\n                                });\n                              }}\n                            >\n                              Cancel Update\n                            </Button>\n                            <Button\n                              color=\"success\"\n                              className=\"md-auto\"\n                              onClick={() => {\n                                this.setState({\n                                  addedAttendie: !this.state.addedAttendie,\n                                });\n                                var newAttendieObj = {};\n                                newAttendieObj[\n                                  \"name\"\n                                ] = document.getElementById(\n                                  \"AttendiesName\"\n                                ).value;\n\n                                newAttendieObj[\n                                  \"phone\"\n                                ] = document.getElementById(\n                                  \"AttendiesPhone\"\n                                ).value;\n\n                                newAttendieObj[\n                                  \"email\"\n                                ] = document.getElementById(\n                                  \"AttendiesEmail\"\n                                ).value;\n\n                                newAttendieObj[\n                                  \"location\"\n                                ] = document.getElementById(\n                                  \"AttendiesLocation\"\n                                ).value;\n                                newAttendieObj[\n                                  \"aTicketFrom\"\n                                ] = document.getElementById(\n                                  \"Arr_ticketFrom\"\n                                ).value;\n\n                                newAttendieObj[\n                                  \"aTicketTo\"\n                                ] = document.getElementById(\n                                  \"Arr_ticketTo\"\n                                ).value;\n                                newAttendieObj[\"isSameAsArriving\"] = this.state\n                                  .TicketsSame\n                                  ? true\n                                  : false;\n                                newAttendieObj[\n                                  \"aticket\"\n                                ] = this.state.aTicketFileName;\n                                newAttendieObj[\n                                  \"dticket\"\n                                ] = this.state.dTicketFileName;\n                                //converting files to base64...\n                                let fileToLoad = document.getElementById(\n                                  \"ticket-file-from\"\n                                ).files[0];\n                                let fileone = null;\n                                let fileReader = new FileReader();\n                                fileReader.onload = function (fileLoadedEvent) {\n                                  fileone = fileLoadedEvent.target.result;\n                                  newAttendieObj[\"ticketFileFrom\"] = fileone;\n                                };\n                                if (fileToLoad) {\n                                  fileReader.readAsDataURL(fileToLoad);\n                                }\n\n                                //second file...\n                                let filetwo = null;\n                                if (!this.state.TicketsSame) {\n                                  newAttendieObj[\n                                    \"dTicketFrom\"\n                                  ] = document.getElementById(\n                                    \"Dep_ticketFrom\"\n                                  ).value;\n                                  newAttendieObj[\n                                    \"dTicketTo\"\n                                  ] = document.getElementById(\n                                    \"Dep_ticketTo\"\n                                  ).value;\n                                  let fileToLoadSecond = document.getElementById(\n                                    \"ticket-file-to\"\n                                  ).files[0];\n                                  let fileReadertwo = new FileReader();\n                                  fileReadertwo.onload = function (\n                                    fileLoadedEvent1\n                                  ) {\n                                    filetwo = fileLoadedEvent1.target.result;\n                                    newAttendieObj[\"ticketFileTo\"] = filetwo;\n                                  };\n                                  fileReadertwo.readAsDataURL(fileToLoadSecond);\n                                }\n                                var Ea = this.state.EventAttendies;\n                                if (this.state.updatingAttendeePhone) {\n                                  var index = Ea.indexOf(\n                                    Ea.filter(\n                                      (a) =>\n                                        a.phone ==\n                                        this.state.updatingAttendeePhone\n                                    )[0]\n                                  );\n                                  if (index > -1) {\n                                    Ea.splice(index, 1);\n                                  }\n                                  newAttendieObj.id = this.state.updatingAttendeeId;\n                                  Ea.push(newAttendieObj);\n                                  console.log(Ea);\n                                } else {\n                                  Ea.push(newAttendieObj);\n                                }\n                                //reseting the state...\n                                this.setState({\n                                  EventAttendies: Ea,\n                                  addedAttendie: !this.state.addedAttendie,\n                                  TicketsSame: false,\n                                  aTicketFileName: \"Choose Ticket File\",\n                                  dTicketFileName: \"Choose Ticket File\",\n                                  updatingAttendee: false,\n                                  updatingAttendeePhone: null,\n                                });\n                                document.getElementById(\"AttendiesName\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"AttendiesPhone\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"AttendiesEmail\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"AttendiesLocation\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"Arr_ticketFrom\"\n                                ).value = \"\";\n                                document.getElementById(\"Arr_ticketTo\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"Dep_ticketFrom\"\n                                ).value = \"\";\n                                document.getElementById(\"Dep_ticketTo\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"SameTicketChkId\"\n                                ).checked = false;\n                              }}\n                            >\n                              Add\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Col>\n                      <Col md=\"6\">\n                        <Table className=\"tablesorter\" responsive>\n                          <thead className=\"text-primary\">\n                            <tr>\n                              <th>Attendee Name</th>\n                              <th>Attendee Phone</th>\n                              <th className=\"text-center\">Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.state.EventAttendies.map((element) => (\n                              <tr\n                                style={{\n                                  backgroundColor: this.haveAnythingEmpty(\n                                    element\n                                  )\n                                    ? \"#0000005e\"\n                                    : \"transparent\",\n                                }}\n                              >\n                                <td>{element[\"name\"]}</td>\n                                <td>{element[\"phone\"]}</td>\n                                <td>\n                                  <Row>\n                                    <Col\n                                      md=\"6\"\n                                      style={{\n                                        padding: \"0px\",\n                                      }}\n                                      className=\"d-flex justify-content-center\"\n                                      onClick={() => {\n                                        var temp = this.state.EventAttendies;\n                                        var index = temp.indexOf(element);\n                                        if (index > -1) {\n                                          temp.splice(index, 1);\n                                        }\n                                        this.setState({\n                                          EventAttendies: temp,\n                                        });\n                                      }}\n                                    >\n                                      <i className=\"tim-icons icon-trash-simple hoverable-danger\" />\n                                    </Col>\n                                    <Col\n                                      md=\"6\"\n                                      style={{\n                                        padding: \"0px\",\n                                      }}\n                                      className=\"d-flex justify-content-center\"\n                                      onClick={() => {\n                                        this.setState({\n                                          updatingAttendeePhone: element.phone,\n                                        });\n                                        document.getElementById(\n                                          \"AttendiesName\"\n                                        ).value = element[\"name\"];\n                                        document.getElementById(\n                                          \"AttendiesPhone\"\n                                        ).value = element[\"phone\"];\n                                        document.getElementById(\n                                          \"AttendiesEmail\"\n                                        ).value = element[\"email\"];\n                                        document.getElementById(\n                                          \"AttendiesLocation\"\n                                        ).value = element[\"location\"];\n                                        document.getElementById(\n                                          \"Arr_ticketFrom\"\n                                        ).value = element[\"aTicketFrom\"];\n                                        document.getElementById(\n                                          \"Arr_ticketTo\"\n                                        ).value = element[\"aTicketTo\"];\n                                        document.getElementById(\n                                          \"Dep_ticketFrom\"\n                                        ).value = element[\"dTicketFrom\"] || \"\";\n                                        document.getElementById(\n                                          \"Dep_ticketTo\"\n                                        ).value = element[\"dTicketTo\"] || \"\";\n                                        document.getElementById(\n                                          \"SameTicketChkId\"\n                                        ).checked =\n                                          element[\"dTicketFrom\"] == null;\n                                        this.setState({\n                                          updatingAttendee: true,\n                                          TicketsSame:\n                                            element[\"dTicketFrom\"] == null,\n                                          aTicketFileName: element[\n                                            \"aticket\"\n                                          ].split(\"/\")[\n                                            element[\"aticket\"].split(\"/\")\n                                              .length - 1\n                                          ],\n                                          dTicketFileName:\n                                            element[\"dticket\"]?.split(\"/\")[\n                                              element[\"dticket\"].split(\"/\")\n                                                .length - 1\n                                            ] || \"Choose Ticket File\",\n                                        });\n                                      }}\n                                    >\n                                      <i className=\"tim-icons icon-pencil hoverable\" />\n                                    </Col>\n                                  </Row>\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </Table>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Transfers</CardTitle>\n                  <Row className=\"justify-content-between\">\n                    <Col md=\"4\" xs=\"4\" className=\"d-flex align-items-center\">\n                      <h5 className=\"card-category\">Create Transfers</h5>\n                    </Col>\n                    <Col md=\"4\" xs=\"8\" className=\"d-flex justify-content-end\">\n                      <Button\n                        color=\"success\"\n                        onClick={() => this.createNewTransfer()}\n                        disabled={!this.state.rIsFilled}\n                      >\n                        Create New\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      {this.state.transfers.map((element) =>\n                        element.isFilled ? null : element.component\n                      )}\n                    </Row>\n                    <Row className=\"justify-content-between\">\n                      {this.state.rIsFilled ? null : (\n                        <Col\n                          md=\"12\"\n                          xs=\"12\"\n                          className=\"d-flex justify-content-end\"\n                        >\n                          <Button\n                            color=\"warning\"\n                            onClick={() => {\n                              var temp = this.state.transfers;\n                              temp.forEach((element) => {\n                                var index;\n                                if (!element.isFilled) {\n                                  if (!element.data.id) {\n                                    index = temp.indexOf(element);\n                                  }\n                                  element.isFilled = !element.isFilled;\n                                }\n                                if (index > -1) {\n                                  temp.splice(index, 1);\n                                }\n                                this.setState({\n                                  transfers: temp,\n                                  rIsFilled: !this.state.rIsFilled,\n                                });\n                              });\n                            }}\n                          >\n                            Cancel\n                          </Button>\n                          <Button\n                            color=\"success\"\n                            onClick={() => {\n                              var tempTransfers = this.state.transfers;\n                              tempTransfers.forEach((element) => {\n                                if (!element.isFilled) {\n                                  element.data = element.ref.current.returnState();\n                                  element.isFilled = !element.isFilled;\n                                }\n                              });\n                              this.setState({\n                                transfers: tempTransfers,\n                                rIsFilled: !this.state.rIsFilled,\n                              });\n                            }}\n                          >\n                            Save\n                          </Button>\n                        </Col>\n                      )}\n                    </Row>\n                    <Row>\n                      <Col md=\"12\">\n                        <Table className=\"tablesorter\" responsive>\n                          <thead className=\"text-primary\">\n                            <tr>\n                              <th>Transfer Name</th>\n                              <th>Date</th>\n                              <th>Origin</th>\n                              <th>Destination</th>\n                              <th className=\"text-center\">Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.state.transfers.map((element) =>\n                              element.isFilled ? (\n                                <tr>\n                                  <td>{element.data.name}</td>\n                                  <td>{element.data.transferDate}</td>\n                                  <td>{element.data.origin}</td>\n                                  <td>{element.data.destination}</td>\n                                  <td>\n                                    <Row>\n                                      <Col\n                                        md=\"6\"\n                                        className=\"d-flex justify-content-center\"\n                                        style={{\n                                          padding: \"0px\",\n                                        }}\n                                        onClick={() => {\n                                          var temp = this.state.transfers;\n                                          var index = temp.indexOf(element);\n                                          if (index > -1) {\n                                            temp.splice(index, 1);\n                                          }\n                                          this.setState({\n                                            transfers: temp,\n                                          });\n                                        }}\n                                      >\n                                        <i className=\"tim-icons icon-trash-simple hoverable-danger\" />\n                                      </Col>\n                                      <Col\n                                        md=\"6\"\n                                        style={{\n                                          padding: \"0px\",\n                                        }}\n                                        className=\"d-flex justify-content-center\"\n                                        onClick={() => {\n                                          var temp = this.state.transfers;\n                                          var index = temp.indexOf(element);\n                                          temp[index].isFilled = false;\n                                          // temp[index].ref.current.setData(element.data)\n                                          this.setState(\n                                            {\n                                              rIsFilled: !this.state.rIsFilled,\n                                              transfers: temp,\n                                            },\n                                            () => {\n                                              temp[index].ref.current.setData(\n                                                element.data\n                                              );\n                                            }\n                                          );\n                                        }}\n                                      >\n                                        <i className=\"tim-icons icon-pencil hoverable\" />\n                                      </Col>\n                                    </Row>\n                                  </td>\n                                </tr>\n                              ) : null\n                            )}\n                          </tbody>\n                        </Table>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Agendas</CardTitle>\n                  <h5 className=\"card-category\">Create Agendas</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col md=\"6\">\n                        <Agendas ref={this.agendaRef} />\n                        <Col md=\"12\" className=\"d-flex justify-content-end\">\n                          <Button\n                            color=\"success\"\n                            className=\"md-auto\"\n                            disabled={!this.state.updatingAgenda}\n                            onClick={() => {\n                              this.agendaRef.current.resetState();\n                              this.setState({\n                                updatingAgenda: false,\n                                updatingAgendaObject: null,\n                              });\n                            }}\n                          >\n                            Cancel Update\n                          </Button>\n                          <Button\n                            color=\"success\"\n                            className=\"md-auto\"\n                            onClick={() => {\n                              var data = this.state.agendas;\n                              if (this.state.updatingAgendaObject) {\n                                var index = data.indexOf(\n                                  this.state.updatingAgendaObject\n                                );\n                                console.log(index);\n                                if (index > -1) {\n                                  data.splice(index, 1);\n                                }\n                              }\n                              data.push(this.agendaRef.current.returnState());\n                              this.setState(\n                                {\n                                  agendas: data,\n                                  updatingAgendaObject: null,\n                                },\n                                () => {\n                                  this.agendaRef.current.resetState();\n                                }\n                              );\n                            }}\n                          >\n                            Add\n                          </Button>\n                        </Col>\n                      </Col>\n                      <Col md=\"6\">\n                        <Table className=\"tablesorter\" responsive>\n                          <thead className=\"text-primary\">\n                            <tr>\n                              <th>Agenda Name</th>\n                              <th>Start</th>\n                              <th>End</th>\n                              <th>Venue</th>\n                              <th className=\"text-center\">Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.state.agendas.map((element) => (\n                              <tr>\n                                <td>{element.name}</td>\n                                <td>\n                                  {new Date(element.startTime).toDateString() +\n                                    \" \" +\n                                    new Date(element.startTime).toLocaleString(\n                                      \"en-US\",\n                                      {\n                                        hour: \"numeric\",\n                                        minute: \"numeric\",\n                                        hour12: true,\n                                      }\n                                    )}\n                                </td>\n                                <td>\n                                  {new Date(element.endTime).toDateString() +\n                                    \" \" +\n                                    new Date(element.endTime).toLocaleString(\n                                      \"en-US\",\n                                      {\n                                        hour: \"numeric\",\n                                        minute: \"numeric\",\n                                        hour12: true,\n                                      }\n                                    ) || \"Onwards\"}\n                                </td>\n                                <td>{element.venue}</td>\n                                <td>\n                                  <Row>\n                                    <Col\n                                      md=\"6\"\n                                      className=\"d-flex justify-content-center\"\n                                      style={{\n                                        padding: \"0px\",\n                                      }}\n                                      onClick={() => {\n                                        var temp = this.state.agendas;\n                                        var index = temp.indexOf(element);\n                                        if (index > -1) {\n                                          temp.splice(index, 1);\n                                        }\n                                        this.setState({\n                                          agendas: temp,\n                                        });\n                                      }}\n                                    >\n                                      <i className=\"tim-icons icon-trash-simple hoverable-danger\" />\n                                    </Col>\n                                    <Col\n                                      md=\"6\"\n                                      style={{\n                                        padding: \"0px\",\n                                      }}\n                                      onClick={() => {\n                                        this.agendaRef.current.setData(element);\n                                        this.setState({\n                                          updatingAgenda: true,\n                                          updatingAgendaObject: element,\n                                        });\n                                      }}\n                                      className=\"d-flex justify-content-center\"\n                                    >\n                                      <i className=\"tim-icons icon-pencil hoverable\" />\n                                    </Col>\n                                  </Row>\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </Table>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\" className=\"d-flex justify-content-end\">\n              <Button\n                color=\"success\"\n                style={{\n                  padding: \"18px\",\n                  paddingRight: \"38px\",\n                  paddingLeft: \"38px\",\n                }}\n                onClick={(e) => this.submitEvent(e)}\n              >\n                Save Event\n              </Button>\n            </Col>\n          </Row>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ManageEvents;\n","import React, { useState, useMemo, useCallback, useEffect, forwardRef, useImperativeHandle } from \"react\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport Axios from \"./axios\";\nimport swal from \"sweetalert\";\nimport {\n  Button\n} from \"reactstrap\";\n\nconst MyComponentHook = forwardRef((props,ref) => {\n  const [overlayLoader, setOverlayLoader] = useState(false);\n  const [progress, setProgress] = useState(true);\n  const [data, setData] = useState([]);\n  createTheme(\"solarized\", {\n    text: {\n      primary: \"#ffffff\",\n      secondary: \"#9A9A9A\",\n    },\n    background: {\n      default: \"#27293d\",\n    },\n    action: {\n      button: \"rgba(0,0,0,.54)\",\n      hover: \"rgba(0,0,0,.08)\",\n      disabled: \"rgba(0,0,0,.12)\",\n    },\n  });\n  const getData = () => {\n    Axios.get(\"/location/get-all\").then((u) => {\n      setData(\n        u.data.map((a) => {\n          var obj = {};\n          obj[\"id\"] = a.id\n          obj[\"Name\"] = a.name;\n          obj[\"City\"] = a.Cities.name;\n          obj[\"Country\"] = a.Cities.Countries.name;\n          obj[\"Image\"] = a.image;\n          obj[\"desc\"] = a.desc;\n          return obj;\n        })\n      );\n      setProgress(false);\n    });\n  }\n  \n  useEffect(() => {\n    getData()\n  }, []);\n\n  const handleDeleteAction = (value) => {\n    console.log(value);\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this content!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        var arr = data.filter((item) => item.id !== value.id);\n        console.log(arr)\n        setData(arr);\n        await Axios.delete(\"/location/delete/\" + value.id);\n        swal(\"Poof! Your content has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your content is safe!\");\n      }\n    });\n  };\n  const handleEditAction = (value) => {\n    props.setDataInParent(value)\n  };\n  useImperativeHandle(ref, () => ({\n    resetTable: () => {\n      getData();\n    },\n  }));\n\n  const updateState = useCallback((state) => console.log(state));\n  const columns = useMemo(() => [\n    {\n      name: \"Name\",\n      selector: \"Name\",\n    },\n    {\n      name: \"City\",\n      selector: \"City\",\n    },\n    {\n      cell: (row) => <img src={row.Image} alt=\"location image\" />,\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Image\",\n      selector: \"Image\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleEditAction(row)}\n        >\n          <i className=\"tim-icons icon-pencil\" />\n        </Button>\n      ),\n      button: true,\n      name: \"Edit\",\n      selector: \"edit\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-danger\"\n          onClick={() => handleDeleteAction(row)}\n        >\n          <i className=\"tim-icons icon-trash-simple\" />\n        </Button>\n      ),\n      button: true,\n      name: \"Delete\",\n      selector: \"delete\",\n    },\n  ]);\n\n  return (\n    <>\n      <div\n        className=\"loading-overlay\"\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\n      >\n        <div class=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n        Loading...\n      </div>\n      <DataTable\n        data={data}\n        columns={columns}\n        theme=\"solarized\"\n        onSelectedRowsChange={updateState}\n        pagination={true}\n        progressPending={progress}\n        progressComponent={<h2>Hang on...😊</h2>}\n      />\n    </>\n  );\n});\n\nexport default MyComponentHook;\n","import React, { Component, createRef } from \"react\";\nimport Autocomplete from \"../components/sub/autosuggest-norm\";\nimport swal from \"sweetalert\";\nimport {\n  Button,\n  Input,\n  FormGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Label,\n} from \"reactstrap\";\nimport Axios from \"../components/sub/axios\";\nimport MyComponentHook from \"components/sub/cities&countriesTable\";\n\nconst s26 = {\n  width: \"100%\",\n};\n\nconst s50 = {\n  marginLeft: \"15px\",\n  marginTop: \"14px\",\n};\n\nexport default class CitiesCountries extends Component {\n  constructor(props) {\n    super(props);\n    this.cityModalRef = createRef();\n    this.tableRef = createRef();\n    this._countryRef = createRef();\n    this._cityRef = createRef();\n    this.state = {\n      createdLocation: true,\n      locationName: \"\",\n      locationImageFile: null,\n      locationImageName: \"Choose Image File\",\n      locationDesc: \"\",\n      isAnUpdate: false,\n\n      createdCity: true,\n      createdCountry: true,\n      modalCountryCreated: true,\n      countryName: \"\",\n\n      cityFile: null,\n      cityFileName: \"Choose New File\",\n      cityName: \"\",\n      suggestionCountries: [],\n      suggestionCity: [],\n      locationId: null,\n    };\n  }\n  componentWillMount = () => {\n    Promise.all([\n      Axios.get(\"/location/country/get-all\"),\n      Axios.get(\"/location/city/get-all\"),\n    ]).then(([u, a]) => {\n      this.setState({\n        suggestionCountries: u.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n        suggestionCity: a.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n      });\n    });\n  };\n  setDataToFields = (data) => {\n    this.setState({\n      locationName: data.Name,\n      locationDesc: data.desc,\n      isAnUpdate: !this.state.isAnUpdate,\n      locationId: data.id,\n    });\n    this._cityRef.current.setData(data.City);\n    this._countryRef.current.setData(data.Country);\n  };\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.createdCountry ? null : (\n          <div className=\"Modal-Root\">\n            <div\n              className=\"Country-Modal\"\n              style={{\n                backgroundColor: \"#27293d\",\n              }}\n            >\n              <Col md=\"12\">\n                <Row>\n                  <Col md=\"12\">\n                    <h3\n                      style={{\n                        paddingTop: \"18px\",\n                      }}\n                    >\n                      Create New Country\n                    </h3>\n                  </Col>\n                  <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\n                    <Label>Country Name</Label>\n                    <Input\n                      type=\"text\"\n                      value={this.state.countryName}\n                      onChange={(e) => {\n                        this.setState({\n                          countryName: e.target.value,\n                        });\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"justify-content-between\">\n                  <Col\n                    md=\"12\"\n                    xs=\"12\"\n                    className=\"d-flex justify-content-end\"\n                    style={{ padding: \"18px\" }}\n                  >\n                    <Button\n                      color=\"warning\"\n                      onClick={() => {\n                        this.setState({\n                          createdCountry: !this.state.createdCountry,\n                          countryName: \"\",\n                        });\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      color=\"success\"\n                      disabled={!this.state.modalCountryCreated}\n                      onClick={(e) => {\n                        this.setState({\n                          modalCountryCreated: !this.state.modalCountryCreated,\n                        });\n                        var formdata = new FormData();\n                        formdata.append(\"name\", this.state.countryName);\n                        Axios.post(\"/location/country/create\", formdata).then(\n                          (u) => {\n                            if (u.data.status == \"success\") {\n                              var temp = this.state.suggestionCountries;\n                              temp.push({\n                                id: u.data.data,\n                                Name: this.state.countryName,\n                              });\n                              this.setState({\n                                suggestionCountries: temp,\n                                createdCountry: !this.state.createdCountry,\n                                countryName: \"\",\n                                modalCountryCreated: !this.state\n                                  .modalCountryCreated,\n                              });\n                            }\n                          }\n                        );\n                      }}\n                    >\n                      {this.state.modalCountryCreated ? \"Save\" : \"Saving...\"}\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n            </div>\n          </div>\n        )}\n        {this.state.createdCity ? null : (\n          <div className=\"Modal-Root\">\n            <div\n              className=\"Country-Modal\"\n              style={{\n                backgroundColor: \"#27293d\",\n                padding: \"19px\",\n              }}\n            >\n              <Row>\n                <Col md=\"12\">\n                  <h3\n                    style={{\n                      paddingTop: \"18px\",\n                    }}\n                  >\n                    Create New City\n                  </h3>\n                </Col>\n                <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\n                  <div className=\"form-group d-inline mb-2\">\n                    <Autocomplete\n                      suggestions={this.state.suggestionCountries}\n                      id={\"category-suggest\"}\n                      hint={\"Country Name\"}\n                      className=\"suggestions-in-container\"\n                      ref={this.cityModalRef}\n                    />\n                  </div>\n                </Col>\n                <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\n                  <Label>City Name</Label>\n                  <Input\n                    type=\"text\"\n                    value={this.state.cityName}\n                    placeholder=\"City Name\"\n                    onChange={(e) => {\n                      this.setState({\n                        cityName: e.target.value,\n                      });\n                    }}\n                  />\n                </Col>\n                <Col md=\"12\">\n                  <Label>City Image</Label>\n                  <div className=\"custom-file mb-2\">\n                    <Input\n                      type=\"file\"\n                      className=\"custom-file-input\"\n                      id=\"ticket-file\"\n                      onChange={(e) => {\n                        this.setState({\n                          cityFile: e.target.files[0],\n                          cityFileName: e.target.files[0].name,\n                        });\n                      }}\n                    />\n                    <label\n                      className=\"custom-file-label\"\n                      htmlFor=\"customFileThumbanail\"\n                    >\n                      {this.state.cityFileName}\n                    </label>\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-between\">\n                <Col\n                  md=\"12\"\n                  xs=\"12\"\n                  className=\"d-flex justify-content-end\"\n                  style={{ padding: \"18px\" }}\n                >\n                  <Button\n                    color=\"warning\"\n                    onClick={() => {\n                      this.setState({\n                        createdCity: !this.state.createdCity,\n                        modalCountryCreated: !this.state.modalCountryCreated,\n                        cityFile: null,\n                        cityFileName: \"Choose New File\",\n                        cityName: \"\",\n                      });\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    color=\"success\"\n                    disabled={!this.state.modalCountryCreated}\n                    onClick={(e) => {\n                      this.setState({\n                        modalCountryCreated: !this.state.modalCountryCreated,\n                      });\n                      var formdata = new FormData();\n                      formdata.append(\n                        \"countryId\",\n                        this.cityModalRef.current.returnId()\n                      );\n                      formdata.append(\"name\", this.state.cityName);\n                      formdata.append(\"image\", this.state.cityFile);\n                      Axios.post(\"/location/city/create\", formdata).then(\n                        (u) => {\n                          if (u.data.status == \"success\") {\n                            var temp = this.state.suggestionCity;\n                            console.log(u)\n                            temp.push({\n                              id: u.data.data,\n                              Name: this.state.cityName,\n                            });\n                            console.log(temp)\n                            this.setState({\n                              createdCity: !this.state.createdCity,\n                              suggestionCountries: temp,\n                              cityFile: null,\n                              cityFileName: \"Choose New File\",\n                              cityName: \"\",\n                              modalCountryCreated: !this.state\n                                .modalCountryCreated,\n                            });\n                          }\n                        }\n                      );\n                    }}\n                  >\n                    {this.state.modalCountryCreated ? \"Save\" : \"Saving...\"}\n                  </Button>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        )}\n        <div className=\"content\">\n          <Row>\n            <Card>\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <CardTitle tag=\"h2\">Manage City Attractions</CardTitle>\n                    <h5 className=\"card-category\">create city attractions</h5>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col md=\"6\">\n                    <div\n                      class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\n                      style={s26}\n                    >\n                      <div\n                        className=\"form-group d-inline mb-2\"\n                        style={{ flex: \"1\" }}\n                      >\n                        <Autocomplete\n                          suggestions={this.state.suggestionCountries}\n                          id={\"category-suggest\"}\n                          categoryChipHit={this.categoryChipHit}\n                          ref={this._countryRef}\n                          hint={\"Country Name\"}\n                        />\n                      </div>\n                      <div class=\"form-group\">\n                        <button\n                          onClick={(e) => {\n                            e.preventDefault();\n                            this.setState({\n                              createdCountry: !this.state.createdCountry,\n                            });\n                          }}\n                          className=\"btn btn-success\"\n                          style={s50}\n                        >\n                          New\n                        </button>\n                      </div>\n                    </div>\n                  </Col>\n                  <Col md=\"6\">\n                    <div\n                      class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\n                      style={s26}\n                    >\n                      <div\n                        className=\"form-group d-inline mb-2\"\n                        style={{ flex: \"1\" }}\n                      >\n                        <Autocomplete\n                          suggestions={this.state.suggestionCity}\n                          id={\"category-suggest\"}\n                          ref={this._cityRef}\n                          hint={\"City Name\"}\n                        />\n                      </div>\n                      <div class=\"form-group\">\n                        <button\n                          onClick={(e) => {\n                            e.preventDefault();\n                            this.setState({\n                              createdCity: !this.state.createdCity,\n                            });\n                          }}\n                          className=\"btn btn-success\"\n                          style={s50}\n                        >\n                          New\n                        </button>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <label>Place of Interest</label>\n                      <Input\n                        placeholder=\"Place Name\"\n                        type=\"text\"\n                        value={this.state.locationName}\n                        onChange={(e) => {\n                          this.setState({\n                            locationName: e.target.value,\n                          });\n                        }}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <label>Place Image</label>\n                      <div className=\"custom-file mb-2\">\n                        <Input\n                          type=\"file\"\n                          className=\"custom-file-input\"\n                          onChange={(e) => {\n                            this.setState({\n                              locationImageFile: e.target.files[0],\n                              locationImageName: e.target.files[0].name,\n                            });\n                          }}\n                        />\n                        <label\n                          className=\"custom-file-label\"\n                          htmlFor=\"customFileThumbanail\"\n                        >\n                          {this.state.locationImageName}\n                        </label>\n                      </div>\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"12\">\n                    <FormGroup>\n                      <label>Place Discription</label>\n                      <Input\n                        placeholder=\"Description\"\n                        type=\"text\"\n                        value={this.state.locationDesc}\n                        onChange={(e) => {\n                          this.setState({\n                            locationDesc: e.target.value,\n                          });\n                        }}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"justify-content-between\">\n                  <Col\n                    md=\"12\"\n                    xs=\"12\"\n                    className=\"d-flex justify-content-end\"\n                    style={{ padding: \"18px\" }}\n                  >\n                    <Button\n                      color=\"success\"\n                      disabled={!this.state.createdLocation}\n                      onClick={() => {\n                        this.setState({\n                          createdLocation: !this.state.createdLocation,\n                        });\n                        var formdata = new FormData();\n                        formdata.append(\"name\", this.state.locationName);\n                        formdata.append(\"desc\", this.state.locationDesc);\n                        formdata.append(\n                          \"CityId\",\n                          this._cityRef.current.returnId()\n                        );\n                        formdata.append(\n                          \"CountryId\",\n                          this._countryRef.current.returnId()\n                        );\n                        formdata.append(\"image\", this.state.locationImageFile);\n                        for (var value of formdata.values()) {\n                          if (!value) {\n                            swal(\n                              \"Can't Update\",\n                              \"All Fields Are Mandatory!\",\n                              \"error\"\n                            );\n                            this.setState({\n                              createdLocation: true,\n                            });\n                            return;\n                          }\n                        }\n                        if (!this.state.isAnUpdate) {\n                          Axios.post(\"/location/create\", formdata).then((u) => {\n                            this.setState({\n                              createdLocation: !this.state.createdLocation,\n                              locationName: \"\",\n                              locationImageFile: null,\n                              locationImageName: \"Choose Image File\",\n                              locationDesc: \"\",\n                            });\n                            this.tableRef.current.resetTable();\n                          });\n                        } else {\n                          Axios.put(\n                            \"/location/update/\" + this.state.locationId,\n                            formdata\n                          ).then((u) => {\n                            this.setState({\n                              createdLocation: !this.state.createdLocation,\n                              locationName: \"\",\n                              locationImageFile: null,\n                              locationImageName: \"Choose Image File\",\n                              locationDesc: \"\",\n                            });\n                            this.tableRef.current.resetTable();\n                          });\n                        }\n                      }}\n                    >\n                      {this.state.createdLocation ? \"Save\" : \"Saving...\"}\n                    </Button>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Row>\n          <Row>\n            <Card>\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <CardTitle tag=\"h2\">Added City Attractions</CardTitle>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <MyComponentHook\n                  ref={this.tableRef}\n                  setDataInParent={this.setDataToFields}\n                />\n              </CardBody>\n            </Card>\n          </Row>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, {\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport Axios from \"./axios\";\nimport swal from \"sweetalert\";\nimport { Button } from \"reactstrap\";\nconst MyComponentHook = forwardRef((props, ref) => {\n  const [overlayLoader, setOverlayLoader] = useState(false);\n  const [progress, setProgress] = useState(true);\n  const [data, setData] = useState([]);\n  useImperativeHandle(ref, () => ({\n    resetTable: () => {\n      getData();\n    },\n  }));\n\n  createTheme(\"solarized\", {\n    text: {\n      primary: \"#ffffff\",\n      secondary: \"#9A9A9A\",\n    },\n    background: {\n      default: \"#27293d\",\n    },\n    action: {\n      button: \"rgba(0,0,0,.54)\",\n      hover: \"rgba(0,0,0,.08)\",\n      disabled: \"rgba(0,0,0,.12)\",\n    },\n  });\n  const getData = () => {\n    Axios.get(\"/customer/get-all\").then((u) => {\n      console.log(u.data);\n      setData(u.data);\n      setProgress(false);\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const handleDeleteAction = (value) => {\n    console.log(value);\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        var arr = data.filter((item) => item.id !== value.id);\n        console.log(arr);\n        setData(arr);\n        await Axios.delete(\"/customer/delete/\" + value.id);\n        swal(\"Poof! Your content has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your Data is Safe!\");\n      }\n    });\n  };\n  const handleEditAction = (value) => {\n    props.setDataInParent(value);\n  };\n  const updateState = useCallback((state) => console.log(state));\n  const columns = useMemo(() => [\n    {\n      name: \"Name\",\n      selector: \"name\",\n    },\n    {\n      name: \"Organisation\",\n      selector: \"organisation\",\n    },\n    {\n      name: \"Phone\",\n      selector: \"phone\",\n    },\n    {\n      name: \"Email\",\n      selector: \"email\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleEditAction(row)}\n        >\n          <i className=\"tim-icons icon-pencil\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Edit\",\n      selector: \"edit\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-danger\"\n          onClick={() => handleDeleteAction(row)}\n        >\n          <i className=\"tim-icons icon-trash-simple\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      button: true,\n      name: \"Delete\",\n      selector: \"delete\",\n    },\n  ]);\n\n  return (\n    <>\n      <div\n        className=\"loading-overlay\"\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\n      >\n        <div class=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n        Loading...\n      </div>\n      <DataTable\n        data={data}\n        columns={columns}\n        theme=\"solarized\"\n        onSelectedRowsChange={updateState}\n        pagination={true}\n        progressPending={progress}\n        progressComponent={<h2>Hang on...😊</h2>}\n      />\n    </>\n  );\n});\n\nexport default MyComponentHook;\n","import React, { Component, createRef } from \"react\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Input,\n} from \"reactstrap\";\nimport CustomerTable from \"../components/sub/customersTable\";\nimport Axios from \"../components/sub/axios\";\nexport default class customers extends Component {\n  constructor(props) {\n    super(props);\n    this.CustomerTableRef = createRef();\n    this.state = {\n      customerName: \"\",\n      customerPhone: \"\",\n      customerOrg: \"\",\n      customerEmail: \"\",\n      createdCutomer: true,\n      isAnUpdate: false,\n      customerId:null,\n    };\n  }\n  setDataToFields = (data) => {\n    this.setState({\n      customerName: data.name,\n      customerPhone: data.phone,\n      customerOrg: data.organisation,\n      customerEmail: data.email,\n      isAnUpdate: !this.state.isAnUpdate,\n      customerId: data.id,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Manage Customers</CardTitle>\n                  <h5 className=\"card-category\">Add new Customers</h5>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col md=\"6\">\n                      <label>Customer Name</label>\n                      <Input\n                        placeholder=\"Full Name\"\n                        value={this.state.customerName}\n                        onChange={(e) => {\n                          this.setState({\n                            customerName: e.target.value,\n                          });\n                        }}\n                      />\n                    </Col>\n                    <Col md=\"6\">\n                      <label>Organisation Name</label>\n                      <Input\n                        placeholder=\"Name\"\n                        value={this.state.customerOrg}\n                        onChange={(e) => {\n                          this.setState({\n                            customerOrg: e.target.value,\n                          });\n                        }}\n                      />\n                    </Col>\n                    <Col md=\"6\">\n                      <label>Customer Phone</label>\n                      <Input\n                        placeholder=\"Phone\"\n                        type=\"number\"\n                        value={this.state.customerPhone}\n                        onChange={(e) => {\n                          this.setState({\n                            customerPhone: e.target.value,\n                          });\n                        }}\n                      />\n                    </Col>\n                    <Col md=\"6\">\n                      <label>Customer Email</label>\n                      <Input\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        value={this.state.customerEmail}\n                        onChange={(e) => {\n                          this.setState({\n                            customerEmail: e.target.value,\n                          });\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"justify-content-between\">\n                    <Col\n                      md=\"12\"\n                      xs=\"12\"\n                      className=\"d-flex justify-content-end\"\n                      style={{ padding: \"18px\" }}\n                    >\n                      <Button\n                        disabled={!this.state.createdCutomer}\n                        color=\"success\"\n                        onClick={() => {\n                          this.setState({\n                            createdCutomer: !this.state.createdCutomer,\n                          });\n                          if(!this.state.isAnUpdate){\n                            Axios.post(\"customer/create\", {\n                              name: this.state.customerName,\n                              organisation: this.state.customerOrg,\n                              email: this.state.customerEmail,\n                              phone: this.state.customerPhone,\n                            }).then((u) => {\n                              this.setState({\n                                createdCutomer: !this.state.createdCutomer,\n                                customerName: \"\",\n                                customerPhone: \"\",\n                                customerOrg: \"\",\n                                customerEmail: \"\",\n                              });\n                              this.CustomerTableRef.current.resetTable();\n                            });\n                          } else {\n                            Axios.put(\"customer/update/\"+this.state.customerId, {\n                              name: this.state.customerName,\n                              organisation: this.state.customerOrg,\n                              email: this.state.customerEmail,\n                              phone: this.state.customerPhone,\n                            }).then((u) => {\n                              this.setState({\n                                createdCutomer: !this.state.createdCutomer,\n                                customerName: \"\",\n                                customerPhone: \"\",\n                                customerOrg: \"\",\n                                customerEmail: \"\",\n                                isAnUpdate:!this.state.isAnUpdate\n                              });\n                              this.CustomerTableRef.current.resetTable();\n                            });\n                          }\n                        }}\n                      >\n                        {this.state.createdCutomer ? \"Save\" : \"Saving...\"}\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Added Customers</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <CustomerTable\n                    ref={this.CustomerTableRef}\n                    setDataInParent={this.setDataToFields}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n","import Dashboard from \"views/Dashboard.js\";\nimport UserProfile from \"views/UserProfile.js\";\nimport ManageEvents from \"views/ManageEvents.js\";\nimport CitiesCountries from \"views/cities&countries.js\";\nimport Customers from \"views/customers.js\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/manage-events\",\n    name: \"Manage Events\",\n    rtlName: \"إخطارات\",\n    icon: \"tim-icons icon-calendar-60\",\n    component: ManageEvents,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/Cities-Countries\",\n    name: \"Cities & Countries\",\n    rtlName: \"إخطارات\",\n    icon: \"tim-icons icon-book-bookmark\",\n    component: CitiesCountries,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Manage Users\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-badge\",\n    component: UserProfile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/customers\",\n    name: \"Customers\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-single-02\",\n    component: Customers,\n    layout: \"/admin\",\n  },\n];\nexport default routes;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport routes from \"routes.js\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"blue\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>\n              {this.getRoutes(routes)}\n              <Redirect from=\"*\" to=\"/admin/dashboard\"/>\n            </Switch>\n            {// we don't want the Footer to be rendered on map page\n            this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n              <Footer fluid />\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/Admin/Admin.js\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}