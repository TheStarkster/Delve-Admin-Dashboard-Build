{"version":3,"sources":["assets/img/anime3.png","components/Sidebar/Sidebar.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/sub/axios.js","components/sub/eventsTable.js","components/sub/queryTable.js","views/Dashboard.js","views/UserProfile.js","components/sub/Editor.js","components/sub/autosuggest-norm.js","components/sub/autosuggest.js","layouts/Admin/Admin.js","components/sub/categorychips.js","components/sub/agendas.js","components/sub/transfers.js","views/ManageEvents.js","components/sub/cities&countriesTable.js","views/cities&countries.js","components/sub/customersTable.js","views/customers.js","routes.js","views/AboutCompany.js","views/EventGallery.js","views/queries.js","index.js"],"names":["module","exports","ps","AdminNavbar","props","updateColor","window","innerWidth","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","addEventListener","this","removeEventListener","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","type","onClick","toggleSidebar","NavbarBrand","href","e","preventDefault","brandText","aria-expanded","aria-label","data-target","data-toggle","id","Collapse","navbar","isOpen","Nav","InputGroup","Button","UncontrolledDropdown","nav","DropdownToggle","caret","alt","src","require","DropdownMenu","right","tag","NavLink","DropdownItem","divider","Modal","modalClassName","toggle","Input","placeholder","data-dismiss","React","Component","Footer","NavItem","Date","getFullYear","target","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","imgSrc","text","to","innerLink","data","ref","map","prop","key","redirect","path","pro","layout","activeClassName","icon","rtlName","name","defaultProps","axios","create","baseURL","EventTable","forwardRef","useState","overlayLoader","setOverlayLoader","showModal","setShowModal","isSaving","setIsSaving","selectedEventId","setSelectedEventId","notificationText","setNotificationText","progress","setProgress","setData","createTheme","primary","secondary","background","default","action","button","hover","disabled","useEffect","notifyAttendees","post","eventId","message","then","u","swal","columns","useMemo","selector","cell","row","style","padding","ignoreRowClick","allowOverflow","value","open","history","push","Axios","get","localStorage","setItem","JSON","stringify","title","buttons","dangerMode","willDelete","a","arr","filter","item","delete","Row","Col","md","paddingTop","paddingBottom","Label","onChange","xs","display","class","theme","pagination","progressPending","progressComponent","withRouter","ExpandableComponent","margin","marginTop","marginBottom","backgroundColor","borderRadius","question","answer","QueryTable","setAnswer","openedQueryId","setOpenQueryId","openedQueryAttendeeId","setOpenQueryAttendeeId","inAll","modifiedData","attendeeName","Attendee","attendeePhone","phone","attendeeEmail","email","attendeeId","searched","maxWidth","expandableRowsComponent","expandableRows","Dashboard","componentDidMount","Promise","all","currentTableCount","toString","pastTableCount","futureTableCount","b","c","tableTempData","tableData","futureTableData","element","obj","Customers","organisation","liveFrom","toDateString","liveTo","currentTableData","pastTableData","setBgChartData","bigChartData","tableState","console","log","Fragment","Card","CardHeader","sm","CardTitle","ButtonGroup","active","size","defaultChecked","CardBody","UserProfile","dropdownOpen","Form","FormGroup","htmlFor","CardFooter","Dropdown","header","Table","responsive","Editor","content","returnContent","config","readonly","tabIndex","onBlur","newContent","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","suggestion","Name","toLowerCase","activeSuggestion","showSuggestions","returnId","removeId","idArr","getElementById","split","index","splice","join","firstChild","innerText","setId","setDataUsingId","Id","onKeyDown","keyCode","length","suggestionsListComponent","fieldLength","clientWidth","width","Phone","hint","paddingLeft","Height","paddingRight","removeAllIds","includes","alert","categoryChipHit","addItemToUpdate","ChipHitAfterRemoving","CategoryChips","addChip","val","tempChips","chips","addChipByremoving","removeAllChips","temArr","Agendas","returnState","resetState","venue","startTime","endTime","remarks","startDate","toISOString","Transfers","origin","destination","mode","vehicleNumber","driverName","distance","driverPhone","journeyTime","transferDate","s26","s50","marginLeft","ManageEvents","createNewTransfer","tempTansfers","transfers","transferRef","createRef","component","isFilled","rIsFilled","haveAnythingEmpty","formData","setDataToFields","parse","eventName","eventBy","CustomerId","eventFrom","eventTo","venueName","Locations","venueUrl","url","customerId","eventPlackCardImageName","plackCardImage","eventImageName","eventImage","welcomeNote","description","countryId","CountryId","cityId","CityId","agendas","EventAttendies","Attendees","isSameAsArriving","dticket","representativeArr","Representatives_for_Events","Employees","Representative_Categories","RepresentativeCategoryId","EmployeeId","elem","countryRef","current","cityRef","customerRef","removeItem","componentWillMount","d","f","suggestionCountries","suggestionCities","sugggestionCustomers","Representatives","RepresentativesCategory","getItem","representativeNameRef","categoryChipHitAfterRemoving","representativeCategoryRef","representativesNameChipHitAfterRemoving","categoryNameChipHit","categoryIdfromHiddenField","RepresentativeNameAutocompleteRef","categoryIdfromHiddenField_CategoryName","RepresentativeCategoryAutocompleteRef","modifyDataWithEventId","EventId","Attendies","submitEvent","eventFormData","FormData","append","eventPlackCardImage","put","representatives","transfersData","attendeesData","agendasData","status","setCountryId","setCityId","setCustomerId","EditorRef","agendaRef","addedAttendie","createNewRepresentative","createNewRepresentativeCategory","createdNewRepresentativeCategory","createdRepresentative","currTransferElement","representativePhone","representativeName","representativeCategoryName","TicketsSame","isEditorOpen","aTicketFileName","dTicketFileName","updatingAgenda","updatingAttendee","updatingAgendaObject","updatingRepresentatives","updatingRepresentativesNameId","updatingRepresentativesCategoryId","updatingAttendeePhone","files","flex","temp","Category","cursor","representativesIds","representativesCatIds","representativesArray","forEach","elementCatId","newArr","concat","unique","distinct","i","marginRight","checked","newAttendieObj","fileToLoad","fileone","fileReader","FileReader","onload","fileLoadedEvent","result","readAsDataURL","filetwo","fileToLoadSecond","fileReadertwo","fileLoadedEvent1","Ea","updatingAttendeeId","tempTransfers","toLocaleString","hour","minute","hour12","MyComponentHook","getData","Cities","Countries","image","desc","useImperativeHandle","resetTable","updateState","useCallback","Image","setDataInParent","onSelectedRowsChange","CitiesCountries","suggestionCity","locationName","locationDesc","isAnUpdate","locationId","_cityRef","City","_countryRef","Country","cityModalRef","tableRef","createdLocation","locationImageFile","locationImageName","createdCity","createdCountry","modalCountryCreated","countryName","cityFile","cityFileName","cityName","formdata","values","customers","customerName","customerPhone","customerOrg","customerEmail","CustomerTableRef","createdCutomer","updatingDesc","savingImage","editorText","images","pickedImageName","pickedImage","isDeleting","selectedImages","selectedImageNames","getCompanyDescription","getAllImages","updateCompanyDescription","saveImage","tempImage","thumbnail","thumbnailWidth","thumbnailHeight","isSelected","deleteImages","tempImages","tempSelectedImages","deleteIds","imageId","imageObject","onSelectImage","selectedImagesTemp","selectedImagesNameTemp","some","Images","galleryImages","editedText","dangerouslySetInnerHTML","__html","isSearching","isMoving","searchImages","Ids","useInAbout","ans","imagesTemp","Admin","getRoutes","handleBgClick","getBrandText","mainPanel","tables","querySelectorAll","scrollTop","scrollingElement","from","hist","createBrowserHistory","ReactDOM","render"],"mappings":"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","file":"static/js/main.eeb052b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  render() {\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </Link>\n        );\n        logoText = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </Link>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav>\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.props.toggleSidebar}\n                  >\n                    <i className={prop.icon} />\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\",\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\",\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\",\n      });\n    }\n  };\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\",\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen,\n    });\n  };\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch,\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened,\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                <InputGroup className=\"search-bar\">\n                  <Button\n                    color=\"link\"\n                    data-target=\"#searchModal\"\n                    data-toggle=\"modal\"\n                    id=\"search-button\"\n                    onClick={this.toggleModalSearch}\n                  >\n                    <i className=\"tim-icons icon-zoom-split\" />\n                    <span className=\"d-lg-none d-md-block\">Search</span>\n                  </Button>\n                </InputGroup>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                    </NavLink>\n                    <DropdownItem divider tag=\"li\" />\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","import React from \"react\";\nimport { Container, Row, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Container fluid>\n          <Nav>\n            <NavItem>\n              <NavLink href=\"http://www.delve-serwiz.com/\">\n                DELVE SERVIZ\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"http://www.delve-serwiz.com/index.php#d_about\">\n                About Us\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <div className=\"copyright\">\n            © {new Date().getFullYear()} made with{\" \"}\n            <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\n            <a\n              href=\"https://grevity.in\"\n              target=\"_blank\"\n            >\n              Grevity\n            </a>{\" \"}\n            for a better web.\n          </div>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import axios from \"axios\";\n\nexport default axios.create({\n  // baseURL: `http://localhost:5000/v1/`,\n  baseURL: `http://162.241.120.139:5000/v1/`,\n});\n","import React, { useState, useMemo, useEffect, forwardRef } from \"react\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport Axios from \"./axios\";\nimport swal from \"sweetalert\";\nimport { Button, Row, Col, Label, Input } from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"./axios\";\nconst EventTable = forwardRef((props, ref) => {\n  const [overlayLoader, setOverlayLoader] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [selectedEventId, setSelectedEventId] = useState();\n  const [notificationText, setNotificationText] = useState(\"\");\n  const [progress, setProgress] = useState(true);\n  const [data, setData] = useState([]);\n  createTheme(\"solarized\", {\n    text: {\n      primary: \"#ffffff\",\n      secondary: \"#9A9A9A\",\n    },\n    background: {\n      default: \"#27293d\",\n    },\n    action: {\n      button: \"rgba(0,0,0,.54)\",\n      hover: \"rgba(0,0,0,.08)\",\n      disabled: \"rgba(0,0,0,.12)\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.data != null) {\n      setProgress(false);\n    }\n  }, [props.data]);\n  const handleDeleteAction = (value) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        var arr = data.filter((item) => item.id !== value.id);\n        setData(arr);\n        await Axios.delete(\"/customer/delete/\" + value.id);\n        swal(\"Poof! Your content has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your Data is Safe!\");\n      }\n    });\n  };\n  const handleGalleryAction = (value) => {\n    return props.history.push({\n      pathname: \"/admin/event-gallery\",\n      state: { eventId: value.id },\n    });\n  };\n  const handleEditAction = (value) => {\n    setOverlayLoader(true);\n    Axios.get(\"/events/read-for-admin/\" + value.id).then((u) => {\n      setOverlayLoader(false);\n      localStorage.setItem(\"eventDataToUpdate\", JSON.stringify(u));\n      return props.history.push(\"/admin/manage-events\");\n    });\n  };\n  const handleDownloadAction = (value) => {\n    window.open(\n      \"http://162.241.71.139:5000/v1/events/download-id-proofs/\" + value.id,\n      \"_blank\"\n    );\n  };\n  const notifyAttendees = () => {\n    setIsSaving(true);\n    axios\n      .post(\"/events/notify\", {\n        eventId: selectedEventId,\n        message: notificationText,\n      })\n      .then((u) => {\n        setSelectedEventId();\n        setShowModal(false);\n        setIsSaving(false);\n        setNotificationText(\"\");\n        swal(\"All attendies notified!\", {\n          icon: \"success\",\n        });\n      });\n  };\n  const handleNotify = (value) => {\n    setSelectedEventId(value.id);\n    setShowModal(!showModal);\n  };\n  const columns = useMemo(() => [\n    {\n      name: \"Event Id\",\n      selector: \"id\",\n    },\n    {\n      name: \"Name\",\n      selector: \"name\",\n    },\n    {\n      name: \"Customer Name\",\n      selector: \"customerName\",\n    },\n    {\n      name: \"Organisation\",\n      selector: \"customerOrganisation\",\n    },\n    {\n      name: \"Starts On\",\n      selector: \"liveFrom\",\n    },\n    {\n      name: \"Ends On\",\n      selector: \"liveTo\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleNotify(row)}\n        >\n          <i className=\"tim-icons icon-bell-55\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Notify\",\n      selector: \"Notify\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleDownloadAction(row)}\n        >\n          <i className=\"tim-icons icon-cloud-download-93\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Download\",\n      selector: \"Download\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-success\"\n          onClick={() => handleGalleryAction(row)}\n        >\n          <i className=\"tim-icons icon-camera-18\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Gallery\",\n      selector: \"gallery\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleEditAction(row)}\n        >\n          <i className=\"tim-icons icon-pencil\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Edit\",\n      selector: \"edit\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-danger\"\n          onClick={() => handleDeleteAction(row)}\n        >\n          <i className=\"tim-icons icon-trash-simple\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      button: true,\n      name: \"Delete\",\n      selector: \"delete\",\n    },\n  ]);\n\n  return (\n    <>\n      {showModal ? (\n        <div className=\"Modal-Root\">\n          <div className=\"resolve-card\">\n            <Row>\n              <Col md=\"12\">\n                <h3\n                  style={{\n                    paddingTop: \"18px\",\n                  }}\n                >\n                  Notify Attendees\n                </h3>\n              </Col>\n              <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\n                <Label>Message in Notification</Label>\n                <Input\n                  type=\"textarea\"\n                  onChange={(e) => setNotificationText(e.target.value)}\n                />\n              </Col>\n            </Row>\n            <Row className=\"justify-content-between\">\n              <Col\n                md=\"12\"\n                xs=\"12\"\n                className=\"d-flex justify-content-end\"\n                style={{ padding: \"18px\" }}\n              >\n                <Button\n                  color=\"warning\"\n                  onClick={() => {\n                    setIsSaving(false);\n                    setShowModal(false);\n                    setSelectedEventId();\n                    notifyAttendees();\n                    setNotificationText(\"\");\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  color=\"success\"\n                  disabled={isSaving}\n                  onClick={notifyAttendees}\n                >\n                  {isSaving ? \"Notifying...\" : \"Notify\"}\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      ) : null}\n      <div\n        className=\"loading-overlay\"\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\n      >\n        <div class=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n        Loading...\n      </div>\n      <DataTable\n        data={props.data || []}\n        columns={columns}\n        theme=\"solarized\"\n        pagination={true}\n        progressPending={progress}\n        progressComponent={<h2>Loading Events... 📅</h2>}\n      />\n    </>\n  );\n});\n\nexport default withRouter(EventTable);\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport Axios from \"./axios\";\nimport swal from \"sweetalert\";\nimport { Button, Row, Col, Input, Label } from \"reactstrap\";\n\nconst ExpandableComponent = ({ data }) => (\n  <>\n    <Row>\n      <Col md=\"12\" style={{ margin: \"24px\" }}>\n        Question:{\" \"}\n        <div\n          style={{\n            color: \"white\",\n            padding: \"14px\",\n            marginTop: \"8px\",\n            marginBottom: \"8px\",\n            backgroundColor: \"#0000002b\",\n            borderRadius: \"4px\",\n          }}\n        >\n          {data.question}\n        </div>\n        Answer:{\" \"}\n        <div\n          style={{\n            color: data.answer == null ? \"#ff6464\" : \"white\",\n            padding: \"14px\",\n            marginTop: \"8px\",\n            backgroundColor: \"#0000002b\",\n            borderRadius: \"4px\",\n          }}\n        >\n          {data.answer == null ? \"Not Answered Yet!\" : data.answer}\n        </div>\n      </Col>\n    </Row>\n  </>\n);\n\nconst QueryTable = (props) => {\n  const [overlayLoader, setOverlayLoader] = useState(false);\n  const [progress, setProgress] = useState(true);\n  const [data, setData] = useState([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [answer, setAnswer] = useState(\"\");\n  const [openedQueryId, setOpenQueryId] = useState(\"\");\n  const [openedQueryAttendeeId, setOpenQueryAttendeeId] = useState(\"\");\n\n  useEffect(() => {\n    if (!props.inAll) {\n      Axios.get(\"query/get-latest\").then((u) => {\n        const modifiedData = u.data.map((row) => {\n          return {\n            ...row,\n            attendeeName: row.Attendee.name,\n            attendeePhone: row.Attendee.phone,\n            attendeeEmail: row.Attendee.email,\n            attendeeId: row.Attendee.id,\n            //TODO: implement event name in queries table\n            // EventName: row.Event.name,\n          };\n        });\n        setData(modifiedData);\n        setProgress(false);\n      });\n    } else {\n      if (props.eventId) {\n        Axios.get(`query/get-all/${props.eventId}`).then((u) => {\n          const modifiedData = u.data.map((row) => {\n            return {\n              ...row,\n              attendeeName: row.Attendee.name,\n              attendeePhone: row.Attendee.phone,\n              attendeeEmail: row.Attendee.email,\n              attendeeId: row.Attendee.id,\n              //TODO: implement event name in queries table\n              // EventName: row.Event.name,\n            };\n          });\n          setData(modifiedData);\n          setProgress(false);\n          props.searched();\n        });\n      } else {\n        setData([]);\n        setProgress(false);\n      }\n    }\n  }, [props.eventId]);\n\n  createTheme(\"solarized\", {\n    text: {\n      primary: \"#ffffff\",\n      secondary: \"#9A9A9A\",\n    },\n    background: {\n      default: \"#27293d\",\n    },\n    action: {\n      button: \"rgba(255,255,255, 1)\",\n      hover: \"rgba(255,255,255, 1)\",\n      disabled: \"rgba(255,255,255, 1)\",\n    },\n  });\n\n  const handleDeleteAction = (value) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        var arr = data.filter((item) => item.id !== value.id);\n        setData(arr);\n        await Axios.delete(\"/customer/delete/\" + value.id);\n        swal(\"Poof! Your content has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your Data is Safe!\");\n      }\n    });\n  };\n  const handleResolveAction = (value) => {\n    setShowModal(true);\n    setOpenQueryId(value.id);\n    setOpenQueryAttendeeId(value.attendeeId);\n  };\n  const saveAnswer = () => {\n    setIsSaving(true);\n    Axios.post(\"query/resolve\", {\n      answer: answer,\n      id: openedQueryId,\n      attendeeId: openedQueryAttendeeId,\n    }).then((u) => {\n      if (props.eventId == null) {\n        Axios.get(\"query/get-latest\").then((u) => {\n          const modifiedData = u.data.map((row) => {\n            return {\n              ...row,\n              attendeeName: row.Attendee.name,\n              attendeePhone: row.Attendee.phone,\n              attendeeEmail: row.Attendee.email,\n              attendeeId: row.Attendee.id,\n              //TODO: implement event name in queries table\n              // EventName: row.Event.name,\n            };\n          });\n          setData(modifiedData);\n          setProgress(false);\n          setIsSaving(false);\n          setShowModal(false);\n        });\n      } else {\n        Axios.get(`query/get-all/${props.eventId}`).then((u) => {\n          const modifiedData = u.data.map((row) => {\n            return {\n              ...row,\n              attendeeName: row.Attendee.name,\n              attendeePhone: row.Attendee.phone,\n              attendeeEmail: row.Attendee.email,\n              attendeeId: row.Attendee.id,\n              //TODO: implement event name in queries table\n              // EventName: row.Event.name,\n            };\n          });\n          setData(modifiedData);\n          setProgress(false);\n          setIsSaving(false);\n          setShowModal(false);\n        });\n      }\n    });\n  };\n  const columns = useMemo(() => [\n    {\n      name: \"#\",\n      selector: \"id\",\n      maxWidth: \"18px\",\n    },\n    {\n      name: \"Event Id\",\n      selector: \"EventId\",\n      maxWidth: \"18px\",\n    },\n    {\n      name: \"Event Name\",\n      selector: \"EventName\",\n    },\n    {\n      selector: \"question\",\n      name: \"Question\",\n    },\n    {\n      name: \"Answer\",\n      selector: \"answer\",\n    },\n    {\n      name: \"Attendee\",\n      selector: \"attendeeName\",\n    },\n    {\n      name: \"Attendee Phone\",\n      selector: \"attendeePhone\",\n    },\n    {\n      name: \"Attendee Email\",\n      selector: \"attendeeEmail\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleResolveAction(row)}\n        >\n          Resolve\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Edit\",\n      selector: \"edit\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-danger\"\n          onClick={() => handleDeleteAction(row)}\n        >\n          <i className=\"tim-icons icon-trash-simple\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      button: true,\n      name: \"Delete\",\n      selector: \"delete\",\n    },\n  ]);\n\n  return (\n    <>\n      {showModal ? (\n        <div className=\"Modal-Root\">\n          <div className=\"resolve-card\">\n            <Row>\n              <Col md=\"12\">\n                <h3\n                  style={{\n                    paddingTop: \"18px\",\n                  }}\n                >\n                  Resolve Query\n                </h3>\n              </Col>\n              <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\n                <Label>Answer</Label>\n                <Input\n                  type=\"textarea\"\n                  onChange={(e) => setAnswer(e.target.value)}\n                />\n              </Col>\n            </Row>\n            <Row className=\"justify-content-between\">\n              <Col\n                md=\"12\"\n                xs=\"12\"\n                className=\"d-flex justify-content-end\"\n                style={{ padding: \"18px\" }}\n              >\n                <Button\n                  color=\"warning\"\n                  onClick={() => {\n                    setIsSaving(false);\n                    setShowModal(false);\n                    setOpenQueryId(\"\");\n                    setOpenQueryAttendeeId(\"\");\n                    setAnswer(\"\");\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  color=\"success\"\n                  disabled={isSaving}\n                  onClick={saveAnswer}\n                >\n                  {isSaving ? \"Saving...\" : \"Save\"}\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      ) : null}\n      <div\n        className=\"loading-overlay\"\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\n      >\n        <div class=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n        Loading...\n      </div>\n      <DataTable\n        data={data || []}\n        columns={columns}\n        theme=\"solarized\"\n        pagination={true}\n        progressPending={progress}\n        expandableRowsComponent={<ExpandableComponent />}\n        expandableRows\n        progressComponent={<h2>Loading Queries...</h2>}\n      />\n    </>\n  );\n};\n\nexport default QueryTable;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport Axios from \"../components/sub/axios\";\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport EventTable from \"components/sub/eventsTable\";\nimport QueryTable from \"../components/sub/queryTable\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data2\",\n      tableState: 1,\n      currentTableCount: 0,\n      pastTableCount: 0,\n      futureTableCount: 0,\n      tableData: [],\n    };\n  }\n  componentDidMount = () => {\n    Promise.all([\n      Axios.get(\n        \"/events/get-current-raw/\" + this.state.currentTableCount.toString()\n      ),\n      Axios.get(\"/events/get-past-raw/\" + this.state.pastTableCount.toString()),\n      Axios.get(\n        \"/events/get-future-raw/\" + this.state.futureTableCount.toString()\n      ),\n    ]).then(([a, b, c]) => {\n      var tableTempData = this.state.tableData;\n      var futureTableData = c.data.map((element) => {\n        var obj = {};\n        obj[\"id\"] = element.id;\n        obj[\"customerId\"] = element.Customers.id;\n        obj[\"customerName\"] = element.Customers.name;\n        obj[\"customerOrganisation\"] = element.Customers.organisation;\n        obj[\"liveFrom\"] = new Date(element.liveFrom).toDateString();\n        obj[\"liveTo\"] = new Date(element.liveTo).toDateString();\n        obj[\"name\"] = element.name;\n        return obj;\n      });\n      tableTempData.push(futureTableData);\n      var currentTableData = a.data.map((element) => {\n        var obj = {};\n        obj[\"id\"] = element.id;\n        obj[\"customerId\"] = element.Customers.id;\n        obj[\"customerName\"] = element.Customers.name;\n        obj[\"customerOrganisation\"] = element.Customers.organisation;\n        obj[\"liveFrom\"] = new Date(element.liveFrom).toDateString();\n        obj[\"liveTo\"] = new Date(element.liveTo).toDateString();\n        obj[\"name\"] = element.name;\n        return obj;\n      });\n      tableTempData.push(currentTableData);\n      var pastTableData = b.data.map((element) => {\n        var obj = {};\n        obj[\"id\"] = element.id;\n        obj[\"customerId\"] = element.Customers.id;\n        obj[\"customerName\"] = element.Customers.name;\n        obj[\"customerOrganisation\"] = element.Customers.organisation;\n        obj[\"liveFrom\"] = new Date(element.liveFrom).toDateString();\n        obj[\"liveTo\"] = new Date(element.liveTo).toDateString();\n        obj[\"name\"] = element.name;\n        return obj;\n      });\n      tableTempData.push(pastTableData);\n\n      this.setState({\n        tableData: tableTempData,\n      });\n    });\n  };\n  setBgChartData = (name) => {\n    this.setState({\n      bigChartData: name,\n    });\n  };\n  render() {\n    console.log(this.state.tableData[this.state.tableState]);\n    return (\n      <React.Fragment>\n        <div className=\"content\">\n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"6\">\n                      <CardTitle tag=\"h2\">Events</CardTitle>\n                      <h5 className=\"card-category\">Total Events</h5>\n                    </Col>\n                    <Col sm=\"6\">\n                      <ButtonGroup\n                        className=\"btn-group-toggle float-right\"\n                        data-toggle=\"buttons\"\n                      >\n                        <Button\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data1\",\n                          })}\n                          color=\"info\"\n                          id=\"0\"\n                          size=\"sm\"\n                          onClick={() =>\n                            this.setState({\n                              tableState: 2,\n                              bigChartData: \"data1\",\n                            })\n                          }\n                        >\n                          <input\n                            defaultChecked\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Past\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-single-02\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"1\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data2\",\n                          })}\n                          onClick={() =>\n                            this.setState({\n                              tableState: 1,\n                              bigChartData: \"data2\",\n                            })\n                          }\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Current\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-gift-2\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"2\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data3\",\n                          })}\n                          onClick={() =>\n                            this.setState({\n                              tableState: 0,\n                              bigChartData: \"data3\",\n                            })\n                          }\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Upcoming\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-tap-02\" />\n                          </span>\n                        </Button>\n                      </ButtonGroup>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <EventTable\n                    data={this.state.tableData[this.state.tableState] || null}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Queries</CardTitle>\n                  <h5 className=\"card-category\">Queries Raised by Attendees</h5>\n                </CardHeader>\n                <CardBody>\n                  <QueryTable />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Table,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Dropdown,\n  Col,\n} from \"reactstrap\";\n\nclass UserProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n    };\n  }\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Edit Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label>Full Name</label>\n                          <Input placeholder=\"Name\" type=\"text\" />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label htmlFor=\"exampleInputEmail1\">\n                            Email address\n                          </label>\n                          <Input placeholder=\"mike@email.com\" type=\"email\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Phone Number</label>\n                          <Input placeholder=\"Phone Number\" type=\"number\" />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Password</label>\n                          <Input placeholder=\"password\" type=\"password\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n                <CardFooter>\n                  <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Create Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label>Full Name</label>\n                          <Input placeholder=\"Name\" type=\"text\" />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label htmlFor=\"exampleInputEmail1\">\n                            Email address\n                          </label>\n                          <Input placeholder=\"mike@email.com\" type=\"email\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Password</label>\n                          <Input placeholder=\"password\" type=\"password\" />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Phone Number</label>\n                          <Input placeholder=\"Phone Number\" type=\"number\" />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Role</label>\n                          <Dropdown\n                            isOpen={this.state.dropdownOpen}\n                            toggle={() => {\n                              this.setState({\n                                dropdownOpen: !this.state.dropdownOpen,\n                              });\n                            }}\n                          >\n                            <DropdownToggle>Select Role</DropdownToggle>\n                            <DropdownMenu>\n                              <DropdownItem header>\n                                Roles Available\n                              </DropdownItem>\n                              <DropdownItem>Super Admin</DropdownItem>\n                              <DropdownItem>Admin</DropdownItem>\n                            </DropdownMenu>\n                          </Dropdown>\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n                <CardFooter>\n                  <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\n                    Create\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <CardHeader>\n                    <h5 className=\"title\">Users List</h5>\n                  </CardHeader>\n                  <CardBody>\n                    <Table className=\"tablesorter\" responsive>\n                      <thead className=\"text-primary\">\n                        <tr>\n                          <th>User Name</th>\n                          <th>User Email</th>\n                          <th>User Phone</th>\n                          <th className=\"text-center\">Actions</th>\n                        </tr>\n                      </thead>\n                    </Table>\n                  </CardBody>\n                </CardHeader>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React, { Component } from \"react\";\nimport JoditEditor from \"jodit-react\";\n\nclass Editor extends Component {\n  state = {\n    content: \"\",\n  };\n  returnContent = () => {\n    return this.state.content;\n  };\n  render() {\n    const config = {\n      readonly: false, // all options from https://xdsoft.net/jodit/doc/\n    };\n    return (\n      <JoditEditor\n        value={this.content}\n        config={config}\n        tabIndex={1} // tabIndex of textarea\n        onBlur={(newContent) => this.setState({ content: newContent })} // preferred to use only this option to update the content for performance reasons\n        onChange={(newContent) => {}}\n      />\n    );\n  }\n}\nexport default Editor;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input, Col,Row } from \"reactstrap\";\n\nclass Autocomplete extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array),\n  };\n  static defaultProps = {\n    suggestions: [],\n  };\n  constructor(props) {\n    super(props);\n    console.log(props)\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n      id:null,\n    };\n  }\n  onChange = (e) => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n    const filteredSuggestions = suggestions.filter(\n      (suggestion) =>\n        suggestion.Name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value,\n    });\n  };\n  returnId = () => {\n    return this.state.id;\n  }\n  removeId = (id) => {\n    var idArr = document.getElementById(this.props.id).value.split(\",\");\n    const index = idArr.indexOf(id);\n    if (index > -1) {\n      idArr.splice(index, 1);\n    }\n    document.getElementById(this.props.id).value = idArr.join();\n  };\n  onClick = (e) => {\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      id: e.currentTarget.id,\n      userInput: e.currentTarget.firstChild.firstChild.innerText,\n    });\n    if(this.props.setId) this.props.setId(e.currentTarget.id);\n  };\n  setData = (data) => {\n    this.setState({\n      id: this.props.suggestions.filter((e) => e.Name == data)[0].id,\n      userInput: data,\n    });\n  }\n  setDataUsingId = (Id) => {\n    this.setState({\n      id: this.props.suggestions.filter((e) => e.id == Id)[0].id,\n      userInput: this.props.suggestions.filter((e) => e.id == Id)[0].Name,\n    });\n  }\n  onKeyDown = (e) => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n    if (e.keyCode === 13) {\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[activeSuggestion],\n      });\n    } else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n  };\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput,\n      },\n    } = this;\n\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        var fieldLength = document.getElementById(this.props.id).clientWidth;\n        suggestionsListComponent = (\n          <div className=\"row\">\n            <ul\n              class={`suggestions ${this.props.className}`}\n              style={{ width: fieldLength }}\n            >\n              {filteredSuggestions.map((suggestion, index) => {\n                let className;\n                if (index === activeSuggestion) {\n                  className = \"suggestion-active\";\n                }\n                console.log(suggestion);\n                return (\n                  <li\n                    className={className}\n                    key={suggestion.id}\n                    id={suggestion.id}\n                    onClick={onClick}\n                  >\n                    <Row>\n                      <Col md=\"6\">{suggestion.Name}</Col>\n                      {suggestion.Phone != undefined ?  <Col md=\"6\">\n                        <em>{suggestion.Phone}</em>\n                      </Col> : null}\n                    </Row>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        );\n      } else {\n        var fieldLength = document.getElementById(this.props.id).clientWidth;\n        suggestionsListComponent = (\n          <div className=\"row justify-content-center\">\n            <ul class=\"suggestions\" style={{ width: fieldLength }}>\n              <li>\n                <em>No suggestions (or wait)</em>\n              </li>\n            </ul>\n          </div>\n        );\n      }\n    }\n    return (\n      <Fragment>\n        <Input\n          type=\"text\"\n          class=\"form-control d-xl-flex\"\n          id={this.props.id}\n          placeholder={this.props.hint == null ? \"Name\" : this.props.hint}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          style={{\n            marginTop: this.props.marginTop || \"17px\",\n            paddingLeft: \"12px\",\n            marginBottom: \"0px\",\n            Height: \"38px\",\n            paddingBottom: \"7px\",\n            width: \"100%\",\n            paddingRight: \"19px\",\n          }}\n          value={userInput}\n        />\n        <div className=\"row\">{suggestionsListComponent}</div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Autocomplete;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Autocomplete extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array),\n  };\n\n  static defaultProps = {\n    suggestions: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n    };\n  }\n\n  onChange = (e) => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n    const filteredSuggestions = suggestions.filter(\n      (suggestion) =>\n        suggestion.Name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value,\n    });\n  };\n  removeId = (id) => {\n    var idArr = document.getElementById(this.props.id).value.split(\",\");\n    const index = idArr.indexOf(id.toString());\n    if (index > -1) {\n      idArr.splice(index, 1);\n    }\n    document.getElementById(this.props.id).value = idArr.join();\n  };\n  removeAllIds = () => {\n    document.getElementById(this.props.id).value = \"\"\n  }\n  onClick = (e) => {\n    var idArr =\n      document.getElementById(this.props.id).value === \"\"\n        ? []\n        : document.getElementById(this.props.id).value.split(\",\");\n    if (idArr.includes(e.target.id)) {\n      alert(\"Already Added this Catagory\");\n    } else {\n      idArr.push(e.target.id);\n      document.getElementById(this.props.id).value = idArr.join();\n      this.props.categoryChipHit({\n        name: e.currentTarget.innerText,\n        id: e.target.id,\n      });\n    }\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n    });\n  };\n  addItemToUpdate = (data) => {\n    document.getElementById(this.props.id).value = data.id;\n    this.props.ChipHitAfterRemoving({\n      name: data.name,\n      id: data.id,\n    });\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n    });\n  }\n  onKeyDown = (e) => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n    if (e.keyCode === 13) {\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[activeSuggestion],\n      });\n    } else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n  };\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput,\n      },\n    } = this;\n\n    let suggestionsListComponent;\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        var fieldLength = document.getElementById(\"txtcategory\").clientWidth;\n        suggestionsListComponent = (\n          <div className=\"row\">\n            <ul class=\"suggestions\" style={{ width: fieldLength }}>\n              {filteredSuggestions.map((suggestion, index) => {\n                let className;\n                if (index === activeSuggestion) {\n                  className = \"suggestion-active\";\n                }\n                return (\n                  <li\n                    className={className}\n                    key={suggestion.id}\n                    id={suggestion.id}\n                    onClick={onClick}\n                  >\n                    {suggestion.Name}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        );\n      } else {\n        var fieldLength = document.getElementById(\"txtcategory\").clientWidth;\n        suggestionsListComponent = (\n          <div className=\"row justify-content-center\">\n            <ul class=\"suggestions\" style={{ width: fieldLength }}>\n              <li>\n                <em>No suggestions</em>\n              </li>\n            </ul>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <Fragment>\n        <input type=\"hidden\" id={this.props.id} />\n        <input\n          type=\"text\"\n          class=\"form-control d-xl-flex\"\n          id=\"txtcategory\"\n          placeholder={this.props.hint == null ? \"Name\" : this.props.hint}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          style={{\n            marginTop: \"17px\",\n            paddingLeft: \"12px\",\n            Height: \"38px\",\n            paddingBottom: \"7px\",\n            width: \"100%\",\n            paddingRight: \"19px\",\n          }}\n          value={userInput}\n        />\n        <div className=\"row\">{suggestionsListComponent}</div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Autocomplete;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport routes from \"routes.js\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"blue\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>\n              {this.getRoutes(routes)}\n              <Redirect from=\"*\" to=\"/admin/dashboard\"/>\n            </Switch>\n            {// we don't want the Footer to be rendered on map page\n            this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n              <Footer fluid />\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","import React, { Component } from \"react\";\n\nclass CategoryChips extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chips: [],\n    };\n  }\n  addChip = (val) => {\n    var tempChips = this.state.chips;\n    tempChips.push(val);\n    this.setState({\n      chips: tempChips,\n    });\n  };\n  addChipByremoving = (val) => {\n    this.setState(\n      {\n        chips: [],\n      },\n      () => {\n        var tempChips = this.state.chips;\n        tempChips.push(val);\n        this.setState({\n          chips: tempChips,\n        });\n      }\n    );\n  }\n  removeAllChips = () => {\n    this.setState({\n      chips: [],\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"root-chips row\">\n          {this.state.chips.length == 0 ? (\n            <em>Nothing've been Added Yet!</em>\n          ) : (\n            this.state.chips.map((item) => (\n              <div\n                key={item.id}\n                onClick={() => {\n                  this.props.removeId(item.id);\n                  var temArr = this.state.chips.filter((element) => {\n                    return element.id != item.id;\n                  });\n                  this.setState({\n                    chips: temArr,\n                  });\n                }}\n              >\n                {item.name}\n              </div>\n            ))\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CategoryChips;\n","import React,{ Component } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\nexport default class Agendas extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          id:\"\",\n          name: \"\",\n          venue: \"\",\n          startTime: \"\",\n          endTime: \"\",\n          remarks: \"\",\n          startDate: \"\",\n        };\n    }\n    returnState = () => {\n        return this.state\n    }\n    resetState = () => {\n      this.setState({\n        name: \"\",\n        venue: \"\",\n        startTime: \"\",\n        endTime: \"\",\n        remarks: \"\",\n        startDate: \"\",\n        id:\"\",\n      });\n    }\n    setData = (data) => {\n      this.setState({\n        id:data.id,\n        name: data.name,\n        venue: data.venue,\n        startTime: new Date(data.startTime).toISOString().split(\"Z\")[0],\n        endTime: new Date(data.endTime).toISOString().split(\"Z\")[0],\n        remarks: data.remarks,\n        startDate: data.startDate,\n      });\n    }\n    render() {\n        return (\n            <Row>\n              <Col md=\"12\">\n                <FormGroup>\n                  <label>Agendas Name (Particulars)</label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Particulars\"\n                    value={this.state.name}\n                    onChange={(e) => {\n                      this.setState({\n                        name: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"6\">\n                <FormGroup>\n                  <label>Agenda Start Date & Time</label>\n                  <Input\n                    type=\"datetime-local\"\n                    value={this.state.startTime}\n                    onChange={(e) => {\n                      console.log(e.target.value)\n                      this.setState({\n                        startTime: e.target.value,\n                        startDate: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"6\">\n                <FormGroup>\n                  <label>Agenda End Date & Time</label>\n                  <Input\n                    type=\"datetime-local\"\n                    value={this.state.endTime}\n                    onChange={(e) => {\n                      this.setState({\n                        endTime: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"12\">\n                <FormGroup>\n                  <label>Agenda Venue</label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Venue\"\n                    value={this.state.venue}\n                    onChange={(e) => {\n                      this.setState({\n                        venue: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"12\">\n                <FormGroup>\n                  <label>Remarks</label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Remarks/Dress Code\"\n                    value={this.state.remarks}\n                    onChange={(e) => {\n                      this.setState({\n                        remarks: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n        );\n                     \n    }\n}","import React,{ Component } from \"react\";\nimport {\n    Row,\n    Col,\n    FormGroup,\n    Input,\n} from \"reactstrap\";\n\nexport default class Transfers extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          id: undefined,\n          name: \"\",\n          origin: \"\",\n          destination: \"\",\n          mode: \"\",\n          vehicleNumber: \"\",\n          driverName: \"\",\n          distance: \"\",\n          driverPhone: \"\",\n          journeyTime: \"\",\n          transferDate: \"\",\n        };\n    }\n\n    returnState = () => {\n        return this.state\n    }\n    setData = (data) => {\n      this.setState({\n        id:data.id,\n        name: data.name,\n        origin: data.origin,\n        destination: data.destination,\n        mode: data.mode,\n        vehicleNumber: data.vehicleNumber,\n        driverName: data.driverName,\n        distance: data.distance,\n        driverPhone: data.driverPhone,\n        journeyTime: data.journeyTime,\n        transferDate: data.transferDate.split(\"Z\")[0],\n      });\n    }\n    render() {\n        return (\n          <Col md=\"12\">\n            <Col md=\"12\" className=\"category-col\">\n              <label>Transfer Name</label>\n              <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Transfer Name\"\n                      value={this.state.name}\n                      onChange={(e) => {\n                        this.setState({\n                          name: e.target.value,\n                        });\n                      }}\n                    ></Input>\n                  </Col>\n                </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <label>Transfer Date</label>\n                    <Input\n                      type=\"datetime-local\"\n                      value={this.state.transferDate}\n                      onChange={(e) => {\n                        this.setState({\n                          transferDate: e.target.value,\n                        });\n                      }}\n                    ></Input>\n                  </Col>\n                </Row>\n              </FormGroup>\n              <Row>\n                <Col md=\"6\">\n                  <label>Mode of Transfer</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Vehicle Type\"\n                          value={this.state.mode}\n                          onChange={(e) => {\n                            this.setState({\n                              mode: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <label>Vehicle Number</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Vehicle Number\"\n                          value={this.state.vehicleNumber}\n                          onChange={(e) => {\n                            this.setState({\n                              vehicleNumber: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"6\">\n                  <label>Driver Name</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Name\"\n                          value={this.state.driverName}\n                          onChange={(e) => {\n                            this.setState({\n                              driverName: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <label>Driver Phone</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"number\"\n                          placeholder=\"Phone Number\"\n                          value={this.state.driverPhone}\n                          onChange={(e) => {\n                            this.setState({\n                              driverPhone: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"6\">\n                  <label>Origin</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Location\"\n                          value={this.state.origin}\n                          onChange={(e) => {\n                            this.setState({\n                              origin: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <label>Destination</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Location\"\n                          value={this.state.destination}\n                          onChange={(e) => {\n                            this.setState({\n                              destination: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"6\">\n                  <label>Total Distance</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Distance (Kms)\"\n                          value={this.state.distance}\n                          onChange={(e) => {\n                            this.setState({\n                              distance: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <label>Journey Time</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Time\"\n                          value={this.state.journeyTime}\n                          onChange={(e) => {\n                            this.setState({\n                              journeyTime: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </Col>\n          </Col>\n        );\n\n    }\n}","import React, { createRef } from \"react\";\nimport Editor from \"../components/sub/Editor\";\nimport Autocomplete from \"../components/sub/autosuggest-norm\";\nimport Axios from \"../components/sub/axios\";\nimport AutocompleteSimple from \"../components/sub/autosuggest\";\nimport CategoryChips from \"../components/sub/categorychips\";\nimport Agendas from \"../components/sub/agendas\";\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Table,\n} from \"reactstrap\";\nimport Transfers from \"components/sub/transfers\";\n\nconst s26 = {\n  width: \"100%\",\n};\n\nconst s50 = {\n  marginLeft: \"15px\",\n  marginTop: \"14px\",\n};\n\nclass ManageEvents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.EditorRef = createRef();\n    this.EventAttendies = createRef();\n    this.agendaRef = createRef();\n    this.countryRef = createRef();\n    this.customerRef = createRef();\n    this.cityRef = createRef();\n\n    this.representativeNameRef = createRef();\n    this.RepresentativeNameAutocompleteRef = createRef();\n\n    this.representativeCategoryRef = createRef();\n    this.RepresentativeCategoryAutocompleteRef = createRef();\n    this.state = {\n      isSaving: false,\n      eventId: null,\n      eventName: \"\",\n      eventBy: null,\n      eventFrom: \"\",\n      eventTo: \"\",\n      venueName: \"\",\n      venueUrl: \"\",\n      eventImage: \"\",\n      eventPlackCardImage: \"\",\n      addedAttendie: true,\n      eventPlackCardImageName: \"Choose Image File\",\n      eventImage: \"\",\n      eventImageName: \"Choose Image File\",\n      welcomeNote: \"\",\n      countryId: null,\n      cityId: null,\n      customerId: null,\n      createNewRepresentative: false,\n      createNewRepresentativeCategory: false,\n      createdNewRepresentativeCategory: true,\n      createdRepresentative: true,\n      suggestionCities: [],\n      sugggestionCustomers: [],\n      suggestionCountries: [],\n      transfers: [],\n      agendas: [],\n      currTransferElement: null,\n      rIsFilled: true,\n      representativePhone: \"\",\n      representativeName: \"\",\n      representativeCategoryName: \"\",\n      Representatives: [],\n      EventAttendies: [],\n      representativeArr: [],\n      RepresentativesCategory: [],\n      TicketsSame: false,\n      isEditorOpen: false,\n      aTicketFileName: \"Choose Ticket File\",\n      dTicketFileName: \"Choose Ticket File\",\n      updatingAgenda: false,\n      updatingAttendee: false,\n      updatingAgendaObject: null,\n      updatingRepresentatives: false,\n      updatingRepresentativesNameId: null,\n      updatingRepresentativesCategoryId: null,\n      updatingAttendeePhone: null,\n    };\n  }\n  createNewTransfer = (data) => {\n    var tempTansfers = [];\n    tempTansfers = this.state.transfers;\n    var transferRef = createRef();\n    tempTansfers.push({\n      component: (\n        <Transfers ref={transferRef} key={this.state.transfers.length + 1} />\n      ),\n      ref: transferRef,\n      isFilled: data ? true : false,\n      data: data || {},\n    });\n    this.setState({\n      transfers: tempTansfers,\n      rIsFilled: data ? !!this.state.rIsFilled : !this.state.rIsFilled,\n    });\n  };\n  haveAnythingEmpty = (formData) => {\n    for (var key in formData) {\n      if (formData[key] === \"\") {\n        return true;\n      }\n    }\n    return false;\n  };\n  setDataToFields = (u) => {\n    var data = JSON.parse(u).data;\n    console.log(data);\n    this.setState({\n      eventId: data.id,\n      eventName: data.name,\n      eventBy: data.CustomerId,\n      eventFrom: new Date(data.liveFrom).toISOString().split(\"T\")[0],\n      eventTo: new Date(data.liveTo).toISOString().split(\"T\")[0],\n      venueName: data.Locations.name,\n      venueUrl: data.Locations.url,\n      customerId: data.CustomerId,\n      eventPlackCardImageName: data.plackCardImage.split(\"/\")[\n        data.plackCardImage.split(\"/\").length - 1\n      ],\n      eventImageName: data.eventImage.split(\"/\")[\n        data.eventImage.split(\"/\").length - 1\n      ],\n      welcomeNote: data.description,\n      countryId: data.Locations.CountryId,\n      cityId: data.Locations.CityId,\n      agendas: data.Agendas.map((a) => {\n        a = { ...a, startTime: new Date(a.startDate + \"T\" + a.startTime) };\n        a = { ...a, endTime: new Date(a.startDate + \"T\" + a.endTime) };\n        return a;\n      }),\n      EventAttendies: data.Attendees.map((a) => {\n        return {\n          ...a,\n          isSameAsArriving: a.dticket == null,\n        };\n      }),\n      representativeArr: data.Representatives_for_Events.map((a) => {\n        var obj = {};\n        obj[\"Name\"] = a.Employees.name;\n        obj[\"Category\"] = a.Representative_Categories.name;\n        obj[\"RepresentativeCategoryId\"] = a.RepresentativeCategoryId;\n        obj[\"EmployeeId\"] = a.EmployeeId;\n        obj[\"id\"] = a.id;\n        return obj;\n      }),\n    });\n    console.log(this.state.welcomeNote);\n    data.Transfers.map((elem) => {\n      this.createNewTransfer(elem);\n    });\n    this.countryRef.current.setDataUsingId(this.state.countryId);\n    this.cityRef.current.setDataUsingId(this.state.cityId);\n    this.customerRef.current.setDataUsingId(this.state.customerId);\n\n    //clear out local storage...\n    localStorage.removeItem(\"eventDataToUpdate\");\n  };\n  componentWillMount = () => {\n    Promise.all([\n      Axios.get(\"/location/country/get-all\"),\n      Axios.get(\"/location/city/get-all\"),\n      Axios.get(\"/customer/get-all\"),\n      Axios.get(\"/representative/category/get-all\"),\n      Axios.get(\"/representative/employee/get-all\"),\n    ]).then(([u, a, d, e, f]) => {\n      this.setState({\n        suggestionCountries: u.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n        suggestionCities: a.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n        sugggestionCustomers: d.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          b[\"Phone\"] = a.phone;\n          return b;\n        }),\n        Representatives: f.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          b[\"Phone\"] = a.phone;\n          return b;\n        }),\n        RepresentativesCategory: e.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n      });\n      if (localStorage.getItem(\"eventDataToUpdate\"))\n        this.setDataToFields(localStorage.getItem(\"eventDataToUpdate\"));\n    });\n  };\n  categoryChipHit = (val) => {\n    this.representativeNameRef.current.addChip(val);\n  };\n  categoryChipHitAfterRemoving = (val) => {\n    this.representativeCategoryRef.current.addChipByremoving(val);\n  };\n  representativesNameChipHitAfterRemoving = (val) => {\n    this.representativeNameRef.current.addChipByremoving(val);\n  };\n  categoryNameChipHit = (val) => {\n    this.representativeCategoryRef.current.addChip(val);\n  };\n  categoryIdfromHiddenField = (val) => {\n    this.RepresentativeNameAutocompleteRef.current.removeId(val);\n  };\n  categoryIdfromHiddenField_CategoryName = (val) => {\n    this.RepresentativeCategoryAutocompleteRef.current.removeId(val);\n  };\n  modifyDataWithEventId = (EventId) => {\n    //represntatives...\n    var representativeTemp = this.state.representativeArr;\n    var newRepresentativeArr = representativeTemp.map((obj) => ({\n      ...obj,\n      EventId: EventId,\n    }));\n    //event attendies...\n    var EventAttendiesTemp = this.state.EventAttendies;\n    var newAttendiesObj = EventAttendiesTemp.map((obj) => ({\n      ...obj,\n      EventId: EventId,\n    }));\n    //event transfers...\n    var transfersTemp = this.state.transfers.map((a) => a.data);\n    var newTransferObj = transfersTemp.map((obj) => ({\n      ...obj,\n      EventId: EventId,\n    }));\n\n    //event agendas...\n    var eventAgendasTemp = this.state.agendas;\n    var newAgendasObj = eventAgendasTemp.map((obj) => ({\n      ...obj,\n      EventId: EventId,\n    }));\n\n    return {\n      Representatives: newRepresentativeArr,\n      Attendies: newAttendiesObj,\n      Transfers: newTransferObj,\n      Agendas: newAgendasObj,\n    };\n  };\n  submitEvent = (e) => {\n    e.preventDefault();\n    this.setState({\n      isSaving: !this.state.isSaving,\n    });\n    var eventFormData = new FormData();\n    eventFormData.append(\"name\", this.state.eventName);\n    eventFormData.append(\"liveFrom\", this.state.eventFrom);\n    eventFormData.append(\"liveTo\", this.state.eventFrom);\n    eventFormData.append(\"CustomerId\", this.state.eventBy);\n    eventFormData.append(\"PlackCardImage\", this.state.eventPlackCardImage);\n    eventFormData.append(\"desc\", this.state.welcomeNote);\n    eventFormData.append(\n      \"PlackCardImageName\",\n      this.state.eventPlackCardImageName\n    );\n    eventFormData.append(\"EventImage\", this.state.eventImage);\n    eventFormData.append(\"EventImageName\", this.state.eventImageName);\n    eventFormData.append(\"CityId\", this.state.cityId);\n    eventFormData.append(\"CountryId\", this.state.countryId);\n    eventFormData.append(\"url\", this.state.venueUrl);\n    eventFormData.append(\"venueName\", this.state.venueName);\n\n    if (this.state.eventId) {\n      //this is an update condition...\n      var EventId = this.state.eventId;\n      Axios.put(\"/events/update/\" + this.state.eventId, eventFormData).then(\n        (u) => {\n          var data = this.modifyDataWithEventId(EventId);\n          Axios.post(\"/events/upload-updated\", {\n            representatives: data.Representatives,\n            transfersData: data.Transfers,\n            attendeesData: data.Attendies,\n            agendasData: data.Agendas,\n            EventId: EventId,\n          }).then((a) => {\n            this.setState({\n              isSaving: !this.state.isSaving,\n            });\n          });\n        }\n      );\n    } else {\n      Axios.post(\"/events/create\", eventFormData).then((u) => {\n        if (u.data.status == \"success\") {\n          var EventId = u.data.EventId;\n          var data = this.modifyDataWithEventId(EventId);\n          Axios.post(\"/events/upload\", {\n            representatives: data.Representatives,\n            transfersData: data.Transfers,\n            attendeesData: data.Attendies,\n            agendasData: data.Agendas,\n            EventId: EventId,\n          }).then((u) => {\n            this.setState({\n              isSaving: !this.state.isSaving,\n            });\n          });\n        }\n      });\n    }\n  };\n  setCountryId = (id) => {\n    this.setState({\n      countryId: id,\n    });\n  };\n  setCityId = (id) => {\n    this.setState({\n      cityId: id,\n    });\n  };\n  setCustomerId = (id) => {\n    this.setState({\n      eventBy: id,\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Manage Events</CardTitle>\n                  <h5 className=\"card-category\">Create Event</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Event Name</label>\n                          <Input\n                            placeholder=\"Event Name\"\n                            type=\"text\"\n                            value={this.state.eventName}\n                            onChange={(e) => {\n                              this.setState({\n                                eventName: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Event By</label>\n                          <Autocomplete\n                            suggestions={this.state.sugggestionCustomers}\n                            hint={\"Customer Name\"}\n                            marginTop={\"0px\"}\n                            id={\"txtEventBy\"}\n                            paddingBottom={\"0px\"}\n                            ref={this.customerRef}\n                            setId={this.setCustomerId}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Event From</label>\n                          <Input\n                            type=\"date\"\n                            value={this.state.eventFrom}\n                            onChange={(e) => {\n                              this.setState({\n                                eventFrom: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Event To</label>\n                          <Input\n                            type=\"date\"\n                            value={this.state.eventTo}\n                            onChange={(e) => {\n                              this.setState({\n                                eventTo: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Venue Name</label>\n                          <Input\n                            placeholder=\"Full Name\"\n                            type=\"text\"\n                            value={this.state.venueName}\n                            onChange={(e) => {\n                              this.setState({\n                                venueName: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Venue Location Url</label>\n                          <Input\n                            placeholder=\"Url\"\n                            type=\"text\"\n                            value={this.state.venueUrl}\n                            onChange={(e) => {\n                              this.setState({\n                                venueUrl: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <label>Pick Pla Card Image</label>\n                        <div className=\"custom-file mb-2\">\n                          <Input\n                            type=\"file\"\n                            className=\"custom-file-input\"\n                            onChange={(e) => {\n                              this.setState({\n                                eventPlackCardImage: e.target.files[0],\n                                eventPlackCardImageName: e.target.files[0].name,\n                              });\n                            }}\n                          />\n                          <label\n                            className=\"custom-file-label\"\n                            htmlFor=\"customFileThumbanail\"\n                          >\n                            {this.state.eventPlackCardImageName}\n                          </label>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <label>Pick Event Image</label>\n                        <div className=\"custom-file mb-2\">\n                          <Input\n                            type=\"file\"\n                            className=\"custom-file-input\"\n                            onChange={(e) => {\n                              this.setState({\n                                eventImage: e.target.files[0],\n                                eventImageName: e.target.files[0].name,\n                              });\n                            }}\n                          />\n                          <label\n                            className=\"custom-file-label\"\n                            htmlFor=\"customFileThumbanail\"\n                          >\n                            {this.state.eventImageName}\n                          </label>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Country</label>\n                          <Autocomplete\n                            suggestions={this.state.suggestionCountries}\n                            hint={\"Country Name\"}\n                            marginTop={\"0px\"}\n                            id={\"txtCountrySuggest\"}\n                            ref={this.countryRef}\n                            setId={this.setCountryId}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>City</label>\n                          <Autocomplete\n                            suggestions={this.state.suggestionCities}\n                            hint={\"City Name\"}\n                            marginTop={\"0px\"}\n                            id={\"txtCitySuggest\"}\n                            ref={this.cityRef}\n                            setId={this.setCityId}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"12\">\n                        <label>Welcome Note</label>\n                        <Row>\n                          <Col md=\"12\">\n                            <Button\n                              color={this.state.isEditorOpen ? \"danger\" : \"\"}\n                              onClick={() => {\n                                if (this.state.isEditorOpen) {\n                                  this.setState({\n                                    welcomeNote: this.EditorRef.current.returnContent(),\n                                  });\n                                }\n                                this.setState({\n                                  isEditorOpen: !this.state.isEditorOpen,\n                                });\n                              }}\n                            >\n                              {this.state.isEditorOpen\n                                ? \"Close Editor\"\n                                : \"Open Editor\"}\n                            </Button>\n                          </Col>\n                        </Row>\n                        {this.state.isEditorOpen ? (\n                          <Editor\n                            ref={this.EditorRef}\n                            content={this.state.welcomeNote}\n                          />\n                        ) : null}\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Representatives</CardTitle>\n                  <h5 className=\"card-category\">Add Representatives</h5>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col md=\"6\">\n                      {this.state.createNewRepresentative ? (\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label>New Representative</label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Name\"\n                              value={this.state.representativeName}\n                              onChange={(e) => {\n                                this.setState({\n                                  representativeName: e.target.value,\n                                });\n                              }}\n                            ></Input>\n                          </FormGroup>\n                          <FormGroup>\n                            <label>Phone Number</label>\n                            <div\n                              style={{\n                                display: \"flex\",\n                              }}\n                            >\n                              <Input\n                                name=\"search\"\n                                className=\"form-control\"\n                                style={{\n                                  flex: \"2\",\n                                  marginTop: \"4px\",\n                                }}\n                                value={this.state.representativePhone}\n                                onChange={(e) => {\n                                  this.setState({\n                                    representativePhone: e.target.value,\n                                  });\n                                }}\n                                placeholder=\"Phone Number\"\n                              />\n                              <button\n                                disabled={!this.state.createdRepresentative}\n                                style={{\n                                  marginLeft: \"15px\",\n                                }}\n                                class=\"btn btn-success\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    createdRepresentative: !this.state\n                                      .createdRepresentative,\n                                  });\n                                  Axios.post(\n                                    \"/representative/employee/create\",\n                                    {\n                                      name: this.state.representativeName,\n                                      phone: this.state.representativePhone,\n                                    }\n                                  ).then((u) => {\n                                    if (u.data.message == \"success\") {\n                                      var temp = this.state.Representatives;\n                                      temp.push({\n                                        Name: this.state.representativeName,\n                                        Phone: this.state.representativePhone,\n                                        id: u.data.data,\n                                      });\n                                      this.setState({\n                                        createdRepresentative: !this.state\n                                          .createdRepresentative,\n                                        representativeName: \"\",\n                                        representativePhone: \"\",\n                                        createNewRepresentative: !this.state\n                                          .createNewRepresentative,\n                                        Representatives: temp,\n                                      });\n                                    }\n                                  });\n                                }}\n                              >\n                                {this.state.createdRepresentative\n                                  ? \"Save\"\n                                  : \"Saving...\"}\n                              </button>\n                              <button\n                                disabled={!this.state.createdRepresentative}\n                                style={{\n                                  marginLeft: \"15px\",\n                                  padding: \"11px\",\n                                }}\n                                class=\"btn btn-danger\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    representativeName: \"\",\n                                    representativePhone: \"\",\n                                    createNewRepresentative: !this.state\n                                      .createNewRepresentative,\n                                  });\n                                }}\n                              >\n                                <i className=\"tim-icons icon-simple-remove\" />\n                              </button>\n                            </div>\n                          </FormGroup>\n                        </Col>\n                      ) : (\n                        <Col md=\"12\" className=\"category-col\">\n                          <label>Representative Name</label>\n                          <form\n                            class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\n                            style={s26}\n                          >\n                            <div\n                              className=\"form-group d-inline mb-2\"\n                              style={{ flex: \"1\" }}\n                            >\n                              <AutocompleteSimple\n                                suggestions={this.state.Representatives}\n                                id={\"txtRepresentatveSuggest\"}\n                                categoryChipHit={this.categoryChipHit}\n                                ChipHitAfterRemoving={\n                                  this.representativesNameChipHitAfterRemoving\n                                }\n                                ref={this.RepresentativeNameAutocompleteRef}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <button\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    createNewRepresentative: !this.state\n                                      .createNewRepresentative,\n                                  });\n                                }}\n                                className=\"btn btn-success\"\n                                style={s50}\n                              >\n                                + New\n                              </button>\n                            </div>\n                          </form>\n                          <CategoryChips\n                            ref={this.representativeNameRef}\n                            removeId={this.categoryIdfromHiddenField}\n                          />\n                        </Col>\n                      )}\n                      {this.state.createNewRepresentativeCategory ? (\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label>New Representative Category</label>\n                            <div\n                              style={{\n                                display: \"flex\",\n                              }}\n                            >\n                              <Input\n                                name=\"search\"\n                                className=\"form-control\"\n                                value={this.state.representativeCategoryName}\n                                onChange={(e) => {\n                                  this.setState({\n                                    representativeCategoryName: e.target.value,\n                                  });\n                                }}\n                                style={{\n                                  flex: \"2\",\n                                  marginTop: \"4px\",\n                                }}\n                                placeholder=\"Category Name\"\n                              />\n                              <button\n                                style={{\n                                  marginLeft: \"15px\",\n                                }}\n                                disabled={\n                                  !this.state.createdNewRepresentativeCategory\n                                }\n                                class=\"btn btn-success\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    createdNewRepresentativeCategory: !this\n                                      .state.createdNewRepresentativeCategory,\n                                  });\n                                  Axios.post(\n                                    \"/representative/category/create\",\n                                    {\n                                      name: this.state\n                                        .representativeCategoryName,\n                                    }\n                                  ).then((u) => {\n                                    if (u.data.message == \"success\") {\n                                      var temp = this.state\n                                        .RepresentativesCategory;\n                                      temp.push({\n                                        Name: this.state\n                                          .representativeCategoryName,\n                                        id: u.data.data,\n                                      });\n                                      this.setState({\n                                        RepresentativesCategory: temp,\n                                        createdNewRepresentativeCategory: !this\n                                          .state\n                                          .createdNewRepresentativeCategory,\n                                        representativeCategoryName: \"\",\n                                        createNewRepresentativeCategory: !this\n                                          .state\n                                          .createNewRepresentativeCategory,\n                                      });\n                                    }\n                                  });\n                                }}\n                              >\n                                {this.state.createdNewRepresentativeCategory\n                                  ? \"Save\"\n                                  : \"Saving...\"}\n                              </button>\n                              <button\n                                style={{\n                                  marginLeft: \"15px\",\n                                  padding: \"11px\",\n                                }}\n                                class=\"btn btn-danger\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    representativeName: \"\",\n                                    representativePhone: \"\",\n                                    createNewRepresentativeCategory: !this.state\n                                      .createNewRepresentativeCategory,\n                                  });\n                                }}\n                              >\n                                <i className=\"tim-icons icon-simple-remove\" />\n                              </button>\n                            </div>\n                          </FormGroup>\n                        </Col>\n                      ) : (\n                        <Col md=\"12\" className=\"category-col\">\n                          <label>Representative Category</label>\n                          <form\n                            class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\n                            style={s26}\n                          >\n                            <div\n                              className=\"form-group d-inline mb-2\"\n                              style={{ flex: \"1\" }}\n                            >\n                              <AutocompleteSimple\n                                suggestions={this.state.RepresentativesCategory}\n                                id={\"txtRepresentatveCategorySuggest\"}\n                                categoryChipHit={this.categoryNameChipHit}\n                                ChipHitAfterRemoving={\n                                  this.categoryChipHitAfterRemoving\n                                }\n                                ref={this.RepresentativeCategoryAutocompleteRef}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <button\n                                class=\"btn btn-success\"\n                                type=\"button\"\n                                style={s50}\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    createNewRepresentativeCategory: !this.state\n                                      .createNewRepresentativeCategory,\n                                  });\n                                }}\n                              >\n                                + New\n                              </button>\n                            </div>\n                          </form>\n                          <CategoryChips\n                            ref={this.representativeCategoryRef}\n                            removeId={\n                              this.categoryIdfromHiddenField_CategoryName\n                            }\n                          />\n                        </Col>\n                      )}\n                    </Col>\n                    <Col md=\"6\">\n                      <Table className=\"tablesorter\" responsive>\n                        <thead className=\"text-primary\">\n                          <tr>\n                            <th>Representative Name</th>\n                            <th>Category</th>\n                            <th className=\"text-center\">Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.representativeArr.map((a) => (\n                            <tr>\n                              <td>{a.Name}</td>\n                              <td>{a.Category}</td>\n                              <td>\n                                <Row>\n                                  <Col\n                                    md=\"6\"\n                                    className=\"d-flex justify-content-center\"\n                                    style={{\n                                      padding: \"0px\",\n                                    }}\n                                    onClick={() => {\n                                      var temp = this.state.representativeArr;\n                                      const index = temp.indexOf(a);\n                                      if (index > -1) {\n                                        temp.splice(index, 1);\n                                      }\n                                      this.setState({\n                                        representativeArr: temp,\n                                      });\n                                    }}\n                                  >\n                                    <i\n                                      className=\"tim-icons icon-trash-simple hoverable-danger\"\n                                      style={{ cursor: \"pointer\" }}\n                                    />\n                                  </Col>\n                                  <Col\n                                    style={{\n                                      padding: \"0px\",\n                                    }}\n                                    md=\"6\"\n                                    className=\"d-flex justify-content-center\"\n                                    onClick={() => {\n                                      this.setState({\n                                        updatingRepresentatives: true,\n                                        updatingRepresentativesNameId:\n                                          a.EmployeeId,\n                                        updatingRepresentativesCategoryId:\n                                          a.RepresentativeCategoryId,\n                                      });\n                                      this.RepresentativeNameAutocompleteRef.current.addItemToUpdate(\n                                        { id: a.EmployeeId, name: a.Name }\n                                      );\n                                      this.RepresentativeCategoryAutocompleteRef.current.addItemToUpdate(\n                                        {\n                                          id: a.RepresentativeCategoryId,\n                                          name: a.Category,\n                                        }\n                                      );\n                                    }}\n                                  >\n                                    <i\n                                      className=\"tim-icons icon-pencil hoverable\"\n                                      style={{ cursor: \"pointer\" }}\n                                    />\n                                  </Col>\n                                </Row>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </Col>\n                  </Row>\n                  <Row className=\"justify-content-between\">\n                    <Col md=\"6\" xs=\"12\" className=\"d-flex justify-content-end\">\n                      <Button\n                        color=\"success\"\n                        className=\"md-auto\"\n                        disabled={!this.state.updatingRepresentatives}\n                        onClick={() => {\n                          this.representativeNameRef.current.removeAllChips();\n                          this.representativeCategoryRef.current.removeAllChips();\n\n                          //remove all ids form hidden inputs...\n                          this.RepresentativeNameAutocompleteRef.current.removeAllIds();\n                          this.RepresentativeCategoryAutocompleteRef.current.removeAllIds();\n                          this.setState({\n                            updatingRepresentatives: false,\n                            updatingRepresentativesNameId: null,\n                            updatingRepresentativesCategoryId: null,\n                          });\n                        }}\n                      >\n                        Cancel Update\n                      </Button>\n                      <Button\n                        color=\"success\"\n                        onClick={() => {\n                          if (\n                            document.getElementById(\"txtRepresentatveSuggest\")\n                              .value != \"\" &&\n                            document.getElementById(\n                              \"txtRepresentatveCategorySuggest\"\n                            ).value != \"\"\n                          ) {\n                            var representativesIds = document\n                              .getElementById(\"txtRepresentatveSuggest\")\n                              .value.split(\",\");\n                            var representativesCatIds = document\n                              .getElementById(\"txtRepresentatveCategorySuggest\")\n                              .value.split(\",\");\n                            var representativesArray = [];\n                            representativesIds.forEach((element) => {\n                              var representativeName = this.state.Representatives.filter(\n                                (a) => a.id == element\n                              )[0][\"Name\"];\n                              representativesCatIds.forEach((elementCatId) => {\n                                var obj = {};\n                                obj[\"Name\"] = representativeName;\n                                obj[\"EmployeeId\"] = element;\n                                obj[\"RepresentativeCategoryId\"] = elementCatId;\n                                obj[\n                                  \"Category\"\n                                ] = this.state.RepresentativesCategory.filter(\n                                  (a) => a.id == elementCatId\n                                )[0][\"Name\"];\n                                representativesArray.push(obj);\n                              });\n                            });\n                            var tempArr = this.state.representativeArr;\n                            var newArr = tempArr.concat(representativesArray);\n                            var unique = [];\n                            var distinct = [];\n                            for (let i = 0; i < newArr.length; i++) {\n                              if (\n                                !unique[\n                                  newArr[i].EmployeeId +\n                                    \",\" +\n                                    newArr[i].RepresentativeCategoryId\n                                ]\n                              ) {\n                                distinct.push({\n                                  Name: newArr[i].Name,\n                                  Category: newArr[i].Category,\n                                  EmployeeId: newArr[i].EmployeeId,\n                                  RepresentativeCategoryId:\n                                    newArr[i].RepresentativeCategoryId,\n                                  id: newArr[i].id,\n                                });\n                                unique[\n                                  newArr[i].EmployeeId +\n                                    \",\" +\n                                    newArr[i].RepresentativeCategoryId\n                                ] = 1;\n                              }\n                            }\n                            console.log(distinct);\n                            var index = distinct.indexOf(\n                              distinct.filter(\n                                (a) =>\n                                  a.EmployeeId ==\n                                    this.state.updatingRepresentativesNameId &&\n                                  a.RepresentativeCategoryId ==\n                                    this.state.updatingRepresentativesCategoryId\n                              )[0]\n                            );\n                            if (index > -1) {\n                              distinct.splice(index, 1);\n                            }\n                            this.setState({\n                              representativeArr: distinct,\n                              updatingRepresentativesNameId: null,\n                              updatingRepresentativesCategoryId: null,\n                              updatingRepresentatives: !this.state\n                                .updatingRepresentatives,\n                            });\n                            this.representativeNameRef.current.removeAllChips();\n                            this.representativeCategoryRef.current.removeAllChips();\n\n                            //remove all ids form hidden inputs...\n                            this.RepresentativeNameAutocompleteRef.current.removeAllIds();\n                            this.RepresentativeCategoryAutocompleteRef.current.removeAllIds();\n                          }\n                        }}\n                      >\n                        Add\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Attendies</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col md=\"6\">\n                        <Row>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label>Attendee Full Name</label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                id=\"AttendiesName\"\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label>Attendee Phone</label>\n                              <Input\n                                type=\"number\"\n                                placeholder=\"Phone\"\n                                id=\"AttendiesPhone\"\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label>Attendee Email</label>\n                              <Input\n                                type=\"email\"\n                                placeholder=\"Email\"\n                                id=\"AttendiesEmail\"\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label>Attendee Location</label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Location\"\n                                id=\"AttendiesLocation\"\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <Col md=\"12\" className=\"category-col\">\n                              <label>Arriving Ticket</label>\n                              <FormGroup>\n                                <Row>\n                                  <Col md=\"6\">\n                                    <Input\n                                      type=\"text\"\n                                      placeholder=\"Ticket From\"\n                                      id=\"Arr_ticketFrom\"\n                                    ></Input>\n                                  </Col>\n                                  <Col md=\"6\">\n                                    <Input\n                                      type=\"text\"\n                                      placeholder=\"Ticket To\"\n                                      id=\"Arr_ticketTo\"\n                                    ></Input>\n                                  </Col>\n                                </Row>\n                              </FormGroup>\n                              <FormGroup>\n                                <Row>\n                                  <Col md=\"12\">\n                                    <div className=\"custom-file mb-2\">\n                                      <Input\n                                        type=\"file\"\n                                        className=\"custom-file-input\"\n                                        id=\"ticket-file-from\"\n                                        onChange={(e) => {\n                                          this.setState({\n                                            aTicketFileName:\n                                              e.target.files[0].name,\n                                          });\n                                        }}\n                                      />\n                                      <label\n                                        className=\"custom-file-label\"\n                                        htmlFor=\"customFileThumbanail\"\n                                      >\n                                        {this.state.aTicketFileName}\n                                      </label>\n                                    </div>\n                                  </Col>\n                                </Row>\n                              </FormGroup>\n                            </Col>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label class=\"checkbox\">\n                                <input\n                                  type=\"checkbox\"\n                                  id=\"SameTicketChkId\"\n                                  onChange={() => {\n                                    this.setState({\n                                      TicketsSame: !this.state.TicketsSame,\n                                    });\n                                  }}\n                                  style={{\n                                    marginRight: \"8px\",\n                                  }}\n                                />\n                                Same Ticket as Arriving Ticket\n                              </label>\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <fieldset disabled={this.state.TicketsSame}>\n                              <Col md=\"12\" className=\"category-col\">\n                                <label>\n                                  Departing Ticket\n                                  {this.state.TicketsSame ? \" - Disabled\" : \"\"}\n                                </label>\n                                <FormGroup>\n                                  <Row>\n                                    <Col md=\"6\">\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Ticket From\"\n                                        id=\"Dep_ticketFrom\"\n                                      ></Input>\n                                    </Col>\n                                    <Col md=\"6\">\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Ticket To\"\n                                        id=\"Dep_ticketTo\"\n                                      ></Input>\n                                    </Col>\n                                  </Row>\n                                </FormGroup>\n                                <FormGroup>\n                                  <Row>\n                                    <Col md=\"12\">\n                                      <div className=\"custom-file mb-2\">\n                                        <Input\n                                          type=\"file\"\n                                          className=\"custom-file-input\"\n                                          id=\"ticket-file-to\"\n                                          onChange={(e) => {\n                                            this.setState({\n                                              dTicketFileName:\n                                                e.target.files[0].name,\n                                            });\n                                          }}\n                                        />\n                                        <label\n                                          className=\"custom-file-label\"\n                                          htmlFor=\"customFileThumbanail\"\n                                        >\n                                          {this.state.dTicketFileName}\n                                        </label>\n                                      </div>\n                                    </Col>\n                                  </Row>\n                                </FormGroup>\n                              </Col>\n                            </fieldset>\n                          </Col>\n                          <Col md=\"12\" className=\"d-flex justify-content-end\">\n                            <Button\n                              color=\"success\"\n                              className=\"md-auto\"\n                              disabled={!this.state.updatingAttendee}\n                              onClick={() => {\n                                document.getElementById(\"AttendiesName\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"AttendiesPhone\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"AttendiesEmail\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"AttendiesLocation\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"Arr_ticketFrom\"\n                                ).value = \"\";\n                                document.getElementById(\"Arr_ticketTo\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"Dep_ticketFrom\"\n                                ).value = \"\";\n                                document.getElementById(\"Dep_ticketTo\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"SameTicketChkId\"\n                                ).checked = false;\n                                this.setState({\n                                  TicketsSame: false,\n                                  aTicketFileName: \"Choose Ticket File\",\n                                  dTicketFileName: \"Choose Ticket File\",\n                                  updatingAttendee: false,\n                                  updatingAttendeePhone: null,\n                                });\n                              }}\n                            >\n                              Cancel Update\n                            </Button>\n                            <Button\n                              color=\"success\"\n                              className=\"md-auto\"\n                              onClick={() => {\n                                this.setState({\n                                  addedAttendie: !this.state.addedAttendie,\n                                });\n                                var newAttendieObj = {};\n                                newAttendieObj[\n                                  \"name\"\n                                ] = document.getElementById(\n                                  \"AttendiesName\"\n                                ).value;\n\n                                newAttendieObj[\n                                  \"phone\"\n                                ] = document.getElementById(\n                                  \"AttendiesPhone\"\n                                ).value;\n\n                                newAttendieObj[\n                                  \"email\"\n                                ] = document.getElementById(\n                                  \"AttendiesEmail\"\n                                ).value;\n\n                                newAttendieObj[\n                                  \"location\"\n                                ] = document.getElementById(\n                                  \"AttendiesLocation\"\n                                ).value;\n                                newAttendieObj[\n                                  \"aTicketFrom\"\n                                ] = document.getElementById(\n                                  \"Arr_ticketFrom\"\n                                ).value;\n\n                                newAttendieObj[\n                                  \"aTicketTo\"\n                                ] = document.getElementById(\n                                  \"Arr_ticketTo\"\n                                ).value;\n                                newAttendieObj[\"isSameAsArriving\"] = this.state\n                                  .TicketsSame\n                                  ? true\n                                  : false;\n                                newAttendieObj[\n                                  \"aticket\"\n                                ] = this.state.aTicketFileName;\n                                newAttendieObj[\n                                  \"dticket\"\n                                ] = this.state.dTicketFileName;\n                                //converting files to base64...\n                                let fileToLoad = document.getElementById(\n                                  \"ticket-file-from\"\n                                ).files[0];\n                                let fileone = null;\n                                let fileReader = new FileReader();\n                                fileReader.onload = function (fileLoadedEvent) {\n                                  fileone = fileLoadedEvent.target.result;\n                                  newAttendieObj[\"ticketFileFrom\"] = fileone;\n                                };\n                                if (fileToLoad) {\n                                  fileReader.readAsDataURL(fileToLoad);\n                                }\n\n                                //second file...\n                                let filetwo = null;\n                                if (!this.state.TicketsSame) {\n                                  newAttendieObj[\n                                    \"dTicketFrom\"\n                                  ] = document.getElementById(\n                                    \"Dep_ticketFrom\"\n                                  ).value;\n                                  newAttendieObj[\n                                    \"dTicketTo\"\n                                  ] = document.getElementById(\n                                    \"Dep_ticketTo\"\n                                  ).value;\n                                  let fileToLoadSecond = document.getElementById(\n                                    \"ticket-file-to\"\n                                  ).files[0];\n                                  let fileReadertwo = new FileReader();\n                                  fileReadertwo.onload = function (\n                                    fileLoadedEvent1\n                                  ) {\n                                    filetwo = fileLoadedEvent1.target.result;\n                                    newAttendieObj[\"ticketFileTo\"] = filetwo;\n                                  };\n                                  fileReadertwo.readAsDataURL(fileToLoadSecond);\n                                }\n                                var Ea = this.state.EventAttendies;\n                                if (this.state.updatingAttendeePhone) {\n                                  var index = Ea.indexOf(\n                                    Ea.filter(\n                                      (a) =>\n                                        a.phone ==\n                                        this.state.updatingAttendeePhone\n                                    )[0]\n                                  );\n                                  if (index > -1) {\n                                    Ea.splice(index, 1);\n                                  }\n                                  newAttendieObj.id = this.state.updatingAttendeeId;\n                                  Ea.push(newAttendieObj);\n                                  console.log(Ea);\n                                } else {\n                                  Ea.push(newAttendieObj);\n                                }\n                                //reseting the state...\n                                this.setState({\n                                  EventAttendies: Ea,\n                                  addedAttendie: !this.state.addedAttendie,\n                                  TicketsSame: false,\n                                  aTicketFileName: \"Choose Ticket File\",\n                                  dTicketFileName: \"Choose Ticket File\",\n                                  updatingAttendee: false,\n                                  updatingAttendeePhone: null,\n                                });\n                                document.getElementById(\"AttendiesName\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"AttendiesPhone\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"AttendiesEmail\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"AttendiesLocation\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"Arr_ticketFrom\"\n                                ).value = \"\";\n                                document.getElementById(\"Arr_ticketTo\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"Dep_ticketFrom\"\n                                ).value = \"\";\n                                document.getElementById(\"Dep_ticketTo\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"SameTicketChkId\"\n                                ).checked = false;\n                              }}\n                            >\n                              Add\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Col>\n                      <Col md=\"6\">\n                        <Table className=\"tablesorter\" responsive>\n                          <thead className=\"text-primary\">\n                            <tr>\n                              <th>Attendee Name</th>\n                              <th>Attendee Phone</th>\n                              <th className=\"text-center\">Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.state.EventAttendies.map((element) => (\n                              <tr\n                                style={{\n                                  backgroundColor: this.haveAnythingEmpty(\n                                    element\n                                  )\n                                    ? \"#0000005e\"\n                                    : \"transparent\",\n                                }}\n                              >\n                                <td>{element[\"name\"]}</td>\n                                <td>{element[\"phone\"]}</td>\n                                <td>\n                                  <Row>\n                                    <Col\n                                      md=\"6\"\n                                      style={{\n                                        padding: \"0px\",\n                                      }}\n                                      className=\"d-flex justify-content-center\"\n                                      onClick={() => {\n                                        var temp = this.state.EventAttendies;\n                                        var index = temp.indexOf(element);\n                                        if (index > -1) {\n                                          temp.splice(index, 1);\n                                        }\n                                        this.setState({\n                                          EventAttendies: temp,\n                                        });\n                                      }}\n                                    >\n                                      <i className=\"tim-icons icon-trash-simple hoverable-danger\" />\n                                    </Col>\n                                    <Col\n                                      md=\"6\"\n                                      style={{\n                                        padding: \"0px\",\n                                      }}\n                                      className=\"d-flex justify-content-center\"\n                                      onClick={() => {\n                                        this.setState({\n                                          updatingAttendeePhone: element.phone,\n                                        });\n                                        document.getElementById(\n                                          \"AttendiesName\"\n                                        ).value = element[\"name\"];\n                                        document.getElementById(\n                                          \"AttendiesPhone\"\n                                        ).value = element[\"phone\"];\n                                        document.getElementById(\n                                          \"AttendiesEmail\"\n                                        ).value = element[\"email\"];\n                                        document.getElementById(\n                                          \"AttendiesLocation\"\n                                        ).value = element[\"location\"];\n                                        document.getElementById(\n                                          \"Arr_ticketFrom\"\n                                        ).value = element[\"aTicketFrom\"];\n                                        document.getElementById(\n                                          \"Arr_ticketTo\"\n                                        ).value = element[\"aTicketTo\"];\n                                        document.getElementById(\n                                          \"Dep_ticketFrom\"\n                                        ).value = element[\"dTicketFrom\"] || \"\";\n                                        document.getElementById(\n                                          \"Dep_ticketTo\"\n                                        ).value = element[\"dTicketTo\"] || \"\";\n                                        document.getElementById(\n                                          \"SameTicketChkId\"\n                                        ).checked =\n                                          element[\"dTicketFrom\"] == null;\n                                        this.setState({\n                                          updatingAttendee: true,\n                                          TicketsSame:\n                                            element[\"dTicketFrom\"] == null,\n                                          aTicketFileName: element[\n                                            \"aticket\"\n                                          ].split(\"/\")[\n                                            element[\"aticket\"].split(\"/\")\n                                              .length - 1\n                                          ],\n                                          dTicketFileName:\n                                            element[\"dticket\"]?.split(\"/\")[\n                                              element[\"dticket\"].split(\"/\")\n                                                .length - 1\n                                            ] || \"Choose Ticket File\",\n                                        });\n                                      }}\n                                    >\n                                      <i className=\"tim-icons icon-pencil hoverable\" />\n                                    </Col>\n                                  </Row>\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </Table>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Transfers</CardTitle>\n                  <Row className=\"justify-content-between\">\n                    <Col md=\"4\" xs=\"4\" className=\"d-flex align-items-center\">\n                      <h5 className=\"card-category\">Create Transfers</h5>\n                    </Col>\n                    <Col md=\"4\" xs=\"8\" className=\"d-flex justify-content-end\">\n                      <Button\n                        color=\"success\"\n                        onClick={() => this.createNewTransfer()}\n                        disabled={!this.state.rIsFilled}\n                      >\n                        Create New\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      {this.state.transfers.map((element) =>\n                        element.isFilled ? null : element.component\n                      )}\n                    </Row>\n                    <Row className=\"justify-content-between\">\n                      {this.state.rIsFilled ? null : (\n                        <Col\n                          md=\"12\"\n                          xs=\"12\"\n                          className=\"d-flex justify-content-end\"\n                        >\n                          <Button\n                            color=\"warning\"\n                            onClick={() => {\n                              var temp = this.state.transfers;\n                              temp.forEach((element) => {\n                                var index;\n                                if (!element.isFilled) {\n                                  if (!element.data.id) {\n                                    index = temp.indexOf(element);\n                                  }\n                                  element.isFilled = !element.isFilled;\n                                }\n                                if (index > -1) {\n                                  temp.splice(index, 1);\n                                }\n                                this.setState({\n                                  transfers: temp,\n                                  rIsFilled: !this.state.rIsFilled,\n                                });\n                              });\n                            }}\n                          >\n                            Cancel\n                          </Button>\n                          <Button\n                            color=\"success\"\n                            onClick={() => {\n                              var tempTransfers = this.state.transfers;\n                              tempTransfers.forEach((element) => {\n                                if (!element.isFilled) {\n                                  element.data = element.ref.current.returnState();\n                                  element.isFilled = !element.isFilled;\n                                }\n                              });\n                              this.setState({\n                                transfers: tempTransfers,\n                                rIsFilled: !this.state.rIsFilled,\n                              });\n                            }}\n                          >\n                            Save\n                          </Button>\n                        </Col>\n                      )}\n                    </Row>\n                    <Row>\n                      <Col md=\"12\">\n                        <Table className=\"tablesorter\" responsive>\n                          <thead className=\"text-primary\">\n                            <tr>\n                              <th>Transfer Name</th>\n                              <th>Date</th>\n                              <th>Origin</th>\n                              <th>Destination</th>\n                              <th className=\"text-center\">Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.state.transfers.map((element) =>\n                              element.isFilled ? (\n                                <tr>\n                                  <td>{element.data.name}</td>\n                                  <td>{element.data.transferDate}</td>\n                                  <td>{element.data.origin}</td>\n                                  <td>{element.data.destination}</td>\n                                  <td>\n                                    <Row>\n                                      <Col\n                                        md=\"6\"\n                                        className=\"d-flex justify-content-center\"\n                                        style={{\n                                          padding: \"0px\",\n                                        }}\n                                        onClick={() => {\n                                          var temp = this.state.transfers;\n                                          var index = temp.indexOf(element);\n                                          if (index > -1) {\n                                            temp.splice(index, 1);\n                                          }\n                                          this.setState({\n                                            transfers: temp,\n                                          });\n                                        }}\n                                      >\n                                        <i className=\"tim-icons icon-trash-simple hoverable-danger\" />\n                                      </Col>\n                                      <Col\n                                        md=\"6\"\n                                        style={{\n                                          padding: \"0px\",\n                                        }}\n                                        className=\"d-flex justify-content-center\"\n                                        onClick={() => {\n                                          var temp = this.state.transfers;\n                                          var index = temp.indexOf(element);\n                                          temp[index].isFilled = false;\n                                          // temp[index].ref.current.setData(element.data)\n                                          this.setState(\n                                            {\n                                              rIsFilled: !this.state.rIsFilled,\n                                              transfers: temp,\n                                            },\n                                            () => {\n                                              temp[index].ref.current.setData(\n                                                element.data\n                                              );\n                                            }\n                                          );\n                                        }}\n                                      >\n                                        <i className=\"tim-icons icon-pencil hoverable\" />\n                                      </Col>\n                                    </Row>\n                                  </td>\n                                </tr>\n                              ) : null\n                            )}\n                          </tbody>\n                        </Table>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Agendas</CardTitle>\n                  <h5 className=\"card-category\">Create Agendas</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col md=\"6\">\n                        <Agendas ref={this.agendaRef} />\n                        <Col md=\"12\" className=\"d-flex justify-content-end\">\n                          <Button\n                            color=\"success\"\n                            className=\"md-auto\"\n                            disabled={!this.state.updatingAgenda}\n                            onClick={() => {\n                              this.agendaRef.current.resetState();\n                              this.setState({\n                                updatingAgenda: false,\n                                updatingAgendaObject: null,\n                              });\n                            }}\n                          >\n                            Cancel Update\n                          </Button>\n                          <Button\n                            color=\"success\"\n                            className=\"md-auto\"\n                            onClick={() => {\n                              var data = this.state.agendas;\n                              if (this.state.updatingAgendaObject) {\n                                var index = data.indexOf(\n                                  this.state.updatingAgendaObject\n                                );\n                                console.log(index);\n                                if (index > -1) {\n                                  data.splice(index, 1);\n                                }\n                              }\n                              data.push(this.agendaRef.current.returnState());\n                              this.setState(\n                                {\n                                  agendas: data,\n                                  updatingAgendaObject: null,\n                                },\n                                () => {\n                                  this.agendaRef.current.resetState();\n                                }\n                              );\n                            }}\n                          >\n                            Add\n                          </Button>\n                        </Col>\n                      </Col>\n                      <Col md=\"6\">\n                        <Table className=\"tablesorter\" responsive>\n                          <thead className=\"text-primary\">\n                            <tr>\n                              <th>Agenda Name</th>\n                              <th>Start</th>\n                              <th>End</th>\n                              <th>Venue</th>\n                              <th className=\"text-center\">Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.state.agendas.map((element) => (\n                              <tr>\n                                <td>{element.name}</td>\n                                <td>\n                                  {new Date(element.startTime).toDateString() +\n                                    \" \" +\n                                    new Date(element.startTime).toLocaleString(\n                                      \"en-US\",\n                                      {\n                                        hour: \"numeric\",\n                                        minute: \"numeric\",\n                                        hour12: true,\n                                      }\n                                    )}\n                                </td>\n                                <td>\n                                  {new Date(element.endTime).toDateString() +\n                                    \" \" +\n                                    new Date(element.endTime).toLocaleString(\n                                      \"en-US\",\n                                      {\n                                        hour: \"numeric\",\n                                        minute: \"numeric\",\n                                        hour12: true,\n                                      }\n                                    ) || \"Onwards\"}\n                                </td>\n                                <td>{element.venue}</td>\n                                <td>\n                                  <Row>\n                                    <Col\n                                      md=\"6\"\n                                      className=\"d-flex justify-content-center\"\n                                      style={{\n                                        padding: \"0px\",\n                                      }}\n                                      onClick={() => {\n                                        var temp = this.state.agendas;\n                                        var index = temp.indexOf(element);\n                                        if (index > -1) {\n                                          temp.splice(index, 1);\n                                        }\n                                        this.setState({\n                                          agendas: temp,\n                                        });\n                                      }}\n                                    >\n                                      <i className=\"tim-icons icon-trash-simple hoverable-danger\" />\n                                    </Col>\n                                    <Col\n                                      md=\"6\"\n                                      style={{\n                                        padding: \"0px\",\n                                      }}\n                                      onClick={() => {\n                                        this.agendaRef.current.setData(element);\n                                        this.setState({\n                                          updatingAgenda: true,\n                                          updatingAgendaObject: element,\n                                        });\n                                      }}\n                                      className=\"d-flex justify-content-center\"\n                                    >\n                                      <i className=\"tim-icons icon-pencil hoverable\" />\n                                    </Col>\n                                  </Row>\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </Table>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\" className=\"d-flex justify-content-end\">\n              <Button\n                color=\"success\"\n                style={{\n                  padding: \"18px\",\n                  paddingRight: \"38px\",\n                  paddingLeft: \"38px\",\n                }}\n                disabled={this.state.isSaving}\n                onClick={(e) => this.submitEvent(e)}\n              >\n                {this.state.isSaving ? \"Saving...\" : \"Save Event\"}\n              </Button>\n            </Col>\n          </Row>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ManageEvents;\n","import React, { useState, useMemo, useCallback, useEffect, forwardRef, useImperativeHandle } from \"react\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport Axios from \"./axios\";\nimport swal from \"sweetalert\";\nimport {\n  Button\n} from \"reactstrap\";\n\nconst MyComponentHook = forwardRef((props,ref) => {\n  const [overlayLoader, setOverlayLoader] = useState(false);\n  const [progress, setProgress] = useState(true);\n  const [data, setData] = useState([]);\n  createTheme(\"solarized\", {\n    text: {\n      primary: \"#ffffff\",\n      secondary: \"#9A9A9A\",\n    },\n    background: {\n      default: \"#27293d\",\n    },\n    action: {\n      button: \"rgba(0,0,0,.54)\",\n      hover: \"rgba(0,0,0,.08)\",\n      disabled: \"rgba(0,0,0,.12)\",\n    },\n  });\n  const getData = () => {\n    Axios.get(\"/location/get-all\").then((u) => {\n      setData(\n        u.data.map((a) => {\n          var obj = {};\n          obj[\"id\"] = a.id\n          obj[\"Name\"] = a.name;\n          obj[\"City\"] = a.Cities.name;\n          obj[\"Country\"] = a.Cities.Countries.name;\n          obj[\"Image\"] = a.image;\n          obj[\"desc\"] = a.desc;\n          return obj;\n        })\n      );\n      setProgress(false);\n    });\n  }\n  \n  useEffect(() => {\n    getData()\n  }, []);\n\n  const handleDeleteAction = (value) => {\n    console.log(value);\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this content!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        var arr = data.filter((item) => item.id !== value.id);\n        console.log(arr)\n        setData(arr);\n        await Axios.delete(\"/location/delete/\" + value.id);\n        swal(\"Poof! Your content has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your content is safe!\");\n      }\n    });\n  };\n  const handleEditAction = (value) => {\n    props.setDataInParent(value)\n  };\n  useImperativeHandle(ref, () => ({\n    resetTable: () => {\n      getData();\n    },\n  }));\n\n  const updateState = useCallback((state) => console.log(state));\n  const columns = useMemo(() => [\n    {\n      name: \"Name\",\n      selector: \"Name\",\n    },\n    {\n      name: \"City\",\n      selector: \"City\",\n    },\n    {\n      cell: (row) => <img src={row.Image} alt=\"location image\" />,\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Image\",\n      selector: \"Image\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleEditAction(row)}\n        >\n          <i className=\"tim-icons icon-pencil\" />\n        </Button>\n      ),\n      button: true,\n      name: \"Edit\",\n      selector: \"edit\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-danger\"\n          onClick={() => handleDeleteAction(row)}\n        >\n          <i className=\"tim-icons icon-trash-simple\" />\n        </Button>\n      ),\n      button: true,\n      name: \"Delete\",\n      selector: \"delete\",\n    },\n  ]);\n\n  return (\n    <>\n      <div\n        className=\"loading-overlay\"\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\n      >\n        <div class=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n        Loading...\n      </div>\n      <DataTable\n        data={data}\n        columns={columns}\n        theme=\"solarized\"\n        onSelectedRowsChange={updateState}\n        pagination={true}\n        progressPending={progress}\n        progressComponent={<h2>Hang on...😊</h2>}\n      />\n    </>\n  );\n});\n\nexport default MyComponentHook;\n","import React, { Component, createRef } from \"react\";\nimport Autocomplete from \"../components/sub/autosuggest-norm\";\nimport swal from \"sweetalert\";\nimport {\n  Button,\n  Input,\n  FormGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Label,\n} from \"reactstrap\";\nimport Axios from \"../components/sub/axios\";\nimport MyComponentHook from \"components/sub/cities&countriesTable\";\n\nconst s26 = {\n  width: \"100%\",\n};\n\nconst s50 = {\n  marginLeft: \"15px\",\n  marginTop: \"14px\",\n};\n\nexport default class CitiesCountries extends Component {\n  constructor(props) {\n    super(props);\n    this.cityModalRef = createRef();\n    this.tableRef = createRef();\n    this._countryRef = createRef();\n    this._cityRef = createRef();\n    this.state = {\n      createdLocation: true,\n      locationName: \"\",\n      locationImageFile: null,\n      locationImageName: \"Choose Image File\",\n      locationDesc: \"\",\n      isAnUpdate: false,\n\n      createdCity: true,\n      createdCountry: true,\n      modalCountryCreated: true,\n      countryName: \"\",\n\n      cityFile: null,\n      cityFileName: \"Choose New File\",\n      cityName: \"\",\n      suggestionCountries: [],\n      suggestionCity: [],\n      locationId: null,\n    };\n  }\n  componentWillMount = () => {\n    Promise.all([\n      Axios.get(\"/location/country/get-all\"),\n      Axios.get(\"/location/city/get-all\"),\n    ]).then(([u, a]) => {\n      this.setState({\n        suggestionCountries: u.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n        suggestionCity: a.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n      });\n    });\n  };\n  setDataToFields = (data) => {\n    this.setState({\n      locationName: data.Name,\n      locationDesc: data.desc,\n      isAnUpdate: !this.state.isAnUpdate,\n      locationId: data.id,\n    });\n    this._cityRef.current.setData(data.City);\n    this._countryRef.current.setData(data.Country);\n  };\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.createdCountry ? null : (\n          <div className=\"Modal-Root\">\n            <div\n              className=\"Country-Modal\"\n              style={{\n                backgroundColor: \"#27293d\",\n              }}\n            >\n              <Col md=\"12\">\n                <Row>\n                  <Col md=\"12\">\n                    <h3\n                      style={{\n                        paddingTop: \"18px\",\n                      }}\n                    >\n                      Create New Country\n                    </h3>\n                  </Col>\n                  <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\n                    <Label>Country Name</Label>\n                    <Input\n                      type=\"text\"\n                      value={this.state.countryName}\n                      onChange={(e) => {\n                        this.setState({\n                          countryName: e.target.value,\n                        });\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"justify-content-between\">\n                  <Col\n                    md=\"12\"\n                    xs=\"12\"\n                    className=\"d-flex justify-content-end\"\n                    style={{ padding: \"18px\" }}\n                  >\n                    <Button\n                      color=\"warning\"\n                      onClick={() => {\n                        this.setState({\n                          createdCountry: !this.state.createdCountry,\n                          countryName: \"\",\n                        });\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      color=\"success\"\n                      disabled={!this.state.modalCountryCreated}\n                      onClick={(e) => {\n                        this.setState({\n                          modalCountryCreated: !this.state.modalCountryCreated,\n                        });\n                        var formdata = new FormData();\n                        formdata.append(\"name\", this.state.countryName);\n                        Axios.post(\"/location/country/create\", formdata).then(\n                          (u) => {\n                            if (u.data.status == \"success\") {\n                              var temp = this.state.suggestionCountries;\n                              temp.push({\n                                id: u.data.data,\n                                Name: this.state.countryName,\n                              });\n                              this.setState({\n                                suggestionCountries: temp,\n                                createdCountry: !this.state.createdCountry,\n                                countryName: \"\",\n                                modalCountryCreated: !this.state\n                                  .modalCountryCreated,\n                              });\n                            }\n                          }\n                        );\n                      }}\n                    >\n                      {this.state.modalCountryCreated ? \"Save\" : \"Saving...\"}\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n            </div>\n          </div>\n        )}\n        {this.state.createdCity ? null : (\n          <div className=\"Modal-Root\">\n            <div\n              className=\"Country-Modal\"\n              style={{\n                backgroundColor: \"#27293d\",\n                padding: \"19px\",\n              }}\n            >\n              <Row>\n                <Col md=\"12\">\n                  <h3\n                    style={{\n                      paddingTop: \"18px\",\n                    }}\n                  >\n                    Create New City\n                  </h3>\n                </Col>\n                <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\n                  <div className=\"form-group d-inline mb-2\">\n                    <Autocomplete\n                      suggestions={this.state.suggestionCountries}\n                      id={\"category-suggest\"}\n                      hint={\"Country Name\"}\n                      className=\"suggestions-in-container\"\n                      ref={this.cityModalRef}\n                    />\n                  </div>\n                </Col>\n                <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\n                  <Label>City Name</Label>\n                  <Input\n                    type=\"text\"\n                    value={this.state.cityName}\n                    placeholder=\"City Name\"\n                    onChange={(e) => {\n                      this.setState({\n                        cityName: e.target.value,\n                      });\n                    }}\n                  />\n                </Col>\n                <Col md=\"12\">\n                  <Label>City Image</Label>\n                  <div className=\"custom-file mb-2\">\n                    <Input\n                      type=\"file\"\n                      className=\"custom-file-input\"\n                      id=\"ticket-file\"\n                      onChange={(e) => {\n                        this.setState({\n                          cityFile: e.target.files[0],\n                          cityFileName: e.target.files[0].name,\n                        });\n                      }}\n                    />\n                    <label\n                      className=\"custom-file-label\"\n                      htmlFor=\"customFileThumbanail\"\n                    >\n                      {this.state.cityFileName}\n                    </label>\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-between\">\n                <Col\n                  md=\"12\"\n                  xs=\"12\"\n                  className=\"d-flex justify-content-end\"\n                  style={{ padding: \"18px\" }}\n                >\n                  <Button\n                    color=\"warning\"\n                    onClick={() => {\n                      this.setState({\n                        createdCity: !this.state.createdCity,\n                        modalCountryCreated: !this.state.modalCountryCreated,\n                        cityFile: null,\n                        cityFileName: \"Choose New File\",\n                        cityName: \"\",\n                      });\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    color=\"success\"\n                    disabled={!this.state.modalCountryCreated}\n                    onClick={(e) => {\n                      this.setState({\n                        modalCountryCreated: !this.state.modalCountryCreated,\n                      });\n                      var formdata = new FormData();\n                      formdata.append(\n                        \"countryId\",\n                        this.cityModalRef.current.returnId()\n                      );\n                      formdata.append(\"name\", this.state.cityName);\n                      formdata.append(\"image\", this.state.cityFile);\n                      Axios.post(\"/location/city/create\", formdata).then(\n                        (u) => {\n                          if (u.data.status == \"success\") {\n                            var temp = this.state.suggestionCity;\n                            console.log(u)\n                            temp.push({\n                              id: u.data.data,\n                              Name: this.state.cityName,\n                            });\n                            console.log(temp)\n                            this.setState({\n                              createdCity: !this.state.createdCity,\n                              suggestionCountries: temp,\n                              cityFile: null,\n                              cityFileName: \"Choose New File\",\n                              cityName: \"\",\n                              modalCountryCreated: !this.state\n                                .modalCountryCreated,\n                            });\n                          }\n                        }\n                      );\n                    }}\n                  >\n                    {this.state.modalCountryCreated ? \"Save\" : \"Saving...\"}\n                  </Button>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        )}\n        <div className=\"content\">\n          <Row>\n            <Card>\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <CardTitle tag=\"h2\">Manage City Attractions</CardTitle>\n                    <h5 className=\"card-category\">create city attractions</h5>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col md=\"6\">\n                    <div\n                      class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\n                      style={s26}\n                    >\n                      <div\n                        className=\"form-group d-inline mb-2\"\n                        style={{ flex: \"1\" }}\n                      >\n                        <Autocomplete\n                          suggestions={this.state.suggestionCountries}\n                          id={\"category-suggest\"}\n                          categoryChipHit={this.categoryChipHit}\n                          ref={this._countryRef}\n                          hint={\"Country Name\"}\n                        />\n                      </div>\n                      <div class=\"form-group\">\n                        <button\n                          onClick={(e) => {\n                            e.preventDefault();\n                            this.setState({\n                              createdCountry: !this.state.createdCountry,\n                            });\n                          }}\n                          className=\"btn btn-success\"\n                          style={s50}\n                        >\n                          New\n                        </button>\n                      </div>\n                    </div>\n                  </Col>\n                  <Col md=\"6\">\n                    <div\n                      class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\n                      style={s26}\n                    >\n                      <div\n                        className=\"form-group d-inline mb-2\"\n                        style={{ flex: \"1\" }}\n                      >\n                        <Autocomplete\n                          suggestions={this.state.suggestionCity}\n                          id={\"category-suggest\"}\n                          ref={this._cityRef}\n                          hint={\"City Name\"}\n                        />\n                      </div>\n                      <div class=\"form-group\">\n                        <button\n                          onClick={(e) => {\n                            e.preventDefault();\n                            this.setState({\n                              createdCity: !this.state.createdCity,\n                            });\n                          }}\n                          className=\"btn btn-success\"\n                          style={s50}\n                        >\n                          New\n                        </button>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <label>Place of Interest</label>\n                      <Input\n                        placeholder=\"Place Name\"\n                        type=\"text\"\n                        value={this.state.locationName}\n                        onChange={(e) => {\n                          this.setState({\n                            locationName: e.target.value,\n                          });\n                        }}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <label>Place Image</label>\n                      <div className=\"custom-file mb-2\">\n                        <Input\n                          type=\"file\"\n                          className=\"custom-file-input\"\n                          onChange={(e) => {\n                            this.setState({\n                              locationImageFile: e.target.files[0],\n                              locationImageName: e.target.files[0].name,\n                            });\n                          }}\n                        />\n                        <label\n                          className=\"custom-file-label\"\n                          htmlFor=\"customFileThumbanail\"\n                        >\n                          {this.state.locationImageName}\n                        </label>\n                      </div>\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"12\">\n                    <FormGroup>\n                      <label>Place Discription</label>\n                      <Input\n                        placeholder=\"Description\"\n                        type=\"text\"\n                        value={this.state.locationDesc}\n                        onChange={(e) => {\n                          this.setState({\n                            locationDesc: e.target.value,\n                          });\n                        }}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"justify-content-between\">\n                  <Col\n                    md=\"12\"\n                    xs=\"12\"\n                    className=\"d-flex justify-content-end\"\n                    style={{ padding: \"18px\" }}\n                  >\n                    <Button\n                      color=\"success\"\n                      disabled={!this.state.createdLocation}\n                      onClick={() => {\n                        this.setState({\n                          createdLocation: !this.state.createdLocation,\n                        });\n                        var formdata = new FormData();\n                        formdata.append(\"name\", this.state.locationName);\n                        formdata.append(\"desc\", this.state.locationDesc);\n                        formdata.append(\n                          \"CityId\",\n                          this._cityRef.current.returnId()\n                        );\n                        formdata.append(\n                          \"CountryId\",\n                          this._countryRef.current.returnId()\n                        );\n                        formdata.append(\"image\", this.state.locationImageFile);\n                        for (var value of formdata.values()) {\n                          if (!value) {\n                            swal(\n                              \"Can't Update\",\n                              \"All Fields Are Mandatory!\",\n                              \"error\"\n                            );\n                            this.setState({\n                              createdLocation: true,\n                            });\n                            return;\n                          }\n                        }\n                        if (!this.state.isAnUpdate) {\n                          Axios.post(\"/location/create\", formdata).then((u) => {\n                            this.setState({\n                              createdLocation: !this.state.createdLocation,\n                              locationName: \"\",\n                              locationImageFile: null,\n                              locationImageName: \"Choose Image File\",\n                              locationDesc: \"\",\n                            });\n                            this.tableRef.current.resetTable();\n                          });\n                        } else {\n                          Axios.put(\n                            \"/location/update/\" + this.state.locationId,\n                            formdata\n                          ).then((u) => {\n                            this.setState({\n                              createdLocation: !this.state.createdLocation,\n                              locationName: \"\",\n                              locationImageFile: null,\n                              locationImageName: \"Choose Image File\",\n                              locationDesc: \"\",\n                            });\n                            this.tableRef.current.resetTable();\n                          });\n                        }\n                      }}\n                    >\n                      {this.state.createdLocation ? \"Save\" : \"Saving...\"}\n                    </Button>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Row>\n          <Row>\n            <Card>\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <CardTitle tag=\"h2\">Added City Attractions</CardTitle>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <MyComponentHook\n                  ref={this.tableRef}\n                  setDataInParent={this.setDataToFields}\n                />\n              </CardBody>\n            </Card>\n          </Row>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, {\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport Axios from \"./axios\";\nimport swal from \"sweetalert\";\nimport { Button } from \"reactstrap\";\nconst MyComponentHook = forwardRef((props, ref) => {\n  const [overlayLoader, setOverlayLoader] = useState(false);\n  const [progress, setProgress] = useState(true);\n  const [data, setData] = useState([]);\n  useImperativeHandle(ref, () => ({\n    resetTable: () => {\n      getData();\n    },\n  }));\n\n  createTheme(\"solarized\", {\n    text: {\n      primary: \"#ffffff\",\n      secondary: \"#9A9A9A\",\n    },\n    background: {\n      default: \"#27293d\",\n    },\n    action: {\n      button: \"rgba(0,0,0,.54)\",\n      hover: \"rgba(0,0,0,.08)\",\n      disabled: \"rgba(0,0,0,.12)\",\n    },\n  });\n  const getData = () => {\n    Axios.get(\"/customer/get-all\").then((u) => {\n      console.log(u.data);\n      setData(u.data);\n      setProgress(false);\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const handleDeleteAction = (value) => {\n    console.log(value);\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        var arr = data.filter((item) => item.id !== value.id);\n        console.log(arr);\n        setData(arr);\n        await Axios.delete(\"/customer/delete/\" + value.id);\n        swal(\"Poof! Your content has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your Data is Safe!\");\n      }\n    });\n  };\n  const handleEditAction = (value) => {\n    props.setDataInParent(value);\n  };\n  const updateState = useCallback((state) => console.log(state));\n  const columns = useMemo(() => [\n    {\n      name: \"Name\",\n      selector: \"name\",\n    },\n    {\n      name: \"Organisation\",\n      selector: \"organisation\",\n    },\n    {\n      name: \"Phone\",\n      selector: \"phone\",\n    },\n    {\n      name: \"Email\",\n      selector: \"email\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleEditAction(row)}\n        >\n          <i className=\"tim-icons icon-pencil\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Edit\",\n      selector: \"edit\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-danger\"\n          onClick={() => handleDeleteAction(row)}\n        >\n          <i className=\"tim-icons icon-trash-simple\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      button: true,\n      name: \"Delete\",\n      selector: \"delete\",\n    },\n  ]);\n\n  return (\n    <>\n      <div\n        className=\"loading-overlay\"\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\n      >\n        <div class=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n        Loading...\n      </div>\n      <DataTable\n        data={data}\n        columns={columns}\n        theme=\"solarized\"\n        onSelectedRowsChange={updateState}\n        pagination={true}\n        progressPending={progress}\n        progressComponent={<h2>Hang on...😊</h2>}\n      />\n    </>\n  );\n});\n\nexport default MyComponentHook;\n","import React, { Component, createRef } from \"react\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Input,\n} from \"reactstrap\";\nimport CustomerTable from \"../components/sub/customersTable\";\nimport Axios from \"../components/sub/axios\";\nexport default class customers extends Component {\n  constructor(props) {\n    super(props);\n    this.CustomerTableRef = createRef();\n    this.state = {\n      customerName: \"\",\n      customerPhone: \"\",\n      customerOrg: \"\",\n      customerEmail: \"\",\n      createdCutomer: true,\n      isAnUpdate: false,\n      customerId:null,\n    };\n  }\n  setDataToFields = (data) => {\n    this.setState({\n      customerName: data.name,\n      customerPhone: data.phone,\n      customerOrg: data.organisation,\n      customerEmail: data.email,\n      isAnUpdate: !this.state.isAnUpdate,\n      customerId: data.id,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Manage Customers</CardTitle>\n                  <h5 className=\"card-category\">Add new Customers</h5>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col md=\"6\">\n                      <label>Customer Name</label>\n                      <Input\n                        placeholder=\"Full Name\"\n                        value={this.state.customerName}\n                        onChange={(e) => {\n                          this.setState({\n                            customerName: e.target.value,\n                          });\n                        }}\n                      />\n                    </Col>\n                    <Col md=\"6\">\n                      <label>Organisation Name</label>\n                      <Input\n                        placeholder=\"Name\"\n                        value={this.state.customerOrg}\n                        onChange={(e) => {\n                          this.setState({\n                            customerOrg: e.target.value,\n                          });\n                        }}\n                      />\n                    </Col>\n                    <Col md=\"6\">\n                      <label>Customer Phone</label>\n                      <Input\n                        placeholder=\"Phone\"\n                        type=\"number\"\n                        value={this.state.customerPhone}\n                        onChange={(e) => {\n                          this.setState({\n                            customerPhone: e.target.value,\n                          });\n                        }}\n                      />\n                    </Col>\n                    <Col md=\"6\">\n                      <label>Customer Email</label>\n                      <Input\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        value={this.state.customerEmail}\n                        onChange={(e) => {\n                          this.setState({\n                            customerEmail: e.target.value,\n                          });\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"justify-content-between\">\n                    <Col\n                      md=\"12\"\n                      xs=\"12\"\n                      className=\"d-flex justify-content-end\"\n                      style={{ padding: \"18px\" }}\n                    >\n                      <Button\n                        disabled={!this.state.createdCutomer}\n                        color=\"success\"\n                        onClick={() => {\n                          this.setState({\n                            createdCutomer: !this.state.createdCutomer,\n                          });\n                          if(!this.state.isAnUpdate){\n                            Axios.post(\"customer/create\", {\n                              name: this.state.customerName,\n                              organisation: this.state.customerOrg,\n                              email: this.state.customerEmail,\n                              phone: this.state.customerPhone,\n                            }).then((u) => {\n                              this.setState({\n                                createdCutomer: !this.state.createdCutomer,\n                                customerName: \"\",\n                                customerPhone: \"\",\n                                customerOrg: \"\",\n                                customerEmail: \"\",\n                              });\n                              this.CustomerTableRef.current.resetTable();\n                            });\n                          } else {\n                            Axios.put(\"customer/update/\"+this.state.customerId, {\n                              name: this.state.customerName,\n                              organisation: this.state.customerOrg,\n                              email: this.state.customerEmail,\n                              phone: this.state.customerPhone,\n                            }).then((u) => {\n                              this.setState({\n                                createdCutomer: !this.state.createdCutomer,\n                                customerName: \"\",\n                                customerPhone: \"\",\n                                customerOrg: \"\",\n                                customerEmail: \"\",\n                                isAnUpdate:!this.state.isAnUpdate\n                              });\n                              this.CustomerTableRef.current.resetTable();\n                            });\n                          }\n                        }}\n                      >\n                        {this.state.createdCutomer ? \"Save\" : \"Saving...\"}\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Added Customers</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <CustomerTable\n                    ref={this.CustomerTableRef}\n                    setDataInParent={this.setDataToFields}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n","import Dashboard from \"views/Dashboard.js\";\nimport UserProfile from \"views/UserProfile.js\";\nimport ManageEvents from \"views/ManageEvents.js\";\nimport CitiesCountries from \"views/cities&countries.js\";\nimport Customers from \"views/customers.js\";\nimport AboutCompany from \"views/AboutCompany\";\nimport EventGallery from \"views/EventGallery\";\nimport Queries from \"views/queries\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/manage-events\",\n    name: \"Manage Events\",\n    rtlName: \"إخطارات\",\n    icon: \"tim-icons icon-calendar-60\",\n    component: ManageEvents,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/Cities-Countries\",\n    name: \"Cities & Countries\",\n    rtlName: \"إخطارات\",\n    icon: \"tim-icons icon-book-bookmark\",\n    component: CitiesCountries,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/About-Company\",\n    name: \"About Company\",\n    rtlName: \"إخطارات\",\n    component: AboutCompany,\n    layout: \"/admin\",\n    icon: \"tim-icons icon-single-copy-04\",\n  },\n  {\n    icon: \"tim-icons icon-camera-18\",\n    path: \"/event-gallery\",\n    name: \"Event Gallery\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    component: EventGallery,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Manage Users\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-badge\",\n    component: UserProfile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/customers\",\n    name: \"Customers\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-single-02\",\n    component: Customers,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/queries\",\n    name: \"Queries\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-alert-circle-exc\",\n    component: Queries,\n    layout: \"/admin\",\n  },\n];\nexport default routes;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Input,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport axios from \"../components/sub/axios\";\nimport JoditEditor from \"jodit-react\";\nimport Gallery from \"react-grid-gallery\";\nimport swal from \"sweetalert\";\n\nexport default class AboutCompany extends Component {\n  state = {\n    description: \"Loading Description...\",\n    isEditorOpen: false,\n    updatingDesc: false,\n    savingImage: false,\n    editorText: \"\",\n    images: null,\n    pickedImageName: \"Choose Image\",\n    pickedImage: null,\n    isDeleting: false,\n    selectedImages: [],\n    selectedImageNames: [],\n  };\n  componentWillMount = () => {\n    this.getCompanyDescription();\n    this.getAllImages();\n  };\n  getCompanyDescription = () => {\n    axios.get(\"about-company/get-description\").then((u) => {\n      this.setState({\n        description: u.data.description == null ? \"\" : u.data.description,\n      });\n    });\n  };\n  updateCompanyDescription = (text) => {\n    this.setState({\n      updatingDesc: !this.state.updatingDesc,\n    });\n    axios\n      .post(\"about-company/update-description\", {\n        description: text,\n      })\n      .then((u) => {\n        this.setState({\n          updatingDesc: !this.state.updatingDesc,\n          isEditorOpen: !this.state.isEditorOpen,\n          description: text,\n        });\n      });\n  };\n  saveImage = () => {\n    this.setState({\n      savingImage: !this.state.savingImage,\n    });\n    var formData = new FormData();\n    var tempImage = this.state.images;\n    formData.append(\"image\", this.state.pickedImage);\n    axios.post(\"about-company/upload-picture\", formData).then((u) => {\n      tempImage.push({\n        src: u.data.url,\n        thumbnail: u.data.url,\n        thumbnailWidth: 320,\n        thumbnailHeight: 320,\n        isSelected: false,\n      });\n      this.setState({\n        savingImage: !this.state.savingImage,\n        pickedImageName: \"Choose Image\",\n        pickedImage: null,\n        images: tempImage,\n      });\n    });\n  };\n  deleteImages = () => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        this.setState({\n          isDeleting: !this.state.isDeleting,\n        });\n        var tempImages = this.state.images;\n        var tempSelectedImages = this.state.selectedImages;\n        axios\n          .post(\"about-company/delete-pictures-bulk\", {\n            deleteIds: tempSelectedImages,\n            images: this.state.selectedImageNames,\n          })\n          .then((u) => {\n            this.state.selectedImages.forEach((imageId) => {\n              var imageObject = tempImages.filter(\n                (image) => image.id == imageId\n              )[0];\n              tempSelectedImages.splice(tempSelectedImages.indexOf(imageId), 1);\n              tempImages.splice(tempImages.indexOf(imageObject), 1);\n            });\n            this.setState({\n              images: tempImages,\n              selectedImages: tempSelectedImages,\n              isDeleting: !this.state.isDeleting,\n            });\n\n            swal(\"Poof! Your content has been deleted!\", {\n              icon: \"success\",\n            });\n          });\n      } else {\n        swal(\"Your Images are Safe!\");\n      }\n    });\n  };\n  onSelectImage = (index, image) => {\n    var tempImages = this.state.images;\n    tempImages[index].isSelected = !tempImages[index].isSelected;\n\n    var selectedImagesTemp = this.state.selectedImages;\n    var selectedImagesNameTemp = this.state.selectedImageNames;\n    if (selectedImagesTemp.some((id) => id == tempImages[index].id)) {\n      selectedImagesTemp.splice(\n        selectedImagesTemp.indexOf(tempImages[index].id),\n        1\n      );\n      selectedImagesNameTemp.splice(\n        selectedImagesNameTemp.indexOf(tempImages[index].url),\n        1\n      );\n    } else {\n      selectedImagesTemp.push(tempImages[index].id);\n      selectedImagesNameTemp.push(tempImages[index].url);\n      console.log(selectedImagesNameTemp);\n      console.log(selectedImagesTemp);\n    }\n    this.setState({\n      images: tempImages,\n      selectedImages: selectedImagesTemp,\n      selectedImageNames: selectedImagesNameTemp,\n    });\n  };\n  getAllImages = () => {\n    axios.get(\"about-company/get-all-images\").then((u) => {\n      var Images = u.data.map((image) => {\n        return {\n          ...image,\n          src: image.url,\n          thumbnail: image.url,\n          thumbnailWidth: 320,\n          thumbnailHeight: 320,\n          isSelected: false,\n        };\n      });\n      this.setState({\n        images: Images,\n      });\n    });\n  };\n  render() {\n    var galleryImages = this.state.images == null ? [] : [...this.state.images];\n    const config = {\n      readonly: false,\n    };\n    var editedText = \"\";\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col xs=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Company Description</CardTitle>\n                  <h5 className=\"card-category\">\n                    Details & Other Description about the Company\n                  </h5>\n                </CardHeader>\n                <CardBody>\n                  {this.state.isEditorOpen ? null : this.state.description ===\n                    \"\" ? (\n                    <div\n                      style={{\n                        backgroundColor: \"#ffffffc4\",\n                        borderRadius: \"8px\",\n                        color: \"#ffffffad\",\n                        padding: \"24px\",\n                      }}\n                    >\n                      No Description Available Yet! Open Editor and Create a\n                      Description Now\n                    </div>\n                  ) : (\n                    <div\n                      style={{\n                        backgroundColor: \"#ffffffc4\",\n                        borderRadius: \"8px\",\n                        color: \"black\",\n                        padding: \"24px\",\n                      }}\n                      dangerouslySetInnerHTML={{\n                        __html: this.state.description,\n                      }}\n                    ></div>\n                  )}\n                  {this.state.isEditorOpen ? (\n                    <div\n                      style={{\n                        marginTop: \"18px\",\n                      }}\n                    >\n                      <JoditEditor\n                        value={this.state.editorText}\n                        config={config}\n                        tabIndex={1}\n                        onChange={(newContent) => {\n                          editedText = newContent;\n                        }}\n                      />\n                      <Button\n                        color=\"success\"\n                        disabled={this.state.updatingDesc}\n                        onClick={() => {\n                          if (this.state.description === editedText) {\n                            this.setState({\n                              isEditorOpen: !this.state.isEditorOpen,\n                            });\n                          } else {\n                            this.updateCompanyDescription(editedText);\n                          }\n                        }}\n                      >\n                        {this.state.updatingDesc\n                          ? \"Saving Please Wait\"\n                          : \"Save & Close Editor\"}\n                      </Button>\n                      <Button\n                        color=\"danger\"\n                        onClick={() => {\n                          this.setState({\n                            isEditorOpen: !this.state.isEditorOpen,\n                          });\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  ) : (\n                    <div\n                      style={{\n                        marginTop: \"18px\",\n                      }}\n                    >\n                      <Button\n                        style={{\n                          marginTop: \"8px\",\n                        }}\n                        onClick={() => {\n                          this.setState({\n                            isEditorOpen: !this.state.isEditorOpen,\n                            editorText: this.state.description,\n                          });\n                        }}\n                      >\n                        Open Editor\n                      </Button>\n                    </div>\n                  )}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Images</CardTitle>\n                  <h5 className=\"card-category\">\n                    Sample Event Images and Others\n                  </h5>\n                </CardHeader>\n                <CardBody>\n                  <label>Pick Plack Card Image</label>\n                  <Row style={{ marginTop: \"12px\", marginBottom: \"18px\" }}>\n                    <Col xs=\"10\">\n                      <div className=\"custom-file mb-2\">\n                        <Input\n                          type=\"file\"\n                          className=\"custom-file-input\"\n                          onChange={(e) => {\n                            this.setState({\n                              pickedImage: e.target.files[0],\n                              pickedImageName: e.target.files[0].name,\n                            });\n                          }}\n                        />\n                        <label\n                          className=\"custom-file-label\"\n                          htmlFor=\"customFileThumbanail\"\n                        >\n                          {this.state.pickedImageName}\n                        </label>\n                      </div>\n                    </Col>\n                    <Col xs=\"2\">\n                      <Button\n                        color=\"success\"\n                        style={{ width: \"100%\" }}\n                        disabled={this.state.savingImage}\n                        onClick={() => this.saveImage()}\n                      >\n                        {this.state.savingImage\n                          ? \"Saving Please Wait\"\n                          : \"Save Image\"}\n                      </Button>\n                    </Col>\n                  </Row>\n                  <Col xs=\"12\">\n                    {this.state.selectedImages.length > 0 ? (\n                      <Row>\n                        <Col xs=\"12\">\n                          <Button\n                            color=\"danger\"\n                            onClick={this.deleteImages}\n                            disabled={this.state.isDeleting}\n                          >\n                            {this.state.isDeleting ? \"Deleting...\" : \"Delete\"}\n                          </Button>\n                        </Col>\n                        <Col\n                          xs=\"12\"\n                          style={{\n                            color: \"white\",\n                            padding: \"12px\",\n                          }}\n                        >\n                          {this.state.selectedImages.length +\n                            \" Image(s) have been selected\"}\n                        </Col>\n                      </Row>\n                    ) : null}\n                  </Col>\n                  {this.state.images === null ? (\n                    <div\n                      style={{\n                        backgroundColor: \"#0000002e\",\n                        borderRadius: \"8px\",\n                        color: \"#ffffffad\",\n                        padding: \"24px\",\n                      }}\n                    >\n                      Loading Images...\n                    </div>\n                  ) : this.state.images.length === 0 ? (\n                    <div\n                      style={{\n                        backgroundColor: \"#0000002e\",\n                        borderRadius: \"8px\",\n                        color: \"#ffffffad\",\n                        padding: \"24px\",\n                      }}\n                    >\n                      No Images've been Added Yet\n                    </div>\n                  ) : (\n                    <Gallery\n                      images={galleryImages}\n                      onSelectImage={this.onSelectImage}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Input,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport Gallery from \"react-grid-gallery\";\nimport axios from \"../components/sub/axios\";\nimport swal from \"sweetalert\";\n\nexport default class EventGallery extends Component {\n  state = {\n    images: [],\n    isSearching: false,\n    eventId: \"\",\n    selectedImages: [],\n    selectedImageNames: [],\n    isDeleting: false,\n    isMoving: false,\n  };\n  componentWillMount = () => {\n    if (this.props.location.state !== null) {\n      this.setState({\n        isSearching: !this.state.isSearching,\n        eventId: this.props.location.state.eventId,\n      });\n      axios\n        .get(`/events/get-gallery/${this.props.location.state.eventId}`)\n        .then((u) => {\n          this.setState({\n            isSearching: !this.state.isSearching,\n            images: u.data.map((image) => {\n              return {\n                ...image,\n                src: image.url,\n                thumbnail: image.url,\n                thumbnailWidth: 320,\n                thumbnailHeight: 320,\n                isSelected: false,\n              };\n            }),\n          });\n        });\n    }\n  };\n  searchImages = () => {\n    this.setState({\n      isSearching: !this.state.isSearching,\n    });\n    axios.get(`/events/get-gallery/${this.state.eventId}`).then((u) => {\n      this.setState({\n        isSearching: !this.state.isSearching,\n        images: u.data.map((image) => {\n          return {\n            ...image,\n            src: image.url,\n            thumbnail: image.url,\n            thumbnailWidth: 320,\n            thumbnailHeight: 320,\n            isSelected: false,\n          };\n        }),\n      });\n    });\n  };\n  onSelectImage = (index, image) => {\n    var tempImages = this.state.images;\n    tempImages[index].isSelected = !tempImages[index].isSelected;\n\n    var selectedImagesTemp = this.state.selectedImages;\n    var selectedImagesNameTemp = this.state.selectedImageNames;\n    if (selectedImagesTemp.some((id) => id == tempImages[index].id)) {\n      selectedImagesTemp.splice(\n        selectedImagesTemp.indexOf(tempImages[index].id),\n        1\n      );\n      selectedImagesNameTemp.splice(\n        selectedImagesNameTemp.indexOf(tempImages[index].url),\n        1\n      );\n    } else {\n      selectedImagesTemp.push(tempImages[index].id);\n      selectedImagesNameTemp.push(tempImages[index].url);\n      console.log(selectedImagesNameTemp);\n      console.log(selectedImagesTemp);\n    }\n    this.setState({\n      images: tempImages,\n      selectedImages: selectedImagesTemp,\n      selectedImageNames: selectedImagesNameTemp,\n    });\n  };\n  deleteImages = () => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        this.setState({\n          isDeleting: !this.state.isDeleting,\n        });\n        var tempImages = this.state.images;\n        var tempSelectedImages = this.state.selectedImages;\n        axios\n          .post(\"events/delete-image-bulk\", {\n            Ids: tempSelectedImages,\n            images: this.state.selectedImageNames,\n          })\n          .then((u) => {\n            this.state.selectedImages.forEach((imageId) => {\n              var imageObject = tempImages.filter(\n                (image) => image.id == imageId\n              )[0];\n              tempSelectedImages.splice(tempSelectedImages.indexOf(imageId), 1);\n              tempImages.splice(tempImages.indexOf(imageObject), 1);\n            });\n            this.setState({\n              images: tempImages,\n              selectedImages: tempSelectedImages,\n              isDeleting: !this.state.isDeleting,\n            });\n\n            swal(\"Poof! Your content has been deleted!\", {\n              icon: \"success\",\n            });\n          });\n      } else {\n        swal(\"Your Images are Safe!\");\n      }\n    });\n  };\n  useInAbout = () => {\n    swal(\"Are you sure you want to use these images in about section too?\", {\n      buttons: [\"No\", \"Yes\"],\n    }).then((ans) => {\n      if (ans) {\n        this.setState({\n          isMoving: !this.state.isMoving,\n        });\n        axios\n          .post(\"about-company/use-in-about\", {\n            images: this.state.selectedImageNames.map((name) => {\n              return {\n                ...name,\n                url: name,\n              };\n            }),\n          })\n          .then((u) => {\n            var imagesTemp = this.state.images;\n            imagesTemp.forEach((image) => {\n              image.isSelected = false;\n            });\n            this.setState({\n              isMoving: !this.state.isMoving,\n              images: imagesTemp,\n              selectedImageNames: [],\n              selectedImages: [],\n            });\n          });\n      }\n    });\n  };\n  render() {\n    var galleryImages = [...this.state.images];\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h2\">Event Gallery</CardTitle>\n                <h5 className=\"card-category\">Images Uploaded by attendees</h5>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col xs=\"10\">\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Enter Event Full Name\"\n                      value={this.state.eventId}\n                      onChange={(e) =>\n                        this.setState({ eventId: e.target.value })\n                      }\n                    />\n                  </Col>\n                  <Col xs=\"2\">\n                    <Button\n                      style={{ width: \"100%\" }}\n                      color=\"success\"\n                      disabled={this.state.isSearching}\n                      onClick={this.searchImages}\n                    >\n                      {this.state.isSearching ? \"Searching...\" : \"Search\"}\n                    </Button>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs=\"12\">\n                    {this.state.selectedImages.length > 0 ? (\n                      <Row>\n                        <Col xs=\"12\">\n                          <Button\n                            color=\"danger\"\n                            onClick={this.deleteImages}\n                            disabled={this.state.isDeleting}\n                          >\n                            {this.state.isDeleting ? \"Deleting...\" : \"Delete\"}\n                          </Button>\n                          <Button\n                            color=\"primary\"\n                            onClick={this.useInAbout}\n                            disabled={this.state.isMoving}\n                          >\n                            {this.state.isMoving\n                              ? \"Copying...\"\n                              : \"Use in About Section\"}\n                          </Button>\n                        </Col>\n                        <Col\n                          xs=\"12\"\n                          style={{\n                            color: \"white\",\n                            padding: \"12px\",\n                          }}\n                        >\n                          {this.state.selectedImages.length +\n                            \" Image(s) have been selected\"}\n                        </Col>\n                      </Row>\n                    ) : null}\n                  </Col>\n                  <Col xs=\"12\">\n                    <Gallery\n                      images={galleryImages}\n                      onSelectImage={this.onSelectImage}\n                    />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Col,\n  Row,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Input,\n  Button,\n} from \"reactstrap\";\nimport QueryTable from \"../components/sub/queryTable\";\n\nexport default class Queries extends Component {\n  state = {\n    isSearching: false,\n    data: null,\n    eventId: null,\n  };\n\n  searched = () => {\n    this.setState({\n      isSearching: !this.state.isSearching,\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Card>\n            <CardHeader>\n              <CardTitle tag=\"h2\">Queries</CardTitle>\n              <h5>Search Queries Specific to any Event</h5>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col xs=\"10\">\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Enter Event Id\"\n                    id=\"EventId\"\n                  />\n                </Col>\n                <Col xs=\"2\">\n                  <Button\n                    style={{ width: \"100%\" }}\n                    color=\"success\"\n                    disabled={this.state.isSearching}\n                    onClick={() => {\n                      if (document.getElementById(\"EventId\").value !== \"\") {\n                        this.setState({\n                          eventId: document.getElementById(\"EventId\").value,\n                          isSearching: true,\n                        });\n                      }\n                    }}\n                  >\n                    {this.state.isSearching ? \"Searching...\" : \"Search\"}\n                  </Button>\n                </Col>\n              </Row>\n              <Row>\n                <QueryTable\n                  eventId={this.state.eventId}\n                  inAll={true}\n                  searched={this.searched}\n                />\n              </Row>\n            </CardBody>\n          </Card>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/Admin/Admin.js\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}