{"version":3,"sources":["assets/img/anime3.png","components/Sidebar/Sidebar.js","components/Navbars/AdminNavbar.js","components/Footer/Footer.js","components/sub/axios.js","components/sub/eventsTable.js","components/sub/queryTable.js","views/Dashboard.js","views/UserProfile.js","components/sub/Editor.js","components/sub/autosuggest-norm.js","components/sub/autosuggest.js","layouts/Admin/Admin.js","components/sub/categorychips.js","components/sub/agendas.js","components/sub/transfers.js","views/ManageEvents.js","components/sub/cities&countriesTable.js","views/cities&countries.js","components/sub/customersTable.js","views/customers.js","routes.js","views/AboutCompany.js","views/EventGallery.js","views/queries.js","index.js"],"names":["module","exports","ps","AdminNavbar","props","updateColor","window","innerWidth","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","addEventListener","this","removeEventListener","Navbar","className","classNames","expand","Container","fluid","toggled","sidebarOpened","type","onClick","toggleSidebar","NavbarBrand","href","e","preventDefault","brandText","aria-expanded","aria-label","data-target","data-toggle","id","Collapse","navbar","isOpen","Nav","InputGroup","Button","UncontrolledDropdown","nav","DropdownToggle","caret","alt","src","require","DropdownMenu","right","tag","NavLink","DropdownItem","divider","Modal","modalClassName","toggle","Input","placeholder","data-dismiss","React","Component","Footer","NavItem","Date","getFullYear","target","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","navigator","platform","PerfectScrollbar","refs","sidebar","suppressScrollX","suppressScrollY","destroy","bgColor","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","imgSrc","text","to","innerLink","data","ref","map","prop","key","redirect","path","pro","layout","activeClassName","icon","rtlName","name","defaultProps","axios","create","baseURL","EventTable","forwardRef","useState","overlayLoader","setOverlayLoader","progress","setProgress","setData","createTheme","primary","secondary","background","default","action","button","hover","disabled","useEffect","columns","useMemo","selector","cell","row","style","padding","value","open","ignoreRowClick","allowOverflow","history","push","eventId","Axios","get","then","u","localStorage","setItem","JSON","stringify","swal","title","buttons","dangerMode","willDelete","a","arr","filter","item","delete","display","class","theme","pagination","progressPending","progressComponent","withRouter","ExpandableComponent","Row","Col","md","margin","marginTop","marginBottom","backgroundColor","borderRadius","question","answer","QueryTable","isSaving","setIsSaving","showModal","setShowModal","setAnswer","openedQueryId","setOpenQueryId","openedQueryAttendeeId","setOpenQueryAttendeeId","inAll","modifiedData","attendeeName","Attendee","attendeePhone","phone","attendeeEmail","email","attendeeId","searched","maxWidth","paddingTop","paddingBottom","Label","onChange","xs","post","expandableRowsComponent","expandableRows","Dashboard","componentDidMount","Promise","all","currentTableCount","toString","pastTableCount","futureTableCount","b","c","tableTempData","tableData","futureTableData","element","obj","Customers","organisation","liveFrom","toDateString","liveTo","currentTableData","pastTableData","setBgChartData","bigChartData","tableState","console","log","Fragment","Card","CardHeader","sm","CardTitle","ButtonGroup","active","size","defaultChecked","CardBody","UserProfile","dropdownOpen","Form","FormGroup","htmlFor","CardFooter","Dropdown","header","Table","responsive","Editor","content","returnContent","config","readonly","tabIndex","onBlur","newContent","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","suggestion","Name","toLowerCase","activeSuggestion","showSuggestions","returnId","removeId","idArr","getElementById","split","index","splice","join","firstChild","innerText","setId","setDataUsingId","Id","onKeyDown","keyCode","length","suggestionsListComponent","fieldLength","clientWidth","width","Phone","hint","paddingLeft","Height","paddingRight","removeAllIds","includes","alert","categoryChipHit","addItemToUpdate","ChipHitAfterRemoving","CategoryChips","addChip","val","tempChips","chips","addChipByremoving","removeAllChips","temArr","Agendas","returnState","resetState","venue","startTime","endTime","remarks","startDate","toISOString","Transfers","origin","destination","mode","vehicleNumber","driverName","distance","driverPhone","journeyTime","transferDate","s26","s50","marginLeft","ManageEvents","createNewTransfer","tempTansfers","transfers","transferRef","createRef","component","isFilled","rIsFilled","haveAnythingEmpty","formData","setDataToFields","parse","eventName","eventBy","CustomerId","eventFrom","eventTo","venueName","Locations","venueUrl","url","customerId","eventPlackCardImageName","plackCardImage","eventImageName","eventImage","welcomeNote","countryId","CountryId","cityId","CityId","agendas","EventAttendies","Attendees","isSameAsArriving","dticket","representativeArr","Representatives_for_Events","Employees","Representative_Categories","RepresentativeCategoryId","EmployeeId","elem","countryRef","current","cityRef","customerRef","componentWillMount","d","f","suggestionCountries","suggestionCities","sugggestionCustomers","Representatives","RepresentativesCategory","getItem","representativeNameRef","categoryChipHitAfterRemoving","representativeCategoryRef","representativesNameChipHitAfterRemoving","categoryNameChipHit","categoryIdfromHiddenField","RepresentativeNameAutocompleteRef","categoryIdfromHiddenField_CategoryName","RepresentativeCategoryAutocompleteRef","modifyDataWithEventId","EventId","Attendies","submitEvent","eventFormData","FormData","append","eventPlackCardImage","put","representatives","transfersData","attendeesData","agendasData","status","setCountryId","setCityId","setCustomerId","EditorRef","agendaRef","addedAttendie","createNewRepresentative","createNewRepresentativeCategory","createdNewRepresentativeCategory","createdRepresentative","currTransferElement","representativePhone","representativeName","representativeCategoryName","TicketsSame","isEditorOpen","aTicketFileName","dTicketFileName","updatingAgenda","updatingAttendee","updatingAgendaObject","updatingRepresentatives","updatingRepresentativesNameId","updatingRepresentativesCategoryId","updatingAttendeePhone","files","flex","message","temp","Category","cursor","representativesIds","representativesCatIds","representativesArray","forEach","elementCatId","newArr","concat","unique","distinct","i","marginRight","checked","newAttendieObj","fileToLoad","fileone","fileReader","FileReader","onload","fileLoadedEvent","result","readAsDataURL","filetwo","fileToLoadSecond","fileReadertwo","fileLoadedEvent1","Ea","updatingAttendeeId","tempTransfers","toLocaleString","hour","minute","hour12","MyComponentHook","getData","Cities","Countries","image","desc","useImperativeHandle","resetTable","updateState","useCallback","Image","setDataInParent","onSelectedRowsChange","CitiesCountries","suggestionCity","locationName","locationDesc","isAnUpdate","locationId","_cityRef","City","_countryRef","Country","cityModalRef","tableRef","createdLocation","locationImageFile","locationImageName","createdCity","createdCountry","modalCountryCreated","countryName","cityFile","cityFileName","cityName","formdata","values","customers","customerName","customerPhone","customerOrg","customerEmail","CustomerTableRef","createdCutomer","description","updatingDesc","savingImage","editorText","images","pickedImageName","pickedImage","isDeleting","selectedImages","selectedImageNames","getCompanyDescription","getAllImages","updateCompanyDescription","saveImage","tempImage","thumbnail","thumbnailWidth","thumbnailHeight","isSelected","deleteImages","tempImages","tempSelectedImages","deleteIds","imageId","imageObject","onSelectImage","selectedImagesTemp","selectedImagesNameTemp","some","Images","galleryImages","editedText","dangerouslySetInnerHTML","__html","isSearching","isMoving","searchImages","Ids","useInAbout","ans","imagesTemp","Admin","getRoutes","handleBgClick","getBrandText","mainPanel","tables","querySelectorAll","scrollTop","scrollingElement","from","hist","createBrowserHistory","ReactDOM","render"],"mappings":"+JAAAA,EAAOC,QAAU,IAA0B,oC,8GCOvCC,E,kOCwKWC,E,kDA3Jb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAaRC,YAAc,WACRC,OAAOC,WAAa,KAAO,EAAKC,MAAMC,aACxC,EAAKC,SAAS,CACZC,MAAO,aAGT,EAAKD,SAAS,CACZC,MAAO,wBArBM,EAyBnBC,eAAiB,WACX,EAAKJ,MAAMC,aACb,EAAKC,SAAS,CACZC,MAAO,uBAGT,EAAKD,SAAS,CACZC,MAAO,aAGX,EAAKD,SAAS,CACZD,cAAe,EAAKD,MAAMC,gBApCX,EAuCnBI,kBAAoB,WAClB,EAAKH,SAAS,CACZI,aAAc,EAAKN,MAAMM,eAvC3B,EAAKN,MAAQ,CACXC,cAAc,EACdK,aAAa,EACbH,MAAO,sBALQ,E,gEASjBL,OAAOS,iBAAiB,SAAUC,KAAKX,e,6CAGvCC,OAAOW,oBAAoB,SAAUD,KAAKX,e,+BAiC1C,OACE,oCACE,kBAACa,EAAA,EAAD,CACEC,UAAWC,IAAW,kBAAmBJ,KAAKR,MAAMG,OACpDU,OAAO,MAEP,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,yBAAKJ,UAAU,kBACb,yBACEA,UAAWC,IAAW,yBAA0B,CAC9CI,QAASR,KAAKZ,MAAMqB,iBAGtB,4BACEN,UAAU,iBACVO,KAAK,SACLC,QAASX,KAAKZ,MAAMwB,eAEpB,0BAAMT,UAAU,4BAChB,0BAAMA,UAAU,4BAChB,0BAAMA,UAAU,8BAGpB,kBAACU,EAAA,EAAD,CAAaC,KAAK,SAASH,QAAS,SAACI,GAAD,OAAOA,EAAEC,mBAC1ChB,KAAKZ,MAAM6B,YAGhB,4BACEC,iBAAe,EACfC,aAAW,oBACXhB,UAAU,iBACViB,cAAY,cACZC,cAAY,WACZC,GAAG,aACHZ,KAAK,SACLC,QAASX,KAAKJ,gBAEd,0BAAMO,UAAU,oCAChB,0BAAMA,UAAU,oCAChB,0BAAMA,UAAU,qCAElB,kBAACoB,EAAA,EAAD,CAAUC,QAAM,EAACC,OAAQzB,KAAKR,MAAMC,cAClC,kBAACiC,EAAA,EAAD,CAAKvB,UAAU,UAAUqB,QAAM,GAC7B,kBAACG,EAAA,EAAD,CAAYxB,UAAU,cACpB,kBAACyB,EAAA,EAAD,CACEjC,MAAM,OACNyB,cAAY,eACZC,cAAY,QACZC,GAAG,gBACHX,QAASX,KAAKH,mBAEd,uBAAGM,UAAU,8BACb,0BAAMA,UAAU,wBAAhB,YAGJ,kBAAC0B,EAAA,EAAD,CAAsBC,KAAG,GACvB,kBAACC,EAAA,EAAD,CACEC,OAAK,EACLrC,MAAM,UACN0B,cAAY,WACZS,KAAG,EACHnB,QAAS,SAACI,GAAD,OAAOA,EAAEC,mBAElB,yBAAKb,UAAU,SACb,yBAAK8B,IAAI,MAAMC,IAAKC,EAAQ,QAE9B,uBAAGhC,UAAU,uCACb,uBAAGA,UAAU,aAAb,YAEF,kBAACiC,EAAA,EAAD,CAAcjC,UAAU,kBAAkBkC,OAAK,EAACC,IAAI,MAClD,kBAACC,EAAA,EAAD,CAASD,IAAI,MACX,kBAACE,EAAA,EAAD,CAAcrC,UAAU,YAAxB,YAEF,kBAACoC,EAAA,EAAD,CAASD,IAAI,MACX,kBAACE,EAAA,EAAD,CAAcrC,UAAU,YAAxB,aAEF,kBAACqC,EAAA,EAAD,CAAcC,SAAO,EAACH,IAAI,OAC1B,kBAACC,EAAA,EAAD,CAASD,IAAI,MACX,kBAACE,EAAA,EAAD,CAAcrC,UAAU,YAAxB,cAIN,wBAAIA,UAAU,4BAKtB,kBAACuC,EAAA,EAAD,CACEC,eAAe,eACflB,OAAQzB,KAAKR,MAAMM,YACnB8C,OAAQ5C,KAAKH,mBAEb,yBAAKM,UAAU,gBACb,kBAAC0C,EAAA,EAAD,CAAOvB,GAAG,uBAAuBwB,YAAY,SAASpC,KAAK,SAC3D,4BACES,aAAW,QACXhB,UAAU,QACV4C,eAAa,QACbrC,KAAK,SACLC,QAASX,KAAKH,mBAEd,uBAAGM,UAAU,yC,GAnJD6C,IAAMC,W,SCkBjBC,E,uKAhCX,OACE,4BAAQ/C,UAAU,UAChB,kBAACG,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACmB,EAAA,EAAD,KACE,kBAACyB,EAAA,EAAD,KACE,kBAACZ,EAAA,EAAD,CAASzB,KAAK,gCAAd,iBAIF,kBAACqC,EAAA,EAAD,KACE,kBAACZ,EAAA,EAAD,CAASzB,KAAK,iDAAd,cAKJ,yBAAKX,UAAU,aAAf,SACK,IAAIiD,MAAOC,cADhB,aACyC,IACvC,uBAAGlD,UAAU,2BAFf,MAE8C,IAC5C,uBACEW,KAAK,qBACLwC,OAAO,UAFT,WAKK,IARP,2B,GAjBWN,IAAMC,W,gBFMrBM,E,kDACJ,WAAYnE,GAAQ,IAAD,8BACjB,cAAMA,IAmBRoE,YAAc,WACZC,SAASC,gBAAgBC,UAAUC,OAAO,aAnB1C,EAAKC,YAAYC,KAAjB,gBAFiB,E,wDAIPC,GACV,OAAO/D,KAAKZ,MAAM4E,SAASC,SAASC,QAAQH,IAAc,EAAI,SAAW,K,0CAGrEI,UAAUC,SAASF,QAAQ,QAAU,IACvChF,EAAK,IAAImF,IAAiBrE,KAAKsE,KAAKC,QAAS,CAC3CC,iBAAiB,EACjBC,iBAAiB,O,6CAKjBN,UAAUC,SAASF,QAAQ,QAAU,GACvChF,EAAGwF,Y,+BAMG,IAAD,SACsC1E,KAAKZ,MAA1CuF,EADD,EACCA,QAASC,EADV,EACUA,OAAQC,EADlB,EACkBA,UAAWC,EAD7B,EAC6BA,KAChCC,EAAU,KACVC,EAAW,KAgDf,YA/CaC,IAATH,SACsBG,IAApBH,EAAKI,YACPH,EACE,uBACEjE,KAAMgE,EAAKI,WACX/E,UAAU,wBACVmD,OAAO,SACP3C,QAASX,KAAKZ,MAAMwB,eAEpB,yBAAKT,UAAU,YACb,yBAAK+B,IAAK4C,EAAKK,OAAQlD,IAAI,iBAIjC+C,EACE,uBACElE,KAAMgE,EAAKI,WACX/E,UAAU,0BACVmD,OAAO,SACP3C,QAASX,KAAKZ,MAAMwB,eAEnBkE,EAAKM,QAIVL,EACE,kBAAC,IAAD,CACEM,GAAIP,EAAKQ,UACTnF,UAAU,wBACVQ,QAASX,KAAKZ,MAAMwB,eAEpB,yBAAKT,UAAU,YACb,yBAAK+B,IAAK4C,EAAKK,OAAQlD,IAAI,iBAIjC+C,EACE,kBAAC,IAAD,CACEK,GAAIP,EAAKQ,UACTnF,UAAU,0BACVQ,QAASX,KAAKZ,MAAMwB,eAEnBkE,EAAKM,QAMZ,yBAAKjF,UAAU,UAAUoF,KAAMZ,GAC7B,yBAAKxE,UAAU,kBAAkBqF,IAAI,WACtB,OAAZT,GAAiC,OAAbC,EACnB,yBAAK7E,UAAU,QACZ4E,EACAC,GAED,KACJ,kBAACtD,EAAA,EAAD,KACGkD,EAAOa,KAAI,SAACC,EAAMC,GACjB,OAAID,EAAKE,SAAiB,KAExB,wBACEzF,UACE,EAAK0D,YAAY6B,EAAKG,OACrBH,EAAKI,IAAM,cAAgB,IAE9BH,IAAKA,GAEL,kBAAC,IAAD,CACEN,GAAIK,EAAKK,OAASL,EAAKG,KACvB1F,UAAU,WACV6F,gBAAgB,SAChBrF,QAAS,EAAKvB,MAAMwB,eAEpB,uBAAGT,UAAWuF,EAAKO,OACnB,2BAAIpB,EAAYa,EAAKQ,QAAUR,EAAKS,kB,GAtGlCnD,IAAMC,WAkH5BM,EAAQ6C,aAAe,CACrBvB,WAAW,EACXF,QAAS,UACTC,OAAQ,CAAC,KAuBIrB,Q,gBGnJA8C,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAQ,oC,2HCQJC,GAAaC,sBAAW,SAACrH,EAAOoG,GAAS,IAAD,EACFkB,oBAAS,GADP,mBACrCC,EADqC,KACtBC,EADsB,OAEZF,oBAAS,GAFG,mBAErCG,EAFqC,KAE3BC,EAF2B,OAGpBJ,mBAAS,IAHW,mBAGrCnB,EAHqC,KAG/BwB,EAH+B,KAI5CC,sBAAY,YAAa,CACvB5B,KAAM,CACJ6B,QAAS,UACTC,UAAW,WAEbC,WAAY,CACVC,QAAS,WAEXC,OAAQ,CACNC,OAAQ,kBACRC,MAAO,kBACPC,SAAU,qBAIdC,qBAAU,WACS,MAAdrI,EAAMmG,MACPuB,GAAY,KAEb,CAAC1H,EAAMmG,OACV,IAuCMmC,EAAUC,mBAAQ,iBAAM,CAC5B,CACExB,KAAM,WACNyB,SAAU,MAEZ,CACEzB,KAAM,OACNyB,SAAU,QAEZ,CACEzB,KAAM,gBACNyB,SAAU,gBAEZ,CACEzB,KAAM,eACNyB,SAAU,wBAEZ,CACEzB,KAAM,YACNyB,SAAU,YAEZ,CACEzB,KAAM,UACNyB,SAAU,UAEZ,CACEC,KAAM,SAACC,GAAD,OACJ,kBAAClG,EAAA,EAAD,CACEmG,MAAO,CAAEC,QAAS,QAClB7H,UAAU,kBACVQ,QAAS,kBAjCasH,EAiCcH,OAhC1CxI,OAAO4I,KAAK,2DAA6DD,EAAM3G,GAAI,UADxD,IAAC2G,IAmCtB,uBAAG9H,UAAU,uCAGjBgI,gBAAgB,EAChBC,eAAe,EACfd,QAAQ,EACRnB,KAAM,WACNyB,SAAU,YAEZ,CACEC,KAAM,SAACC,GAAD,OACJ,kBAAClG,EAAA,EAAD,CACEmG,MAAO,CAAEC,QAAS,QAClB7H,UAAU,kBACVQ,QAAS,kBAjEYsH,EAiEcH,EAhElC1I,EAAMiJ,QAAQC,KAAK,CACxBrE,SAAU,uBACVzE,MAAO,CAAE+I,QAASN,EAAM3G,MAHA,IAAC2G,IAmErB,uBAAG9H,UAAU,+BAGjBgI,gBAAgB,EAChBC,eAAe,EACfd,QAAQ,EACRnB,KAAM,UACNyB,SAAU,WAEZ,CACEC,KAAM,SAACC,GAAD,OACJ,kBAAClG,EAAA,EAAD,CACEmG,MAAO,CAAEC,QAAS,QAClB7H,UAAU,kBACVQ,QAAS,kBA3ESsH,EA2EcH,EA1EtClB,GAAiB,QACjB4B,EAAMC,IAAI,0BAA0BR,EAAM3G,IACzCoH,MAAK,SAAAC,GAGJ,OAFA/B,GAAiB,GACjBgC,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUJ,IAClDvJ,EAAMiJ,QAAQC,KAAK,2BANL,IAACL,IA6ElB,uBAAG9H,UAAU,4BAGjBgI,gBAAgB,EAChBC,eAAe,EACfd,QAAQ,EACRnB,KAAM,OACNyB,SAAU,QAEZ,CACEC,KAAM,SAACC,GAAD,OACJ,kBAAClG,EAAA,EAAD,CACEmG,MAAO,CAAEC,QAAS,QAClB7H,UAAU,iBACVQ,QAAS,kBArHWsH,EAqHcH,OApHxCkB,KAAK,CACHC,MAAO,gBACP7D,KAAM,oDACNa,KAAM,UACNiD,SAAS,EACTC,YAAY,IACXT,KANH,uCAMQ,WAAOU,GAAP,eAAAC,EAAA,0DACFD,EADE,uBAEAE,EAAM/D,EAAKgE,QAAO,SAACC,GAAD,OAAUA,EAAKlI,KAAO2G,EAAM3G,MAClDyF,EAAQuC,GAHJ,SAIEd,EAAMiB,OAAO,oBAAsBxB,EAAM3G,IAJ3C,OAKJ0H,KAAK,uCAAwC,CAC3C/C,KAAM,YANJ,sBASJ+C,KAAK,sBATD,2CANR,uDADyB,IAACf,IAuHpB,uBAAG9H,UAAU,kCAGjBgI,gBAAgB,EAChBb,QAAQ,EACRnB,KAAM,SACNyB,SAAU,cAId,OACE,oCACE,yBACEzH,UAAU,kBACV4H,MAAO,CAAE2B,QAAS/C,EAAgB,OAAS,SAE3C,yBAAKgD,MAAM,cACT,8BACA,+BANJ,cAUA,kBAAC,IAAD,CACEpE,KAAMnG,EAAMmG,MAAQ,GACpBmC,QAASA,EACTkC,MAAM,YACNC,YAAY,EACZC,gBAAiBjD,EACjBkD,kBAAmB,oEAMZC,eAAWxD,I,mBCtLpByD,GAAsB,SAAC,GAAD,IAAG1E,EAAH,EAAGA,KAAH,OAC1B,oCACE,kBAAC2E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKrC,MAAO,CAAEsC,OAAQ,SAA9B,YACY,IACV,yBACEtC,MAAO,CACLpI,MAAO,QACPqI,QAAS,OACTsC,UAAW,MACXC,aAAc,MACdC,gBAAiB,YACjBC,aAAc,QAGflF,EAAKmF,UAZV,UAcU,IACR,yBACE3C,MAAO,CACLpI,MAAsB,MAAf4F,EAAKoF,OAAiB,UAAY,QACzC3C,QAAS,OACTsC,UAAW,MACXE,gBAAiB,YACjBC,aAAc,QAGA,MAAflF,EAAKoF,OAAiB,oBAAsBpF,EAAKoF,YAmS7CC,GA5RI,SAACxL,GAAW,IAAD,EACcsH,oBAAS,GADvB,mBACrBC,EADqB,aAEID,oBAAS,IAFb,mBAErBG,EAFqB,KAEXC,EAFW,OAGJJ,mBAAS,IAHL,mBAGrBnB,EAHqB,KAGfwB,EAHe,OAIIL,oBAAS,GAJb,mBAIrBmE,EAJqB,KAIXC,EAJW,OAKMpE,oBAAS,GALf,mBAKrBqE,EALqB,KAKVC,EALU,OAMAtE,mBAAS,IANT,mBAMrBiE,EANqB,KAMbM,EANa,OAOYvE,mBAAS,IAPrB,mBAOrBwE,EAPqB,KAONC,EAPM,OAQ4BzE,mBAAS,IARrC,mBAQrB0E,EARqB,KAQEC,EARF,KAU5B5D,qBAAU,WACHrI,EAAMkM,MAiBLlM,EAAMmJ,QACRC,EAAMC,IAAN,wBAA2BrJ,EAAMmJ,UAAWG,MAAK,SAACC,GAChD,IAAM4C,EAAe5C,EAAEpD,KAAKE,KAAI,SAACqC,GAC/B,OAAO,6BACFA,GADL,IAEE0D,aAAc1D,EAAI2D,SAAStF,KAC3BuF,cAAe5D,EAAI2D,SAASE,MAC5BC,cAAe9D,EAAI2D,SAASI,MAC5BC,WAAYhE,EAAI2D,SAASnK,QAK7ByF,EAAQwE,GACRzE,GAAY,GACZ1H,EAAM2M,eAGRhF,EAAQ,IACRD,GAAY,IAnCd0B,EAAMC,IAAI,oBAAoBC,MAAK,SAACC,GAClC,IAAM4C,EAAe5C,EAAEpD,KAAKE,KAAI,SAACqC,GAC/B,OAAO,6BACFA,GADL,IAEE0D,aAAc1D,EAAI2D,SAAStF,KAC3BuF,cAAe5D,EAAI2D,SAASE,MAC5BC,cAAe9D,EAAI2D,SAASI,MAC5BC,WAAYhE,EAAI2D,SAASnK,QAK7ByF,EAAQwE,GACRzE,GAAY,QAyBf,CAAC1H,EAAMmJ,UAEVvB,sBAAY,YAAa,CACvB5B,KAAM,CACJ6B,QAAS,UACTC,UAAW,WAEbC,WAAY,CACVC,QAAS,WAEXC,OAAQ,CACNC,OAAQ,uBACRC,MAAO,uBACPC,SAAU,0BAId,IAuEME,EAAUC,mBAAQ,iBAAM,CAC5B,CACExB,KAAM,IACNyB,SAAU,KACVoE,SAAU,QAEZ,CACE7F,KAAM,WACNyB,SAAU,UACVoE,SAAU,QAEZ,CACE7F,KAAM,aACNyB,SAAU,aAEZ,CACEA,SAAU,WACVzB,KAAM,YAER,CACEA,KAAM,SACNyB,SAAU,UAEZ,CACEzB,KAAM,WACNyB,SAAU,gBAEZ,CACEzB,KAAM,iBACNyB,SAAU,iBAEZ,CACEzB,KAAM,iBACNyB,SAAU,iBAEZ,CACEC,KAAM,SAACC,GAAD,OACJ,kBAAClG,EAAA,EAAD,CACEmG,MAAO,CAAEC,QAAS,QAClB7H,UAAU,kBACVQ,QAAS,kBA3FYsH,EA2FcH,EA1FzCkD,GAAa,GACbG,EAAelD,EAAM3G,SACrB+J,EAAuBpD,EAAM6D,YAHH,IAAC7D,IAwFvB,YAQFE,gBAAgB,EAChBC,eAAe,EACfd,QAAQ,EACRnB,KAAM,OACNyB,SAAU,QAEZ,CACEC,KAAM,SAACC,GAAD,OACJ,kBAAClG,EAAA,EAAD,CACEmG,MAAO,CAAEC,QAAS,QAClB7H,UAAU,iBACVQ,QAAS,kBA/HWsH,EA+HcH,OA9HxCkB,KAAK,CACHC,MAAO,gBACP7D,KAAM,oDACNa,KAAM,UACNiD,SAAS,EACTC,YAAY,IACXT,KANH,uCAMQ,WAAOU,GAAP,eAAAC,EAAA,0DACFD,EADE,uBAEAE,EAAM/D,EAAKgE,QAAO,SAACC,GAAD,OAAUA,EAAKlI,KAAO2G,EAAM3G,MAClDyF,EAAQuC,GAHJ,SAIEd,EAAMiB,OAAO,oBAAsBxB,EAAM3G,IAJ3C,OAKJ0H,KAAK,uCAAwC,CAC3C/C,KAAM,YANJ,sBASJ+C,KAAK,sBATD,2CANR,uDADyB,IAACf,IAiIpB,uBAAG9H,UAAU,kCAGjBgI,gBAAgB,EAChBb,QAAQ,EACRnB,KAAM,SACNyB,SAAU,cAId,OACE,oCACGmD,EACC,yBAAK5K,UAAU,cACb,yBAAKA,UAAU,gBACb,kBAAC+J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,wBACErC,MAAO,CACLkE,WAAY,SAFhB,kBAQF,kBAAC9B,EAAA,EAAD,CAAKC,GAAG,KAAKrC,MAAO,CAAEmE,cAAe,SACnC,kBAACC,GAAA,EAAD,eACA,kBAACtJ,EAAA,EAAD,CACEnC,KAAK,WACL0L,SAAU,SAACrL,GAAD,OAAOkK,EAAUlK,EAAEuC,OAAO2E,YAI1C,kBAACiC,EAAA,EAAD,CAAK/J,UAAU,2BACb,kBAACgK,EAAA,EAAD,CACEC,GAAG,KACHiC,GAAG,KACHlM,UAAU,6BACV4H,MAAO,CAAEC,QAAS,SAElB,kBAACpG,EAAA,EAAD,CACEjC,MAAM,UACNgB,QAAS,WACPmK,GAAY,GACZE,GAAa,GACbG,EAAe,IACfE,EAAuB,IACvBJ,EAAU,MAPd,UAYA,kBAACrJ,EAAA,EAAD,CACEjC,MAAM,UACN6H,SAAUqD,EACVlK,QA/JG,WACjBmK,GAAY,GACZtC,EAAM8D,KAAK,gBAAiB,CAC1B3B,OAAQA,EACRrJ,GAAI4J,EACJY,WAAYV,IACX1C,MAAK,SAACC,GACc,MAAjBvJ,EAAMmJ,QACRC,EAAMC,IAAI,oBAAoBC,MAAK,SAACC,GAClC,IAAM4C,EAAe5C,EAAEpD,KAAKE,KAAI,SAACqC,GAC/B,OAAO,6BACFA,GADL,IAEE0D,aAAc1D,EAAI2D,SAAStF,KAC3BuF,cAAe5D,EAAI2D,SAASE,MAC5BC,cAAe9D,EAAI2D,SAASI,MAC5BC,WAAYhE,EAAI2D,SAASnK,QAK7ByF,EAAQwE,GACRzE,GAAY,GACZgE,GAAY,GACZE,GAAa,MAGfxC,EAAMC,IAAN,wBAA2BrJ,EAAMmJ,UAAWG,MAAK,SAACC,GAChD,IAAM4C,EAAe5C,EAAEpD,KAAKE,KAAI,SAACqC,GAC/B,OAAO,6BACFA,GADL,IAEE0D,aAAc1D,EAAI2D,SAAStF,KAC3BuF,cAAe5D,EAAI2D,SAASE,MAC5BC,cAAe9D,EAAI2D,SAASI,MAC5BC,WAAYhE,EAAI2D,SAASnK,QAK7ByF,EAAQwE,GACRzE,GAAY,GACZgE,GAAY,GACZE,GAAa,WAwHJH,EAAW,YAAc,YAMlC,KACJ,yBACE1K,UAAU,kBACV4H,MAAO,CAAE2B,QAAS/C,EAAgB,OAAS,SAE3C,yBAAKgD,MAAM,cACT,8BACA,+BANJ,cAUA,kBAAC,IAAD,CACEpE,KAAMA,GAAQ,GACdmC,QAASA,EACTkC,MAAM,YACNC,YAAY,EACZC,gBAAiBjD,EACjB0F,wBAAyB,kBAAC,GAAD,MACzBC,gBAAc,EACdzC,kBAAmB,sDCpGZ0C,G,kDAzMb,WAAYrN,GAAQ,IAAD,8BACjB,cAAMA,IAURsN,kBAAoB,WAClBC,QAAQC,IAAI,CACVpE,EAAMC,IACJ,2BAA6B,EAAKjJ,MAAMqN,kBAAkBC,YAE5DtE,EAAMC,IAAI,wBAA0B,EAAKjJ,MAAMuN,eAAeD,YAC9DtE,EAAMC,IACJ,0BAA4B,EAAKjJ,MAAMwN,iBAAiBF,cAEzDpE,MAAK,YAAgB,IAAD,mBAAbW,EAAa,KAAV4D,EAAU,KAAPC,EAAO,KACjBC,EAAgB,EAAK3N,MAAM4N,UAC3BC,EAAkBH,EAAE3H,KAAKE,KAAI,SAAC6H,GAChC,IAAIC,EAAM,GAQV,OAPAA,EAAG,GAASD,EAAQhM,GACpBiM,EAAG,WAAiBD,EAAQE,UAAUlM,GACtCiM,EAAG,aAAmBD,EAAQE,UAAUrH,KACxCoH,EAAG,qBAA2BD,EAAQE,UAAUC,aAChDF,EAAG,SAAe,IAAInK,KAAKkK,EAAQI,UAAUC,eAC7CJ,EAAG,OAAa,IAAInK,KAAKkK,EAAQM,QAAQD,eACzCJ,EAAG,KAAWD,EAAQnH,KACfoH,KAETJ,EAAc7E,KAAK+E,GACnB,IAAIQ,EAAmBxE,EAAE9D,KAAKE,KAAI,SAAC6H,GACjC,IAAIC,EAAM,GAQV,OAPAA,EAAG,GAASD,EAAQhM,GACpBiM,EAAG,WAAiBD,EAAQE,UAAUlM,GACtCiM,EAAG,aAAmBD,EAAQE,UAAUrH,KACxCoH,EAAG,qBAA2BD,EAAQE,UAAUC,aAChDF,EAAG,SAAe,IAAInK,KAAKkK,EAAQI,UAAUC,eAC7CJ,EAAG,OAAa,IAAInK,KAAKkK,EAAQM,QAAQD,eACzCJ,EAAG,KAAWD,EAAQnH,KACfoH,KAETJ,EAAc7E,KAAKuF,GACnB,IAAIC,EAAgBb,EAAE1H,KAAKE,KAAI,SAAC6H,GAC9B,IAAIC,EAAM,GAQV,OAPAA,EAAG,GAASD,EAAQhM,GACpBiM,EAAG,WAAiBD,EAAQE,UAAUlM,GACtCiM,EAAG,aAAmBD,EAAQE,UAAUrH,KACxCoH,EAAG,qBAA2BD,EAAQE,UAAUC,aAChDF,EAAG,SAAe,IAAInK,KAAKkK,EAAQI,UAAUC,eAC7CJ,EAAG,OAAa,IAAInK,KAAKkK,EAAQM,QAAQD,eACzCJ,EAAG,KAAWD,EAAQnH,KACfoH,KAETJ,EAAc7E,KAAKwF,GAEnB,EAAKpO,SAAS,CACZ0N,UAAWD,QA5DE,EAgEnBY,eAAiB,SAAC5H,GAChB,EAAKzG,SAAS,CACZsO,aAAc7H,KAhEhB,EAAK3G,MAAQ,CACXwO,aAAc,QACdC,WAAY,EACZpB,kBAAmB,EACnBE,eAAgB,EAChBC,iBAAkB,EAClBI,UAAW,IARI,E,qDAqET,IAAD,OAEP,OADAc,QAAQC,IAAInO,KAAKR,MAAM4N,UAAUpN,KAAKR,MAAMyO,aAE1C,kBAAC,IAAMG,SAAP,KACE,yBAAKjO,UAAU,WACb,kBAAC+J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkC,GAAG,MACN,kBAACgC,EAAA,EAAD,CAAMlO,UAAU,cACd,kBAACmO,EAAA,EAAD,KACE,kBAACpE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKhK,UAAU,YAAYoO,GAAG,KAC5B,kBAACC,EAAA,EAAD,CAAWlM,IAAI,MAAf,UACA,wBAAInC,UAAU,iBAAd,iBAEF,kBAACgK,EAAA,EAAD,CAAKoE,GAAG,KACN,kBAACE,EAAA,EAAD,CACEtO,UAAU,+BACVkB,cAAY,WAEZ,kBAACO,EAAA,EAAD,CACEU,IAAI,QACJnC,UAAWC,IAAW,aAAc,CAClCsO,OAAoC,UAA5B1O,KAAKR,MAAMwO,eAErBrO,MAAM,OACN2B,GAAG,IACHqN,KAAK,KACLhO,QAAS,kBACP,EAAKjB,SAAS,CACZuO,WAAY,EACZD,aAAc,YAIlB,2BACEY,gBAAc,EACdzO,UAAU,SACVgG,KAAK,UACLzF,KAAK,UAEP,0BAAMP,UAAU,sDAAhB,QAGA,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,+BAGjB,kBAACyB,EAAA,EAAD,CACEjC,MAAM,OACN2B,GAAG,IACHqN,KAAK,KACLrM,IAAI,QACJnC,UAAWC,IAAW,aAAc,CAClCsO,OAAoC,UAA5B1O,KAAKR,MAAMwO,eAErBrN,QAAS,kBACP,EAAKjB,SAAS,CACZuO,WAAY,EACZD,aAAc,YAIlB,2BACE7N,UAAU,SACVgG,KAAK,UACLzF,KAAK,UAEP,0BAAMP,UAAU,sDAAhB,WAGA,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,4BAGjB,kBAACyB,EAAA,EAAD,CACEjC,MAAM,OACN2B,GAAG,IACHqN,KAAK,KACLrM,IAAI,QACJnC,UAAWC,IAAW,aAAc,CAClCsO,OAAoC,UAA5B1O,KAAKR,MAAMwO,eAErBrN,QAAS,kBACP,EAAKjB,SAAS,CACZuO,WAAY,EACZD,aAAc,YAIlB,2BACE7N,UAAU,SACVgG,KAAK,UACLzF,KAAK,UAEP,0BAAMP,UAAU,sDAAhB,YAGA,0BAAMA,UAAU,qBACd,uBAAGA,UAAU,gCAOzB,kBAAC0O,EAAA,EAAD,KACE,kBAAC,GAAD,CACEtJ,KAAMvF,KAAKR,MAAM4N,UAAUpN,KAAKR,MAAMyO,aAAe,WAM/D,kBAAC/D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkC,GAAG,MACN,kBAACgC,EAAA,EAAD,CAAMlO,UAAU,cACd,kBAACmO,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWlM,IAAI,MAAf,iBACA,wBAAInC,UAAU,iBAAd,gCAEF,kBAAC0O,EAAA,EAAD,KACE,kBAAC,GAAD,gB,GA/LM7L,IAAMC,W,iDCiKf6L,G,kDA7Jb,WAAY1P,GAAQ,IAAD,8BACjB,cAAMA,IACDI,MAAQ,CACXuP,cAAc,GAHC,E,qDAMT,IAAD,OACP,OACE,oCACE,yBAAK5O,UAAU,WACb,kBAAC+J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACiE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,wBAAInO,UAAU,SAAd,iBAEF,kBAAC0O,EAAA,EAAD,KACE,kBAACG,GAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKhK,UAAU,UAAUiK,GAAG,KAC1B,kBAAC6E,GAAA,EAAD,KACE,4CACA,kBAACpM,EAAA,EAAD,CAAOC,YAAY,OAAOpC,KAAK,WAGnC,kBAACyJ,EAAA,EAAD,CAAKhK,UAAU,UAAUiK,GAAG,KAC1B,kBAAC6E,GAAA,EAAD,KACE,2BAAOC,QAAQ,sBAAf,iBAGA,kBAACrM,EAAA,EAAD,CAAOC,YAAY,iBAAiBpC,KAAK,aAI/C,kBAACwJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,+CACA,kBAACpM,EAAA,EAAD,CAAOC,YAAY,eAAepC,KAAK,aAG3C,kBAACyJ,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,2CACA,kBAACpM,EAAA,EAAD,CAAOC,YAAY,WAAWpC,KAAK,kBAM7C,kBAACyO,GAAA,EAAD,KACE,kBAACvN,EAAA,EAAD,CAAQzB,UAAU,WAAWR,MAAM,UAAUe,KAAK,UAAlD,YAOR,kBAACwJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACiE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,wBAAInO,UAAU,SAAd,mBAEF,kBAAC0O,EAAA,EAAD,KACE,kBAACG,GAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKhK,UAAU,UAAUiK,GAAG,KAC1B,kBAAC6E,GAAA,EAAD,KACE,4CACA,kBAACpM,EAAA,EAAD,CAAOC,YAAY,OAAOpC,KAAK,WAGnC,kBAACyJ,EAAA,EAAD,CAAKhK,UAAU,UAAUiK,GAAG,KAC1B,kBAAC6E,GAAA,EAAD,KACE,2BAAOC,QAAQ,sBAAf,iBAGA,kBAACrM,EAAA,EAAD,CAAOC,YAAY,iBAAiBpC,KAAK,aAI/C,kBAACwJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,2CACA,kBAACpM,EAAA,EAAD,CAAOC,YAAY,WAAWpC,KAAK,eAGvC,kBAACyJ,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,+CACA,kBAACpM,EAAA,EAAD,CAAOC,YAAY,eAAepC,KAAK,aAG3C,kBAACyJ,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,uCACA,kBAACG,GAAA,EAAD,CACE3N,OAAQzB,KAAKR,MAAMuP,aACnBnM,OAAQ,WACN,EAAKlD,SAAS,CACZqP,cAAe,EAAKvP,MAAMuP,iBAI9B,kBAAChN,EAAA,EAAD,oBACA,kBAACK,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAc6M,QAAM,GAApB,mBAGA,kBAAC7M,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,qBAQd,kBAAC2M,GAAA,EAAD,KACE,kBAACvN,EAAA,EAAD,CAAQzB,UAAU,WAAWR,MAAM,UAAUe,KAAK,UAAlD,cAOR,kBAACwJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACiE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,KACE,wBAAInO,UAAU,SAAd,eAEF,kBAAC0O,EAAA,EAAD,KACE,kBAACS,GAAA,EAAD,CAAOnP,UAAU,cAAcoP,YAAU,GACvC,2BAAOpP,UAAU,gBACf,4BACE,yCACA,0CACA,0CACA,wBAAIA,UAAU,eAAd,yB,GA/IA6C,IAAMC,W,oBCMjBuM,G,4MArBbhQ,MAAQ,CACNiQ,QAAS,I,EAEXC,cAAgB,WACd,OAAO,EAAKlQ,MAAMiQ,S,uDAEV,IAAD,OAIP,OACE,kBAAC,KAAD,CACExH,MAAOjI,KAAKyP,QACZE,OANW,CACbC,UAAU,GAMRC,SAAU,EACVC,OAAQ,SAACC,GAAD,OAAgB,EAAKrQ,SAAS,CAAE+P,QAASM,KACjD3D,SAAU,SAAC2D,W,GAjBE9M,aCCf+M,G,kDAOJ,WAAY5Q,GAAQ,IAAD,8BACjB,cAAMA,IAURgN,SAAW,SAACrL,GAAO,IACTkP,EAAgB,EAAK7Q,MAArB6Q,YACFC,EAAYnP,EAAEoP,cAAclI,MAC5BmI,EAAsBH,EAAY1G,QACtC,SAAC8G,GAAD,OACEA,EAAWC,KAAKC,cAAcrM,QAAQgM,EAAUK,gBAAkB,KAEtE,EAAK7Q,SAAS,CACZ8Q,iBAAkB,EAClBJ,sBACAK,iBAAiB,EACjBP,UAAWnP,EAAEoP,cAAclI,SAtBZ,EAyBnByI,SAAW,WACT,OAAO,EAAKlR,MAAM8B,IA1BD,EA4BnBqP,SAAW,SAACrP,GACV,IAAIsP,EAAQnN,SAASoN,eAAe,EAAKzR,MAAMkC,IAAI2G,MAAM6I,MAAM,KACzDC,EAAQH,EAAM1M,QAAQ5C,GACxByP,GAAS,GACXH,EAAMI,OAAOD,EAAO,GAEtBtN,SAASoN,eAAe,EAAKzR,MAAMkC,IAAI2G,MAAQ2I,EAAMK,QAlCpC,EAoCnBtQ,QAAU,SAACI,GACT,EAAKrB,SAAS,CACZ8Q,iBAAkB,EAClBJ,oBAAqB,GACrBK,iBAAiB,EACjBnP,GAAIP,EAAEoP,cAAc7O,GACpB4O,UAAWnP,EAAEoP,cAAce,WAAWA,WAAWC,YAEhD,EAAK/R,MAAMgS,OAAO,EAAKhS,MAAMgS,MAAMrQ,EAAEoP,cAAc7O,KA5CrC,EA8CnByF,QAAU,SAACxB,GACT,EAAK7F,SAAS,CACZ4B,GAAI,EAAKlC,MAAM6Q,YAAY1G,QAAO,SAACxI,GAAD,OAAOA,EAAEuP,MAAQ/K,KAAM,GAAGjE,GAC5D4O,UAAW3K,KAjDI,EAoDnB8L,eAAiB,SAACC,GAChB,EAAK5R,SAAS,CACZ4B,GAAI,EAAKlC,MAAM6Q,YAAY1G,QAAO,SAACxI,GAAD,OAAOA,EAAEO,IAAMgQ,KAAI,GAAGhQ,GACxD4O,UAAW,EAAK9Q,MAAM6Q,YAAY1G,QAAO,SAACxI,GAAD,OAAOA,EAAEO,IAAMgQ,KAAI,GAAGhB,QAvDhD,EA0DnBiB,UAAY,SAACxQ,GAAO,IAAD,EACiC,EAAKvB,MAA/CgR,EADS,EACTA,iBAAkBJ,EADT,EACSA,oBAC1B,GAAkB,KAAdrP,EAAEyQ,QACJ,EAAK9R,SAAS,CACZ8Q,iBAAkB,EAClBC,iBAAiB,EACjBP,UAAWE,EAAoBI,UAE5B,GAAkB,KAAdzP,EAAEyQ,QAAgB,CAC3B,GAAyB,IAArBhB,EACF,OAGF,EAAK9Q,SAAS,CAAE8Q,iBAAkBA,EAAmB,SAChD,GAAkB,KAAdzP,EAAEyQ,QAAgB,CAC3B,GAAIhB,EAAmB,IAAMJ,EAAoBqB,OAC/C,OAGF,EAAK/R,SAAS,CAAE8Q,iBAAkBA,EAAmB,MA3EvDtC,QAAQC,IAAI/O,GACZ,EAAKI,MAAQ,CACXgR,iBAAkB,EAClBJ,oBAAqB,GACrBK,iBAAiB,EACjBP,UAAW,GACX5O,GAAG,MARY,E,qDAiFT,IAaJoQ,EAXFtF,EASEpM,KATFoM,SACAzL,EAQEX,KARFW,QACA4Q,EAOEvR,KAPFuR,UAJK,EAWHvR,KANFR,MACEgR,EANG,EAMHA,iBACAJ,EAPG,EAOHA,oBACAK,EARG,EAQHA,gBACAP,EATG,EASHA,UAMJ,GAAIO,GAAmBP,EACrB,GAAIE,EAAoBqB,OAAQ,CAC9B,IAAIE,EAAclO,SAASoN,eAAe7Q,KAAKZ,MAAMkC,IAAIsQ,YACzDF,EACE,yBAAKvR,UAAU,OACb,wBACEwJ,MAAK,sBAAiB3J,KAAKZ,MAAMe,WACjC4H,MAAO,CAAE8J,MAAOF,IAEfvB,EAAoB3K,KAAI,SAAC4K,EAAYU,GACpC,IAAI5Q,EAKJ,OAJI4Q,IAAUP,IACZrQ,EAAY,qBAEd+N,QAAQC,IAAIkC,GAEV,wBACElQ,UAAWA,EACXwF,IAAK0K,EAAW/O,GAChBA,GAAI+O,EAAW/O,GACfX,QAASA,GAET,kBAACuJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKiG,EAAWC,WACHrL,GAApBoL,EAAWyB,MAAsB,kBAAC3H,EAAA,EAAD,CAAKC,GAAG,KACxC,4BAAKiG,EAAWyB,QACT,gBAQlB,CACDH,EAAclO,SAASoN,eAAe7Q,KAAKZ,MAAMkC,IAAIsQ,YACzDF,EACE,yBAAKvR,UAAU,8BACb,wBAAIwJ,MAAM,cAAc5B,MAAO,CAAE8J,MAAOF,IACtC,4BACE,2DAOZ,OACE,kBAAC,WAAD,KACE,kBAAC9O,EAAA,EAAD,CACEnC,KAAK,OACLiJ,MAAM,yBACNrI,GAAItB,KAAKZ,MAAMkC,GACfwB,YAAgC,MAAnB9C,KAAKZ,MAAM2S,KAAe,OAAS/R,KAAKZ,MAAM2S,KAC3D3F,SAAUA,EACVmF,UAAWA,EACXxJ,MAAO,CACLuC,UAAWtK,KAAKZ,MAAMkL,WAAa,OACnC0H,YAAa,OACbzH,aAAc,MACd0H,OAAQ,OACR/F,cAAe,MACf2F,MAAO,OACPK,aAAc,QAEhBjK,MAAOiI,IAET,yBAAK/P,UAAU,OAAOuR,Q,GA1KHzO,aAArB+M,GAIG5J,aAAe,CACpB6J,YAAa,IA2KFD,UCjLTA,G,kDASJ,WAAY5Q,GAAQ,IAAD,8BACjB,cAAMA,IAURgN,SAAW,SAACrL,GAAO,IACTkP,EAAgB,EAAK7Q,MAArB6Q,YACFC,EAAYnP,EAAEoP,cAAclI,MAC5BmI,EAAsBH,EAAY1G,QACtC,SAAC8G,GAAD,OACEA,EAAWC,KAAKC,cAAcrM,QAAQgM,EAAUK,gBAAkB,KAEtE,EAAK7Q,SAAS,CACZ8Q,iBAAkB,EAClBJ,sBACAK,iBAAiB,EACjBP,UAAWnP,EAAEoP,cAAclI,SAtBZ,EAyBnB0I,SAAW,SAACrP,GACV,IAAIsP,EAAQnN,SAASoN,eAAe,EAAKzR,MAAMkC,IAAI2G,MAAM6I,MAAM,KACzDC,EAAQH,EAAM1M,QAAQ5C,EAAGwL,YAC3BiE,GAAS,GACXH,EAAMI,OAAOD,EAAO,GAEtBtN,SAASoN,eAAe,EAAKzR,MAAMkC,IAAI2G,MAAQ2I,EAAMK,QA/BpC,EAiCnBkB,aAAe,WACb1O,SAASoN,eAAe,EAAKzR,MAAMkC,IAAI2G,MAAQ,IAlC9B,EAoCnBtH,QAAU,SAACI,GACT,IAAI6P,EAC+C,KAAjDnN,SAASoN,eAAe,EAAKzR,MAAMkC,IAAI2G,MACnC,GACAxE,SAASoN,eAAe,EAAKzR,MAAMkC,IAAI2G,MAAM6I,MAAM,KACrDF,EAAMwB,SAASrR,EAAEuC,OAAOhC,IAC1B+Q,MAAM,gCAENzB,EAAMtI,KAAKvH,EAAEuC,OAAOhC,IACpBmC,SAASoN,eAAe,EAAKzR,MAAMkC,IAAI2G,MAAQ2I,EAAMK,OACrD,EAAK7R,MAAMkT,gBAAgB,CACzBnM,KAAMpF,EAAEoP,cAAcgB,UACtB7P,GAAIP,EAAEuC,OAAOhC,MAGjB,EAAK5B,SAAS,CACZ8Q,iBAAkB,EAClBJ,oBAAqB,GACrBK,iBAAiB,EACjBP,UAAW,MAvDI,EA0DnBqC,gBAAkB,SAAChN,GACjB9B,SAASoN,eAAe,EAAKzR,MAAMkC,IAAI2G,MAAQ1C,EAAKjE,GACpD,EAAKlC,MAAMoT,qBAAqB,CAC9BrM,KAAMZ,EAAKY,KACX7E,GAAIiE,EAAKjE,KAEX,EAAK5B,SAAS,CACZ8Q,iBAAkB,EAClBJ,oBAAqB,GACrBK,iBAAiB,EACjBP,UAAW,MApEI,EAuEnBqB,UAAY,SAACxQ,GAAO,IAAD,EACiC,EAAKvB,MAA/CgR,EADS,EACTA,iBAAkBJ,EADT,EACSA,oBAC1B,GAAkB,KAAdrP,EAAEyQ,QACJ,EAAK9R,SAAS,CACZ8Q,iBAAkB,EAClBC,iBAAiB,EACjBP,UAAWE,EAAoBI,UAE5B,GAAkB,KAAdzP,EAAEyQ,QAAgB,CAC3B,GAAyB,IAArBhB,EACF,OAGF,EAAK9Q,SAAS,CAAE8Q,iBAAkBA,EAAmB,SAChD,GAAkB,KAAdzP,EAAEyQ,QAAgB,CAC3B,GAAIhB,EAAmB,IAAMJ,EAAoBqB,OAC/C,OAGF,EAAK/R,SAAS,CAAE8Q,iBAAkBA,EAAmB,MAvFvD,EAAKhR,MAAQ,CACXgR,iBAAkB,EAClBJ,oBAAqB,GACrBK,iBAAiB,EACjBP,UAAW,IAPI,E,qDA8FT,IAaJwB,EAXFtF,EASEpM,KATFoM,SACAzL,EAQEX,KARFW,QACA4Q,EAOEvR,KAPFuR,UAJK,EAWHvR,KANFR,MACEgR,EANG,EAMHA,iBACAJ,EAPG,EAOHA,oBACAK,EARG,EAQHA,gBACAP,EATG,EASHA,UAKJ,GAAIO,GAAmBP,EACrB,GAAIE,EAAoBqB,OAAQ,CAC9B,IAAIE,EAAclO,SAASoN,eAAe,eAAee,YACzDF,EACE,yBAAKvR,UAAU,OACb,wBAAIwJ,MAAM,cAAc5B,MAAO,CAAE8J,MAAOF,IACrCvB,EAAoB3K,KAAI,SAAC4K,EAAYU,GACpC,IAAI5Q,EAIJ,OAHI4Q,IAAUP,IACZrQ,EAAY,qBAGZ,wBACEA,UAAWA,EACXwF,IAAK0K,EAAW/O,GAChBA,GAAI+O,EAAW/O,GACfX,QAASA,GAER0P,EAAWC,eAOnB,CACDqB,EAAclO,SAASoN,eAAe,eAAee,YACzDF,EACE,yBAAKvR,UAAU,8BACb,wBAAIwJ,MAAM,cAAc5B,MAAO,CAAE8J,MAAOF,IACtC,4BACE,iDAQZ,OACE,kBAAC,WAAD,KACE,2BAAOjR,KAAK,SAASY,GAAItB,KAAKZ,MAAMkC,KACpC,2BACEZ,KAAK,OACLiJ,MAAM,yBACNrI,GAAG,cACHwB,YAAgC,MAAnB9C,KAAKZ,MAAM2S,KAAe,OAAS/R,KAAKZ,MAAM2S,KAC3D3F,SAAUA,EACVmF,UAAWA,EACXxJ,MAAO,CACLuC,UAAW,OACX0H,YAAa,OACbC,OAAQ,OACR/F,cAAe,MACf2F,MAAO,OACPK,aAAc,QAEhBjK,MAAOiI,IAET,yBAAK/P,UAAU,OAAOuR,Q,GAhLHzO,aAArB+M,GAKG5J,aAAe,CACpB6J,YAAa,IAgLFD,ICjLX9Q,GDiLW8Q,MExHAyC,G,kDA9Db,WAAYrT,GAAQ,IAAD,8BACjB,cAAMA,IAKRsT,QAAU,SAACC,GACT,IAAIC,EAAY,EAAKpT,MAAMqT,MAC3BD,EAAUtK,KAAKqK,GACf,EAAKjT,SAAS,CACZmT,MAAOD,KAVQ,EAanBE,kBAAoB,SAACH,GACnB,EAAKjT,SACH,CACEmT,MAAO,KAET,WACE,IAAID,EAAY,EAAKpT,MAAMqT,MAC3BD,EAAUtK,KAAKqK,GACf,EAAKjT,SAAS,CACZmT,MAAOD,QAtBI,EA2BnBG,eAAiB,WACf,EAAKrT,SAAS,CACZmT,MAAO,MA3BT,EAAKrT,MAAQ,CACXqT,MAAO,IAHQ,E,qDAgCT,IAAD,OACP,OACE,kBAAC,IAAMzE,SAAP,KACE,yBAAKjO,UAAU,kBACe,GAA3BH,KAAKR,MAAMqT,MAAMpB,OAChB,0DAEAzR,KAAKR,MAAMqT,MAAMpN,KAAI,SAAC+D,GAAD,OACnB,yBACE7D,IAAK6D,EAAKlI,GACVX,QAAS,WACP,EAAKvB,MAAMuR,SAASnH,EAAKlI,IACzB,IAAI0R,EAAS,EAAKxT,MAAMqT,MAAMtJ,QAAO,SAAC+D,GACpC,OAAOA,EAAQhM,IAAMkI,EAAKlI,MAE5B,EAAK5B,SAAS,CACZmT,MAAOG,MAIVxJ,EAAKrD,e,GArDMlD,aCMPgQ,G,kDACjB,WAAY7T,GAAO,IAAD,8BACd,cAAMA,IAWV8T,YAAc,WACV,OAAO,EAAK1T,OAbE,EAelB2T,WAAa,WACX,EAAKzT,SAAS,CACZyG,KAAM,GACNiN,MAAO,GACPC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,UAAW,GACXlS,GAAG,MAvBW,EA0BlByF,QAAU,SAACxB,GACT,EAAK7F,SAAS,CACZ4B,GAAGiE,EAAKjE,GACR6E,KAAMZ,EAAKY,KACXiN,MAAO7N,EAAK6N,MACZC,UAAW,IAAIjQ,KAAKmC,EAAK8N,WAAWI,cAAc3C,MAAM,KAAK,GAC7DwC,QAAS,IAAIlQ,KAAKmC,EAAK+N,SAASG,cAAc3C,MAAM,KAAK,GACzDyC,QAAShO,EAAKgO,QACdC,UAAWjO,EAAKiO,aAhChB,EAAKhU,MAAQ,CACX8B,GAAG,GACH6E,KAAM,GACNiN,MAAO,GACPC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,UAAW,IATC,E,qDAqCR,IAAD,OACL,OACI,kBAACtJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAAC6E,GAAA,EAAD,KACE,6DACA,kBAACpM,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,cACZmF,MAAOjI,KAAKR,MAAM2G,KAClBiG,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZyG,KAAMpF,EAAEuC,OAAO2E,aAMzB,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,2DACA,kBAACpM,EAAA,EAAD,CACEnC,KAAK,iBACLuH,MAAOjI,KAAKR,MAAM6T,UAClBjH,SAAU,SAACrL,GACTmN,QAAQC,IAAIpN,EAAEuC,OAAO2E,OACrB,EAAKvI,SAAS,CACZ2T,UAAWtS,EAAEuC,OAAO2E,MACpBuL,UAAWzS,EAAEuC,OAAO2E,aAM9B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,yDACA,kBAACpM,EAAA,EAAD,CACEnC,KAAK,iBACLuH,MAAOjI,KAAKR,MAAM8T,QAClBlH,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ4T,QAASvS,EAAEuC,OAAO2E,aAM5B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAAC6E,GAAA,EAAD,KACE,+CACA,kBAACpM,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,QACZmF,MAAOjI,KAAKR,MAAM4T,MAClBhH,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ0T,MAAOrS,EAAEuC,OAAO2E,aAM1B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAAC6E,GAAA,EAAD,KACE,0CACA,kBAACpM,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,qBACZmF,MAAOjI,KAAKR,MAAM+T,QAClBnH,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ6T,QAASxS,EAAEuC,OAAO2E,kB,GA9GLhF,aCAhByQ,G,kDACjB,WAAYtU,GAAO,IAAD,8BACd,cAAMA,IAgBV8T,YAAc,WACV,OAAO,EAAK1T,OAlBE,EAoBlBuH,QAAU,SAACxB,GACT,EAAK7F,SAAS,CACZ4B,GAAGiE,EAAKjE,GACR6E,KAAMZ,EAAKY,KACXwN,OAAQpO,EAAKoO,OACbC,YAAarO,EAAKqO,YAClBC,KAAMtO,EAAKsO,KACXC,cAAevO,EAAKuO,cACpBC,WAAYxO,EAAKwO,WACjBC,SAAUzO,EAAKyO,SACfC,YAAa1O,EAAK0O,YAClBC,YAAa3O,EAAK2O,YAClBC,aAAc5O,EAAK4O,aAAarD,MAAM,KAAK,MA9B3C,EAAKtR,MAAQ,CACX8B,QAAI2D,EACJkB,KAAM,GACNwN,OAAQ,GACRC,YAAa,GACbC,KAAM,GACNC,cAAe,GACfC,WAAY,GACZC,SAAU,GACVC,YAAa,GACbC,YAAa,GACbC,aAAc,IAbF,E,qDAmCR,IAAD,OACL,OACE,kBAAChK,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACD,EAAA,EAAD,CAAKC,GAAG,KAAKjK,UAAU,gBACrB,gDACA,kBAAC8O,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,gBACZmF,MAAOjI,KAAKR,MAAM2G,KAClBiG,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZyG,KAAMpF,EAAEuC,OAAO2E,cAO3B,kBAACgH,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,gDACA,kBAACvH,EAAA,EAAD,CACEnC,KAAK,iBACLuH,MAAOjI,KAAKR,MAAM2U,aAClB/H,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZyU,aAAcpT,EAAEuC,OAAO2E,cAOnC,kBAACiC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,mDACA,kBAAC6E,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,eACZmF,MAAOjI,KAAKR,MAAMqU,KAClBzH,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZmU,KAAM9S,EAAEuC,OAAO2E,eAQ7B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,iDACA,kBAAC6E,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,iBACZmF,MAAOjI,KAAKR,MAAMsU,cAClB1H,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZoU,cAAe/S,EAAEuC,OAAO2E,gBASxC,kBAACiC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,8CACA,kBAAC6E,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,OACZmF,MAAOjI,KAAKR,MAAMuU,WAClB3H,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZqU,WAAYhT,EAAEuC,OAAO2E,eAQnC,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,+CACA,kBAAC6E,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,SACLoC,YAAY,eACZmF,MAAOjI,KAAKR,MAAMyU,YAClB7H,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZuU,YAAalT,EAAEuC,OAAO2E,gBAStC,kBAACiC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,yCACA,kBAAC6E,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,WACZmF,MAAOjI,KAAKR,MAAMmU,OAClBvH,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZiU,OAAQ5S,EAAEuC,OAAO2E,eAQ/B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,8CACA,kBAAC6E,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,WACZmF,MAAOjI,KAAKR,MAAMoU,YAClBxH,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZkU,YAAa7S,EAAEuC,OAAO2E,gBAStC,kBAACiC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,iDACA,kBAAC6E,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,iBACZmF,MAAOjI,KAAKR,MAAMwU,SAClB5H,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZsU,SAAUjT,EAAEuC,OAAO2E,eAQjC,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,+CACA,kBAAC6E,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,OACZmF,MAAOjI,KAAKR,MAAM0U,YAClB9H,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZwU,YAAanT,EAAEuC,OAAO2E,sB,GAhObhF,aCejCmR,GAAM,CACVvC,MAAO,QAGHwC,GAAM,CACVC,WAAY,OACZhK,UAAW,QA0wDEiK,G,kDAtwDb,WAAYnV,GAAQ,IAAD,8BACjB,cAAMA,IA8DRoV,kBAAoB,SAACjP,GACnB,IAAIkP,EAAe,GACnBA,EAAe,EAAKjV,MAAMkV,UAC1B,IAAIC,EAAcC,sBAClBH,EAAanM,KAAK,CAChBuM,UACE,kBAAC,GAAD,CAAWrP,IAAKmP,EAAahP,IAAK,EAAKnG,MAAMkV,UAAUjD,OAAS,IAElEjM,IAAKmP,EACLG,WAAUvP,EACVA,KAAMA,GAAQ,KAEhB,EAAK7F,SAAS,CACZgV,UAAWD,EACXM,UAAWxP,IAAS,EAAK/F,MAAMuV,WAAa,EAAKvV,MAAMuV,aA7ExC,EAgFnBC,kBAAoB,SAACC,GACnB,IAAK,IAAItP,KAAOsP,EACd,GAAsB,KAAlBA,EAAStP,GACX,OAAO,EAGX,OAAO,GAtFU,EAwFnBuP,gBAAkB,SAACvM,GACjB,IAAIpD,EAAOuD,KAAKqM,MAAMxM,GAAGpD,KACzB,EAAK7F,SAAS,CACZ6I,QAAShD,EAAKjE,GACd8T,UAAW7P,EAAKY,KAChBkP,QAAS9P,EAAK+P,WACdC,UAAW,IAAInS,KAAKmC,EAAKmI,UAAU+F,cAAc3C,MAAM,KAAK,GAC5D0E,QAAS,IAAIpS,KAAKmC,EAAKqI,QAAQ6F,cAAc3C,MAAM,KAAK,GACxD2E,UAAWlQ,EAAKmQ,UAAUvP,KAC1BwP,SAAUpQ,EAAKmQ,UAAUE,IACzBC,WAAYtQ,EAAK+P,WACjBQ,wBAAyBvQ,EAAKwQ,eAAejF,MAAM,KACjDvL,EAAKwQ,eAAejF,MAAM,KAAKW,OAAS,GAE1CuE,eAAgBzQ,EAAK0Q,WAAWnF,MAAM,KACpCvL,EAAK0Q,WAAWnF,MAAM,KAAKW,OAAS,GAEtCyE,YAAa3Q,EAAK2Q,YAClBC,UAAW5Q,EAAKmQ,UAAUU,UAC1BC,OAAQ9Q,EAAKmQ,UAAUY,OACvBC,QAAShR,EAAK0N,QAAQxN,KAAI,SAAC4D,GAGzB,OAFAA,EAAC,6BAAQA,GAAR,IAAWgK,UAAW,IAAIjQ,KAAKiG,EAAEmK,UAAY,IAAMnK,EAAEgK,aACtDhK,EAAC,6BAAQA,GAAR,IAAWiK,QAAS,IAAIlQ,KAAKiG,EAAEmK,UAAY,IAAMnK,EAAEiK,cAGtDkD,eAAgBjR,EAAKkR,UAAUhR,KAAI,SAAC4D,GAClC,OAAO,6BACFA,GADL,IAEEqN,iBAA+B,MAAbrN,EAAEsN,aAGxBC,kBAAmBrR,EAAKsR,2BAA2BpR,KAAI,SAAC4D,GACtD,IAAIkE,EAAM,GAMV,OALAA,EAAG,KAAWlE,EAAEyN,UAAU3Q,KAC1BoH,EAAG,SAAelE,EAAE0N,0BAA0B5Q,KAC9CoH,EAAG,yBAA+BlE,EAAE2N,yBACpCzJ,EAAG,WAAiBlE,EAAE4N,WACtB1J,EAAG,GAASlE,EAAE/H,GACPiM,OAGXhI,EAAKmO,UAAUjO,KAAI,SAACyR,GAClB,EAAK1C,kBAAkB0C,MAEzB,EAAKC,WAAWC,QAAQ/F,eAAe,EAAK7R,MAAM2W,WAClD,EAAKkB,QAAQD,QAAQ/F,eAAe,EAAK7R,MAAM6W,QAC/C,EAAKiB,YAAYF,QAAQ/F,eAAe,EAAK7R,MAAMqW,aAtIlC,EAwInB0B,mBAAqB,WACnB5K,QAAQC,IAAI,CACVpE,EAAMC,IAAI,6BACVD,EAAMC,IAAI,0BACVD,EAAMC,IAAI,qBACVD,EAAMC,IAAI,oCACVD,EAAMC,IAAI,sCACTC,MAAK,YAAsB,IAAD,mBAAnBC,EAAmB,KAAhBU,EAAgB,KAAbmO,EAAa,KAAVzW,EAAU,KAAP0W,EAAO,KAC3B,EAAK/X,SAAS,CACZgY,oBAAqB/O,EAAEpD,KAAKE,KAAI,SAAC4D,GAC/B,IAAI4D,EAAI,GAGR,OAFAA,EAAC,KAAW5D,EAAElD,KACd8G,EAAC,GAAS5D,EAAE/H,GACL2L,KAET0K,iBAAkBtO,EAAE9D,KAAKE,KAAI,SAAC4D,GAC5B,IAAI4D,EAAI,GAGR,OAFAA,EAAC,KAAW5D,EAAElD,KACd8G,EAAC,GAAS5D,EAAE/H,GACL2L,KAET2K,qBAAsBJ,EAAEjS,KAAKE,KAAI,SAAC4D,GAChC,IAAI4D,EAAI,GAIR,OAHAA,EAAC,KAAW5D,EAAElD,KACd8G,EAAC,GAAS5D,EAAE/H,GACZ2L,EAAC,MAAY5D,EAAEsC,MACRsB,KAET4K,gBAAiBJ,EAAElS,KAAKE,KAAI,SAAC4D,GAC3B,IAAI4D,EAAI,GAIR,OAHAA,EAAC,KAAW5D,EAAElD,KACd8G,EAAC,GAAS5D,EAAE/H,GACZ2L,EAAC,MAAY5D,EAAEsC,MACRsB,KAET6K,wBAAyB/W,EAAEwE,KAAKE,KAAI,SAAC4D,GACnC,IAAI4D,EAAI,GAGR,OAFAA,EAAC,KAAW5D,EAAElD,KACd8G,EAAC,GAAS5D,EAAE/H,GACL2L,OAGPrE,aAAamP,QAAQ,sBACvB,EAAK7C,gBAAgBtM,aAAamP,QAAQ,0BAnL7B,EAsLnBzF,gBAAkB,SAACK,GACjB,EAAKqF,sBAAsBZ,QAAQ1E,QAAQC,IAvL1B,EAyLnBsF,6BAA+B,SAACtF,GAC9B,EAAKuF,0BAA0Bd,QAAQtE,kBAAkBH,IA1LxC,EA4LnBwF,wCAA0C,SAACxF,GACzC,EAAKqF,sBAAsBZ,QAAQtE,kBAAkBH,IA7LpC,EA+LnByF,oBAAsB,SAACzF,GACrB,EAAKuF,0BAA0Bd,QAAQ1E,QAAQC,IAhM9B,EAkMnB0F,0BAA4B,SAAC1F,GAC3B,EAAK2F,kCAAkClB,QAAQzG,SAASgC,IAnMvC,EAqMnB4F,uCAAyC,SAAC5F,GACxC,EAAK6F,sCAAsCpB,QAAQzG,SAASgC,IAtM3C,EAwMnB8F,sBAAwB,SAACC,GA2BvB,MAAO,CACLb,gBA1BuB,EAAKrY,MAAMoX,kBACUnR,KAAI,SAAC8H,GAAD,oBAAC,gBAC9CA,GAD6C,IAEhDmL,QAASA,OAwBTC,UArBuB,EAAKnZ,MAAMgX,eACK/Q,KAAI,SAAC8H,GAAD,oBAAC,gBACzCA,GADwC,IAE3CmL,QAASA,OAmBThF,UAhBkB,EAAKlU,MAAMkV,UAAUjP,KAAI,SAAC4D,GAAD,OAAOA,EAAE9D,QACnBE,KAAI,SAAC8H,GAAD,oBAAC,gBACnCA,GADkC,IAErCmL,QAASA,OAcTzF,QAVqB,EAAKzT,MAAM+W,QACG9Q,KAAI,SAAC8H,GAAD,oBAAC,gBACrCA,GADoC,IAEvCmL,QAASA,SAhOM,EA0OnBE,YAAc,SAAC7X,GACbA,EAAEC,iBACF,IAAI6X,EAAgB,IAAIC,SAkBxB,GAjBAD,EAAcE,OAAO,OAAQ,EAAKvZ,MAAM4V,WACxCyD,EAAcE,OAAO,WAAY,EAAKvZ,MAAM+V,WAC5CsD,EAAcE,OAAO,SAAU,EAAKvZ,MAAM+V,WAC1CsD,EAAcE,OAAO,aAAc,EAAKvZ,MAAM6V,SAC9CwD,EAAcE,OAAO,iBAAkB,EAAKvZ,MAAMwZ,qBAClDH,EAAcE,OAAO,OAAQ,EAAKvZ,MAAM0W,aACxC2C,EAAcE,OACZ,qBACA,EAAKvZ,MAAMsW,yBAEb+C,EAAcE,OAAO,aAAc,EAAKvZ,MAAMyW,YAC9C4C,EAAcE,OAAO,iBAAkB,EAAKvZ,MAAMwW,gBAClD6C,EAAcE,OAAO,SAAU,EAAKvZ,MAAM6W,QAC1CwC,EAAcE,OAAO,YAAa,EAAKvZ,MAAM2W,WAC7C0C,EAAcE,OAAO,MAAO,EAAKvZ,MAAMmW,UACvCkD,EAAcE,OAAO,YAAa,EAAKvZ,MAAMiW,WAEzC,EAAKjW,MAAM+I,QAAS,CAEtB,IAAImQ,EAAU,EAAKlZ,MAAM+I,QACzBC,EAAMyQ,IAAI,kBAAoB,EAAKzZ,MAAM+I,QAASsQ,GAAenQ,MAC/D,SAACC,GACC,IAAIpD,EAAO,EAAKkT,sBAAsBC,GACtClQ,EAAM8D,KAAK,yBAA0B,CACnC4M,gBAAiB3T,EAAKsS,gBACtBsB,cAAe5T,EAAKmO,UACpB0F,cAAe7T,EAAKoT,UACpBU,YAAa9T,EAAK0N,QAClByF,QAASA,IACRhQ,MAAK,SAACW,GACP6E,QAAQC,IAAI9E,cAKlBb,EAAM8D,KAAK,iBAAkBuM,GAAenQ,MAAK,SAACC,GAChD,GAAqB,WAAjBA,EAAEpD,KAAK+T,OAAqB,CAC9B,IAAIZ,EAAU/P,EAAEpD,KAAKmT,QACjBnT,EAAO,EAAKkT,sBAAsBC,GACtClQ,EAAM8D,KAAK,iBAAkB,CAC3B4M,gBAAiB3T,EAAKsS,gBACtBsB,cAAe5T,EAAKmO,UACpB0F,cAAe7T,EAAKoT,UACpBU,YAAa9T,EAAK0N,QAClByF,QAASA,IACRhQ,MAAK,SAACC,YA1RE,EA+RnB4Q,aAAe,SAACjY,GACd,EAAK5B,SAAS,CACZyW,UAAW7U,KAjSI,EAoSnBkY,UAAY,SAAClY,GACX,EAAK5B,SAAS,CACZ2W,OAAQ/U,KAtSO,EAySnBmY,cAAgB,SAACnY,GACf,EAAK5B,SAAS,CACZ2V,QAAS/T,KAzSX,EAAKoY,UAAY9E,sBACjB,EAAK4B,eAAiB5B,sBACtB,EAAK+E,UAAY/E,sBACjB,EAAKuC,WAAavC,sBAClB,EAAK0C,YAAc1C,sBACnB,EAAKyC,QAAUzC,sBAEf,EAAKoD,sBAAwBpD,sBAC7B,EAAK0D,kCAAoC1D,sBAEzC,EAAKsD,0BAA4BtD,sBACjC,EAAK4D,sCAAwC5D,sBAC7C,EAAKpV,MAAQ,CACX+I,QAAS,KACT6M,UAAW,GACXC,QAAS,KACTE,UAAW,GACXC,QAAS,GACTC,UAAW,GACXE,SAAU,GACVM,WAAY,GACZ+C,oBAAqB,GACrBY,eAAe,EACf9D,wBAAyB,oBACzBG,WAAY,GACZD,eAAgB,oBAChBE,YAAa,GACbC,UAAW,KACXE,OAAQ,KACRR,WAAY,KACZgE,yBAAyB,EACzBC,iCAAiC,EACjCC,kCAAkC,EAClCC,uBAAuB,EACvBrC,iBAAkB,GAClBC,qBAAsB,GACtBF,oBAAqB,GACrBhD,UAAW,GACX6B,QAAS,GACT0D,oBAAqB,KACrBlF,WAAW,EACXmF,oBAAqB,GACrBC,mBAAoB,GACpBC,2BAA4B,GAC5BvC,gBAAiB,GACjBrB,eAAgB,GAChBI,kBAAmB,GACnBkB,wBAAyB,GACzBuC,aAAa,EACbC,cAAc,EACdC,gBAAiB,qBACjBC,gBAAiB,qBACjBC,gBAAgB,EAChBC,kBAAkB,EAClBC,qBAAsB,KACtBC,yBAAyB,EACzBC,8BAA+B,KAC/BC,kCAAmC,KACnCC,sBAAuB,MA5DR,E,qDA8ST,IAAD,OACP,OACE,kBAAC,IAAM3M,SAAP,KACE,yBAAKjO,UAAU,WACb,kBAAC+J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACiE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWlM,IAAI,MAAf,iBACA,wBAAInC,UAAU,iBAAd,iBAEF,kBAAC0O,EAAA,EAAD,KACE,kBAACG,GAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,6CACA,kBAACpM,EAAA,EAAD,CACEC,YAAY,aACZpC,KAAK,OACLuH,MAAOjI,KAAKR,MAAM4V,UAClBhJ,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ0V,UAAWrU,EAAEuC,OAAO2E,aAM9B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,2CACA,kBAAC,GAAD,CACEgB,YAAajQ,KAAKR,MAAMoY,qBACxB7F,KAAM,gBACNzH,UAAW,MACXhJ,GAAI,aACJ4K,cAAe,MACf1G,IAAKxF,KAAKsX,YACVlG,MAAOpR,KAAKyZ,kBAIlB,kBAACtP,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,6CACA,kBAACpM,EAAA,EAAD,CACEnC,KAAK,OACLuH,MAAOjI,KAAKR,MAAM+V,UAClBnJ,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ6V,UAAWxU,EAAEuC,OAAO2E,aAM9B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,2CACA,kBAACpM,EAAA,EAAD,CACEnC,KAAK,OACLuH,MAAOjI,KAAKR,MAAMgW,QAClBpJ,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ8V,QAASzU,EAAEuC,OAAO2E,aAM5B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,6CACA,kBAACpM,EAAA,EAAD,CACEC,YAAY,YACZpC,KAAK,OACLuH,MAAOjI,KAAKR,MAAMiW,UAClBrJ,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ+V,UAAW1U,EAAEuC,OAAO2E,aAM9B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,qDACA,kBAACpM,EAAA,EAAD,CACEC,YAAY,MACZpC,KAAK,OACLuH,MAAOjI,KAAKR,MAAMmW,SAClBvJ,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZiW,SAAU5U,EAAEuC,OAAO2E,aAM7B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,wDACA,yBAAKjK,UAAU,oBACb,kBAAC0C,EAAA,EAAD,CACEnC,KAAK,OACLP,UAAU,oBACViM,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZsZ,oBAAqBjY,EAAEuC,OAAO0X,MAAM,GACpClF,wBAAyB/U,EAAEuC,OAAO0X,MAAM,GAAG7U,UAIjD,2BACEhG,UAAU,oBACV+O,QAAQ,wBAEPlP,KAAKR,MAAMsW,2BAIlB,kBAAC3L,EAAA,EAAD,CAAKC,GAAG,KACN,mDACA,yBAAKjK,UAAU,oBACb,kBAAC0C,EAAA,EAAD,CACEnC,KAAK,OACLP,UAAU,oBACViM,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZuW,WAAYlV,EAAEuC,OAAO0X,MAAM,GAC3BhF,eAAgBjV,EAAEuC,OAAO0X,MAAM,GAAG7U,UAIxC,2BACEhG,UAAU,oBACV+O,QAAQ,wBAEPlP,KAAKR,MAAMwW,kBAIlB,kBAAC7L,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,0CACA,kBAAC,GAAD,CACEgB,YAAajQ,KAAKR,MAAMkY,oBACxB3F,KAAM,eACNzH,UAAW,MACXhJ,GAAI,oBACJkE,IAAKxF,KAAKmX,WACV/F,MAAOpR,KAAKuZ,iBAIlB,kBAACpP,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,uCACA,kBAAC,GAAD,CACEgB,YAAajQ,KAAKR,MAAMmY,iBACxB5F,KAAM,YACNzH,UAAW,MACXhJ,GAAI,iBACJkE,IAAKxF,KAAKqX,QACVjG,MAAOpR,KAAKwZ,cAIlB,kBAACrP,EAAA,EAAD,CAAKC,GAAG,MACN,+CACA,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACxI,EAAA,EAAD,CACEjC,MAAOK,KAAKR,MAAM8a,aAAe,SAAW,GAC5C3Z,QAAS,WACH,EAAKnB,MAAM8a,cACb,EAAK5a,SAAS,CACZwW,YAAa,EAAKwD,UAAUtC,QAAQ1H,kBAGxC,EAAKhQ,SAAS,CACZ4a,cAAe,EAAK9a,MAAM8a,iBAI7Bta,KAAKR,MAAM8a,aACR,sBACA,iBAITta,KAAKR,MAAM8a,aACV,kBAAC,GAAD,CAAQ9U,IAAKxF,KAAK0Z,YAChB,YAQlB,kBAACxP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACiE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWlM,IAAI,MAAf,yBACA,wBAAInC,UAAU,iBAAd,wBAEF,kBAAC0O,EAAA,EAAD,KACE,kBAAC3E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACLpK,KAAKR,MAAMqa,wBACV,kBAAC1P,EAAA,EAAD,CAAKC,GAAG,MACN,kBAAC6E,GAAA,EAAD,KACE,qDACA,kBAACpM,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,OACZmF,MAAOjI,KAAKR,MAAM2a,mBAClB/N,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZya,mBAAoBpZ,EAAEuC,OAAO2E,YAKrC,kBAACgH,GAAA,EAAD,KACE,+CACA,yBACElH,MAAO,CACL2B,QAAS,SAGX,kBAAC7G,EAAA,EAAD,CACEsD,KAAK,SACLhG,UAAU,eACV4H,MAAO,CACLkT,KAAM,IACN3Q,UAAW,OAEbrC,MAAOjI,KAAKR,MAAM0a,oBAClB9N,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZwa,oBAAqBnZ,EAAEuC,OAAO2E,SAGlCnF,YAAY,iBAEd,4BACE0E,UAAWxH,KAAKR,MAAMwa,sBACtBjS,MAAO,CACLuM,WAAY,QAEd3K,MAAM,kBACNhJ,QAAS,SAACI,GACRA,EAAEC,iBACF,EAAKtB,SAAS,CACZsa,uBAAwB,EAAKxa,MAC1Bwa,wBAELxR,EAAM8D,KACJ,kCACA,CACEnG,KAAM,EAAK3G,MAAM2a,mBACjBxO,MAAO,EAAKnM,MAAM0a,sBAEpBxR,MAAK,SAACC,GACN,GAAsB,WAAlBA,EAAEpD,KAAK2V,QAAsB,CAC/B,IAAIC,EAAO,EAAK3b,MAAMqY,gBACtBsD,EAAK7S,KAAK,CACRgI,KAAM,EAAK9Q,MAAM2a,mBACjBrI,MAAO,EAAKtS,MAAM0a,oBAClB5Y,GAAIqH,EAAEpD,KAAKA,OAEb,EAAK7F,SAAS,CACZsa,uBAAwB,EAAKxa,MAC1Bwa,sBACHG,mBAAoB,GACpBD,oBAAqB,GACrBL,yBAA0B,EAAKra,MAC5Bqa,wBACHhC,gBAAiBsD,UAMxBnb,KAAKR,MAAMwa,sBACR,OACA,aAEN,4BACExS,UAAWxH,KAAKR,MAAMwa,sBACtBjS,MAAO,CACLuM,WAAY,OACZtM,QAAS,QAEX2B,MAAM,iBACNhJ,QAAS,SAACI,GACRA,EAAEC,iBACF,EAAKtB,SAAS,CACZya,mBAAoB,GACpBD,oBAAqB,GACrBL,yBAA0B,EAAKra,MAC5Bqa,4BAIP,uBAAG1Z,UAAU,qCAMrB,kBAACgK,EAAA,EAAD,CAAKC,GAAG,KAAKjK,UAAU,gBACrB,sDACA,0BACEwJ,MAAM,8DACN5B,MAAOqM,IAEP,yBACEjU,UAAU,2BACV4H,MAAO,CAAEkT,KAAM,MAEf,kBAAC,GAAD,CACEhL,YAAajQ,KAAKR,MAAMqY,gBACxBvW,GAAI,0BACJgR,gBAAiBtS,KAAKsS,gBACtBE,qBACExS,KAAKmY,wCAEP3S,IAAKxF,KAAKsY,qCAGd,yBAAK3O,MAAM,cACT,4BACEhJ,QAAS,SAACI,GACRA,EAAEC,iBACF,EAAKtB,SAAS,CACZma,yBAA0B,EAAKra,MAC5Bqa,2BAGP1Z,UAAU,kBACV4H,MAAOsM,IATT,WAeJ,kBAAC,GAAD,CACE7O,IAAKxF,KAAKgY,sBACVrH,SAAU3Q,KAAKqY,6BAIpBrY,KAAKR,MAAMsa,gCACV,kBAAC3P,EAAA,EAAD,CAAKC,GAAG,MACN,kBAAC6E,GAAA,EAAD,KACE,8DACA,yBACElH,MAAO,CACL2B,QAAS,SAGX,kBAAC7G,EAAA,EAAD,CACEsD,KAAK,SACLhG,UAAU,eACV8H,MAAOjI,KAAKR,MAAM4a,2BAClBhO,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ0a,2BAA4BrZ,EAAEuC,OAAO2E,SAGzCF,MAAO,CACLkT,KAAM,IACN3Q,UAAW,OAEbxH,YAAY,kBAEd,4BACEiF,MAAO,CACLuM,WAAY,QAEd9M,UACGxH,KAAKR,MAAMua,iCAEdpQ,MAAM,kBACNhJ,QAAS,SAACI,GACRA,EAAEC,iBACF,EAAKtB,SAAS,CACZqa,kCAAmC,EAChCva,MAAMua,mCAEXvR,EAAM8D,KACJ,kCACA,CACEnG,KAAM,EAAK3G,MACR4a,6BAEL1R,MAAK,SAACC,GACN,GAAsB,WAAlBA,EAAEpD,KAAK2V,QAAsB,CAC/B,IAAIC,EAAO,EAAK3b,MACbsY,wBACHqD,EAAK7S,KAAK,CACRgI,KAAM,EAAK9Q,MACR4a,2BACH9Y,GAAIqH,EAAEpD,KAAKA,OAEb,EAAK7F,SAAS,CACZoY,wBAAyBqD,EACzBpB,kCAAmC,EAChCva,MACAua,iCACHK,2BAA4B,GAC5BN,iCAAkC,EAC/Bta,MACAsa,wCAMV9Z,KAAKR,MAAMua,iCACR,OACA,aAEN,4BACEhS,MAAO,CACLuM,WAAY,OACZtM,QAAS,QAEX2B,MAAM,iBACNhJ,QAAS,SAACI,GACRA,EAAEC,iBACF,EAAKtB,SAAS,CACZya,mBAAoB,GACpBD,oBAAqB,GACrBJ,iCAAkC,EAAKta,MACpCsa,oCAIP,uBAAG3Z,UAAU,qCAMrB,kBAACgK,EAAA,EAAD,CAAKC,GAAG,KAAKjK,UAAU,gBACrB,0DACA,0BACEwJ,MAAM,8DACN5B,MAAOqM,IAEP,yBACEjU,UAAU,2BACV4H,MAAO,CAAEkT,KAAM,MAEf,kBAAC,GAAD,CACEhL,YAAajQ,KAAKR,MAAMsY,wBACxBxW,GAAI,kCACJgR,gBAAiBtS,KAAKoY,oBACtB5F,qBACExS,KAAKiY,6BAEPzS,IAAKxF,KAAKwY,yCAGd,yBAAK7O,MAAM,cACT,4BACEA,MAAM,kBACNjJ,KAAK,SACLqH,MAAOsM,GACP1T,QAAS,SAACI,GACRA,EAAEC,iBACF,EAAKtB,SAAS,CACZoa,iCAAkC,EAAKta,MACpCsa,oCART,WAgBJ,kBAAC,GAAD,CACEtU,IAAKxF,KAAKkY,0BACVvH,SACE3Q,KAAKuY,2CAMf,kBAACpO,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACkF,GAAA,EAAD,CAAOnP,UAAU,cAAcoP,YAAU,GACvC,2BAAOpP,UAAU,gBACf,4BACE,mDACA,wCACA,wBAAIA,UAAU,eAAd,aAGJ,+BACGH,KAAKR,MAAMoX,kBAAkBnR,KAAI,SAAC4D,GAAD,OAChC,4BACE,4BAAKA,EAAEiH,MACP,4BAAKjH,EAAE+R,UACP,4BACE,kBAAClR,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,IACHjK,UAAU,gCACV4H,MAAO,CACLC,QAAS,OAEXrH,QAAS,WACP,IAAIwa,EAAO,EAAK3b,MAAMoX,kBAChB7F,EAAQoK,EAAKjX,QAAQmF,GACvB0H,GAAS,GACXoK,EAAKnK,OAAOD,EAAO,GAErB,EAAKrR,SAAS,CACZkX,kBAAmBuE,MAIvB,uBACEhb,UAAU,+CACV4H,MAAO,CAAEsT,OAAQ,cAGrB,kBAAClR,EAAA,EAAD,CACEpC,MAAO,CACLC,QAAS,OAEXoC,GAAG,IACHjK,UAAU,gCACVQ,QAAS,WACP,EAAKjB,SAAS,CACZkb,yBAAyB,EACzBC,8BACExR,EAAE4N,WACJ6D,kCACEzR,EAAE2N,2BAEN,EAAKsB,kCAAkClB,QAAQ7E,gBAC7C,CAAEjR,GAAI+H,EAAE4N,WAAY9Q,KAAMkD,EAAEiH,OAE9B,EAAKkI,sCAAsCpB,QAAQ7E,gBACjD,CACEjR,GAAI+H,EAAE2N,yBACN7Q,KAAMkD,EAAE+R,aAKd,uBACEjb,UAAU,kCACV4H,MAAO,CAAEsT,OAAQ,wBAWrC,kBAACnR,EAAA,EAAD,CAAK/J,UAAU,2BACb,kBAACgK,EAAA,EAAD,CAAKC,GAAG,IAAIiC,GAAG,KAAKlM,UAAU,8BAC5B,kBAACyB,EAAA,EAAD,CACEjC,MAAM,UACNQ,UAAU,UACVqH,UAAWxH,KAAKR,MAAMob,wBACtBja,QAAS,WACP,EAAKqX,sBAAsBZ,QAAQrE,iBACnC,EAAKmF,0BAA0Bd,QAAQrE,iBAGvC,EAAKuF,kCAAkClB,QAAQjF,eAC/C,EAAKqG,sCAAsCpB,QAAQjF,eACnD,EAAKzS,SAAS,CACZkb,yBAAyB,EACzBC,8BAA+B,KAC/BC,kCAAmC,SAdzC,iBAoBA,kBAAClZ,EAAA,EAAD,CACEjC,MAAM,UACNgB,QAAS,WACP,GAEc,IADZ8C,SAASoN,eAAe,2BACrB5I,OAGQ,IAFXxE,SAASoN,eACP,mCACA5I,MACF,CACA,IAAIqT,EAAqB7X,SACtBoN,eAAe,2BACf5I,MAAM6I,MAAM,KACXyK,EAAwB9X,SACzBoN,eAAe,mCACf5I,MAAM6I,MAAM,KACX0K,EAAuB,GAC3BF,EAAmBG,SAAQ,SAACnO,GAC1B,IAAI6M,EAAqB,EAAK3a,MAAMqY,gBAAgBtO,QAClD,SAACF,GAAD,OAAOA,EAAE/H,IAAMgM,KACf,GAFuB,KAGzBiO,EAAsBE,SAAQ,SAACC,GAC7B,IAAInO,EAAM,GACVA,EAAG,KAAW4M,EACd5M,EAAG,WAAiBD,EACpBC,EAAG,yBAA+BmO,EAClCnO,EAAG,SAEC,EAAK/N,MAAMsY,wBAAwBvO,QACrC,SAACF,GAAD,OAAOA,EAAE/H,IAAMoa,KACf,GAFE,KAGJF,EAAqBlT,KAAKiF,SAO9B,IAJA,IACIoO,EADU,EAAKnc,MAAMoX,kBACJgF,OAAOJ,GACxBK,EAAS,GACTC,EAAW,GACNC,EAAI,EAAGA,EAAIJ,EAAOlK,OAAQsK,IAE9BF,EACCF,EAAOI,GAAG9E,WACR,IACA0E,EAAOI,GAAG/E,4BAGd8E,EAASxT,KAAK,CACZgI,KAAMqL,EAAOI,GAAGzL,KAChB8K,SAAUO,EAAOI,GAAGX,SACpBnE,WAAY0E,EAAOI,GAAG9E,WACtBD,yBACE2E,EAAOI,GAAG/E,yBACZ1V,GAAIqa,EAAOI,GAAGza,KAEhBua,EACEF,EAAOI,GAAG9E,WACR,IACA0E,EAAOI,GAAG/E,0BACV,GAGR9I,QAAQC,IAAI2N,GACZ,IAAI/K,EAAQ+K,EAAS5X,QACnB4X,EAASvS,QACP,SAACF,GAAD,OACEA,EAAE4N,YACA,EAAKzX,MAAMqb,+BACbxR,EAAE2N,0BACA,EAAKxX,MAAMsb,qCACf,IAEA/J,GAAS,GACX+K,EAAS9K,OAAOD,EAAO,GAEzB,EAAKrR,SAAS,CACZkX,kBAAmBkF,EACnBjB,8BAA+B,KAC/BC,kCAAmC,KACnCF,yBAA0B,EAAKpb,MAC5Bob,0BAEL,EAAK5C,sBAAsBZ,QAAQrE,iBACnC,EAAKmF,0BAA0Bd,QAAQrE,iBAGvC,EAAKuF,kCAAkClB,QAAQjF,eAC/C,EAAKqG,sCAAsCpB,QAAQjF,kBAtFzD,aAkGZ,kBAACjI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACiE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWlM,IAAI,MAAf,oBAEF,kBAACuM,EAAA,EAAD,KACE,kBAACG,GAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAAC6E,GAAA,EAAD,KACE,qDACA,kBAACpM,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,OACZxB,GAAG,oBAIT,kBAAC6I,EAAA,EAAD,CAAKC,GAAG,MACN,kBAAC6E,GAAA,EAAD,KACE,iDACA,kBAACpM,EAAA,EAAD,CACEnC,KAAK,SACLoC,YAAY,QACZxB,GAAG,qBAIT,kBAAC6I,EAAA,EAAD,CAAKC,GAAG,MACN,kBAAC6E,GAAA,EAAD,KACE,iDACA,kBAACpM,EAAA,EAAD,CACEnC,KAAK,QACLoC,YAAY,QACZxB,GAAG,qBAIT,kBAAC6I,EAAA,EAAD,CAAKC,GAAG,MACN,kBAAC6E,GAAA,EAAD,KACE,oDACA,kBAACpM,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,WACZxB,GAAG,wBAIT,kBAAC6I,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACD,EAAA,EAAD,CAAKC,GAAG,KAAKjK,UAAU,gBACrB,kDACA,kBAAC8O,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,cACZxB,GAAG,oBAGP,kBAAC6I,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,YACZxB,GAAG,oBAKX,kBAAC2N,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,yBAAKjK,UAAU,oBACb,kBAAC0C,EAAA,EAAD,CACEnC,KAAK,OACLP,UAAU,oBACVmB,GAAG,mBACH8K,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ6a,gBACExZ,EAAEuC,OAAO0X,MAAM,GAAG7U,UAI1B,2BACEhG,UAAU,oBACV+O,QAAQ,wBAEPlP,KAAKR,MAAM+a,uBAQ1B,kBAACpQ,EAAA,EAAD,CAAKC,GAAG,MACN,kBAAC6E,GAAA,EAAD,KACE,2BAAOtF,MAAM,YACX,2BACEjJ,KAAK,WACLY,GAAG,kBACH8K,SAAU,WACR,EAAK1M,SAAS,CACZ2a,aAAc,EAAK7a,MAAM6a,eAG7BtS,MAAO,CACLiU,YAAa,SAVnB,oCAiBJ,kBAAC7R,EAAA,EAAD,CAAKC,GAAG,MACN,8BAAU5C,SAAUxH,KAAKR,MAAM6a,aAC7B,kBAAClQ,EAAA,EAAD,CAAKC,GAAG,KAAKjK,UAAU,gBACrB,kDAEGH,KAAKR,MAAM6a,YAAc,cAAgB,IAE5C,kBAACpL,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,cACZxB,GAAG,oBAGP,kBAAC6I,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACvH,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,YACZxB,GAAG,oBAKX,kBAAC2N,GAAA,EAAD,KACE,kBAAC/E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,yBAAKjK,UAAU,oBACb,kBAAC0C,EAAA,EAAD,CACEnC,KAAK,OACLP,UAAU,oBACVmB,GAAG,iBACH8K,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ8a,gBACEzZ,EAAEuC,OAAO0X,MAAM,GAAG7U,UAI1B,2BACEhG,UAAU,oBACV+O,QAAQ,wBAEPlP,KAAKR,MAAMgb,wBAS5B,kBAACrQ,EAAA,EAAD,CAAKC,GAAG,KAAKjK,UAAU,8BACrB,kBAACyB,EAAA,EAAD,CACEjC,MAAM,UACNQ,UAAU,UACVqH,UAAWxH,KAAKR,MAAMkb,iBACtB/Z,QAAS,WACP8C,SAASoN,eAAe,iBAAiB5I,MACvC,GACFxE,SAASoN,eACP,kBACA5I,MAAQ,GACVxE,SAASoN,eACP,kBACA5I,MAAQ,GACVxE,SAASoN,eACP,qBACA5I,MAAQ,GACVxE,SAASoN,eACP,kBACA5I,MAAQ,GACVxE,SAASoN,eAAe,gBAAgB5I,MACtC,GACFxE,SAASoN,eACP,kBACA5I,MAAQ,GACVxE,SAASoN,eAAe,gBAAgB5I,MACtC,GACFxE,SAASoN,eACP,mBACAoL,SAAU,EACZ,EAAKvc,SAAS,CACZ2a,aAAa,EACbE,gBAAiB,qBACjBC,gBAAiB,qBACjBE,kBAAkB,EAClBK,sBAAuB,SAlC7B,iBAwCA,kBAACnZ,EAAA,EAAD,CACEjC,MAAM,UACNQ,UAAU,UACVQ,QAAS,WACP,EAAKjB,SAAS,CACZka,eAAgB,EAAKpa,MAAMoa,gBAE7B,IAAIsC,EAAiB,GACrBA,EAAc,KAEVzY,SAASoN,eACX,iBACA5I,MAEFiU,EAAc,MAEVzY,SAASoN,eACX,kBACA5I,MAEFiU,EAAc,MAEVzY,SAASoN,eACX,kBACA5I,MAEFiU,EAAc,SAEVzY,SAASoN,eACX,qBACA5I,MACFiU,EAAc,YAEVzY,SAASoN,eACX,kBACA5I,MAEFiU,EAAc,UAEVzY,SAASoN,eACX,gBACA5I,MACFiU,EAAc,mBAAuB,EAAK1c,MACvC6a,YAGH6B,EAAc,QAEV,EAAK1c,MAAM+a,gBACf2B,EAAc,QAEV,EAAK1c,MAAMgb,gBAEf,IAAI2B,EAAa1Y,SAASoN,eACxB,oBACAmK,MAAM,GACJoB,EAAU,KACVC,EAAa,IAAIC,WACrBD,EAAWE,OAAS,SAAUC,GAC5BJ,EAAUI,EAAgBlZ,OAAOmZ,OACjCP,EAAc,eAAqBE,GAEjCD,GACFE,EAAWK,cAAcP,GAI3B,IAAIQ,EAAU,KACd,IAAK,EAAKnd,MAAM6a,YAAa,CAC3B6B,EAAc,YAEVzY,SAASoN,eACX,kBACA5I,MACFiU,EAAc,UAEVzY,SAASoN,eACX,gBACA5I,MACF,IAAI2U,EAAmBnZ,SAASoN,eAC9B,kBACAmK,MAAM,GACJ6B,EAAgB,IAAIP,WACxBO,EAAcN,OAAS,SACrBO,GAEAH,EAAUG,EAAiBxZ,OAAOmZ,OAClCP,EAAc,aAAmBS,GAEnCE,EAAcH,cAAcE,GAE9B,IAAIG,EAAK,EAAKvd,MAAMgX,eACpB,GAAI,EAAKhX,MAAMub,sBAAuB,CACpC,IAAIhK,EAAQgM,EAAG7Y,QACb6Y,EAAGxT,QACD,SAACF,GAAD,OACEA,EAAEsC,OACF,EAAKnM,MAAMub,yBACb,IAEAhK,GAAS,GACXgM,EAAG/L,OAAOD,EAAO,GAEnBmL,EAAe5a,GAAK,EAAK9B,MAAMwd,mBAC/BD,EAAGzU,KAAK4T,GACRhO,QAAQC,IAAI4O,QAEZA,EAAGzU,KAAK4T,GAGV,EAAKxc,SAAS,CACZ8W,eAAgBuG,EAChBnD,eAAgB,EAAKpa,MAAMoa,cAC3BS,aAAa,EACbE,gBAAiB,qBACjBC,gBAAiB,qBACjBE,kBAAkB,EAClBK,sBAAuB,OAEzBtX,SAASoN,eAAe,iBAAiB5I,MACvC,GACFxE,SAASoN,eACP,kBACA5I,MAAQ,GACVxE,SAASoN,eACP,kBACA5I,MAAQ,GACVxE,SAASoN,eACP,qBACA5I,MAAQ,GACVxE,SAASoN,eACP,kBACA5I,MAAQ,GACVxE,SAASoN,eAAe,gBAAgB5I,MACtC,GACFxE,SAASoN,eACP,kBACA5I,MAAQ,GACVxE,SAASoN,eAAe,gBAAgB5I,MACtC,GACFxE,SAASoN,eACP,mBACAoL,SAAU,IA9IhB,UAsJN,kBAAC9R,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACkF,GAAA,EAAD,CAAOnP,UAAU,cAAcoP,YAAU,GACvC,2BAAOpP,UAAU,gBACf,4BACE,6CACA,8CACA,wBAAIA,UAAU,eAAd,aAGJ,+BACGH,KAAKR,MAAMgX,eAAe/Q,KAAI,SAAC6H,GAAD,OAC7B,wBACEvF,MAAO,CACLyC,gBAAiB,EAAKwK,kBACpB1H,GAEE,YACA,gBAGN,4BAAKA,EAAO,MACZ,4BAAKA,EAAO,OACZ,4BACE,kBAACpD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,IACHrC,MAAO,CACLC,QAAS,OAEX7H,UAAU,gCACVQ,QAAS,WACP,IAAIwa,EAAO,EAAK3b,MAAMgX,eAClBzF,EAAQoK,EAAKjX,QAAQoJ,GACrByD,GAAS,GACXoK,EAAKnK,OAAOD,EAAO,GAErB,EAAKrR,SAAS,CACZ8W,eAAgB2E,MAIpB,uBAAGhb,UAAU,kDAEf,kBAACgK,EAAA,EAAD,CACEC,GAAG,IACHrC,MAAO,CACLC,QAAS,OAEX7H,UAAU,gCACVQ,QAAS,WAAO,IAAD,EACb,EAAKjB,SAAS,CACZqb,sBAAuBzN,EAAQ3B,QAEjClI,SAASoN,eACP,iBACA5I,MAAQqF,EAAO,KACjB7J,SAASoN,eACP,kBACA5I,MAAQqF,EAAO,MACjB7J,SAASoN,eACP,kBACA5I,MAAQqF,EAAO,MACjB7J,SAASoN,eACP,qBACA5I,MAAQqF,EAAO,SACjB7J,SAASoN,eACP,kBACA5I,MAAQqF,EAAO,YACjB7J,SAASoN,eACP,gBACA5I,MAAQqF,EAAO,UACjB7J,SAASoN,eACP,kBACA5I,MAAQqF,EAAO,aAAmB,GACpC7J,SAASoN,eACP,gBACA5I,MAAQqF,EAAO,WAAiB,GAClC7J,SAASoN,eACP,mBACAoL,QAC0B,MAA1B3O,EAAO,YACT,EAAK5N,SAAS,CACZgb,kBAAkB,EAClBL,YAC4B,MAA1B/M,EAAO,YACTiN,gBAAiBjN,EAAO,QAEtBwD,MAAM,KACNxD,EAAO,QAAYwD,MAAM,KACtBW,OAAS,GAEd+I,iBACE,UAAAlN,EAAO,eAAP,eAAoBwD,MAAM,KACxBxD,EAAO,QAAYwD,MAAM,KACtBW,OAAS,KACT,yBAIX,uBAAGtR,UAAU,oDAezC,kBAAC+J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACiE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWlM,IAAI,MAAf,mBACA,kBAAC4H,EAAA,EAAD,CAAK/J,UAAU,2BACb,kBAACgK,EAAA,EAAD,CAAKC,GAAG,IAAIiC,GAAG,IAAIlM,UAAU,6BAC3B,wBAAIA,UAAU,iBAAd,qBAEF,kBAACgK,EAAA,EAAD,CAAKC,GAAG,IAAIiC,GAAG,IAAIlM,UAAU,8BAC3B,kBAACyB,EAAA,EAAD,CACEjC,MAAM,UACNgB,QAAS,kBAAM,EAAK6T,qBACpBhN,UAAWxH,KAAKR,MAAMuV,WAHxB,iBAUN,kBAAClG,EAAA,EAAD,KACE,kBAACG,GAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,KACGlK,KAAKR,MAAMkV,UAAUjP,KAAI,SAAC6H,GAAD,OACxBA,EAAQwH,SAAW,KAAOxH,EAAQuH,cAGtC,kBAAC3K,EAAA,EAAD,CAAK/J,UAAU,2BACZH,KAAKR,MAAMuV,UAAY,KACtB,kBAAC5K,EAAA,EAAD,CACEC,GAAG,KACHiC,GAAG,KACHlM,UAAU,8BAEV,kBAACyB,EAAA,EAAD,CACEjC,MAAM,UACNgB,QAAS,WACP,IAAIwa,EAAO,EAAK3b,MAAMkV,UACtByG,EAAKM,SAAQ,SAACnO,GACZ,IAAIyD,EACCzD,EAAQwH,WACNxH,EAAQ/H,KAAKjE,KAChByP,EAAQoK,EAAKjX,QAAQoJ,IAEvBA,EAAQwH,UAAYxH,EAAQwH,UAE1B/D,GAAS,GACXoK,EAAKnK,OAAOD,EAAO,GAErB,EAAKrR,SAAS,CACZgV,UAAWyG,EACXpG,WAAY,EAAKvV,MAAMuV,iBAjB/B,UAwBA,kBAACnT,EAAA,EAAD,CACEjC,MAAM,UACNgB,QAAS,WACP,IAAIsc,EAAgB,EAAKzd,MAAMkV,UAC/BuI,EAAcxB,SAAQ,SAACnO,GAChBA,EAAQwH,WACXxH,EAAQ/H,KAAO+H,EAAQ9H,IAAI4R,QAAQlE,cACnC5F,EAAQwH,UAAYxH,EAAQwH,aAGhC,EAAKpV,SAAS,CACZgV,UAAWuI,EACXlI,WAAY,EAAKvV,MAAMuV,cAZ7B,UAqBN,kBAAC7K,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACkF,GAAA,EAAD,CAAOnP,UAAU,cAAcoP,YAAU,GACvC,2BAAOpP,UAAU,gBACf,4BACE,6CACA,oCACA,sCACA,2CACA,wBAAIA,UAAU,eAAd,aAGJ,+BACGH,KAAKR,MAAMkV,UAAUjP,KAAI,SAAC6H,GAAD,OACxBA,EAAQwH,SACN,4BACE,4BAAKxH,EAAQ/H,KAAKY,MAClB,4BAAKmH,EAAQ/H,KAAK4O,cAClB,4BAAK7G,EAAQ/H,KAAKoO,QAClB,4BAAKrG,EAAQ/H,KAAKqO,aAClB,4BACE,kBAAC1J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,IACHjK,UAAU,gCACV4H,MAAO,CACLC,QAAS,OAEXrH,QAAS,WACP,IAAIwa,EAAO,EAAK3b,MAAMkV,UAClB3D,EAAQoK,EAAKjX,QAAQoJ,GACrByD,GAAS,GACXoK,EAAKnK,OAAOD,EAAO,GAErB,EAAKrR,SAAS,CACZgV,UAAWyG,MAIf,uBAAGhb,UAAU,kDAEf,kBAACgK,EAAA,EAAD,CACEC,GAAG,IACHrC,MAAO,CACLC,QAAS,OAEX7H,UAAU,gCACVQ,QAAS,WACP,IAAIwa,EAAO,EAAK3b,MAAMkV,UAClB3D,EAAQoK,EAAKjX,QAAQoJ,GACzB6N,EAAKpK,GAAO+D,UAAW,EAEvB,EAAKpV,SACH,CACEqV,WAAY,EAAKvV,MAAMuV,UACvBL,UAAWyG,IAEb,WACEA,EAAKpK,GAAOvL,IAAI4R,QAAQrQ,QACtBuG,EAAQ/H,WAMhB,uBAAGpF,UAAU,wCAKnB,iBAWxB,kBAAC+J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACiE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWlM,IAAI,MAAf,iBACA,wBAAInC,UAAU,iBAAd,mBAEF,kBAAC0O,EAAA,EAAD,KACE,kBAACG,GAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC,GAAD,CAAS5E,IAAKxF,KAAK2Z,YACnB,kBAACxP,EAAA,EAAD,CAAKC,GAAG,KAAKjK,UAAU,8BACrB,kBAACyB,EAAA,EAAD,CACEjC,MAAM,UACNQ,UAAU,UACVqH,UAAWxH,KAAKR,MAAMib,eACtB9Z,QAAS,WACP,EAAKgZ,UAAUvC,QAAQjE,aACvB,EAAKzT,SAAS,CACZ+a,gBAAgB,EAChBE,qBAAsB,SAR5B,iBAcA,kBAAC/Y,EAAA,EAAD,CACEjC,MAAM,UACNQ,UAAU,UACVQ,QAAS,WACP,IAAI4E,EAAO,EAAK/F,MAAM+W,QACtB,GAAI,EAAK/W,MAAMmb,qBAAsB,CACnC,IAAI5J,EAAQxL,EAAKrB,QACf,EAAK1E,MAAMmb,sBAEbzM,QAAQC,IAAI4C,GACRA,GAAS,GACXxL,EAAKyL,OAAOD,EAAO,GAGvBxL,EAAK+C,KAAK,EAAKqR,UAAUvC,QAAQlE,eACjC,EAAKxT,SACH,CACE6W,QAAShR,EACToV,qBAAsB,OAExB,WACE,EAAKhB,UAAUvC,QAAQjE,kBArB/B,SA8BJ,kBAAChJ,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACkF,GAAA,EAAD,CAAOnP,UAAU,cAAcoP,YAAU,GACvC,2BAAOpP,UAAU,gBACf,4BACE,2CACA,qCACA,mCACA,qCACA,wBAAIA,UAAU,eAAd,aAGJ,+BACGH,KAAKR,MAAM+W,QAAQ9Q,KAAI,SAAC6H,GAAD,OACtB,4BACE,4BAAKA,EAAQnH,MACb,4BACG,IAAI/C,KAAKkK,EAAQ+F,WAAW1F,eAC3B,IACA,IAAIvK,KAAKkK,EAAQ+F,WAAW6J,eAC1B,QACA,CACEC,KAAM,UACNC,OAAQ,UACRC,QAAQ,KAIhB,4BACG,IAAIja,KAAKkK,EAAQgG,SAAS3F,eACzB,IACA,IAAIvK,KAAKkK,EAAQgG,SAAS4J,eACxB,QACA,CACEC,KAAM,UACNC,OAAQ,UACRC,QAAQ,KAEP,WAET,4BAAK/P,EAAQ8F,OACb,4BACE,kBAAClJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,GAAG,IACHjK,UAAU,gCACV4H,MAAO,CACLC,QAAS,OAEXrH,QAAS,WACP,IAAIwa,EAAO,EAAK3b,MAAM+W,QAClBxF,EAAQoK,EAAKjX,QAAQoJ,GACrByD,GAAS,GACXoK,EAAKnK,OAAOD,EAAO,GAErB,EAAKrR,SAAS,CACZ6W,QAAS4E,MAIb,uBAAGhb,UAAU,kDAEf,kBAACgK,EAAA,EAAD,CACEC,GAAG,IACHrC,MAAO,CACLC,QAAS,OAEXrH,QAAS,WACP,EAAKgZ,UAAUvC,QAAQrQ,QAAQuG,GAC/B,EAAK5N,SAAS,CACZ+a,gBAAgB,EAChBE,qBAAsBrN,KAG1BnN,UAAU,iCAEV,uBAAGA,UAAU,oDAezC,kBAAC+J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKjK,UAAU,8BACrB,kBAACyB,EAAA,EAAD,CACEjC,MAAM,UACNoI,MAAO,CACLC,QAAS,OACTkK,aAAc,OACdF,YAAa,QAEfrR,QAAS,SAACI,GAAD,OAAO,EAAK6X,YAAY7X,KAPnC,sB,GApvDaiC,IAAMC,W,SCwHlBqa,GAhJS7W,sBAAW,SAACrH,EAAMoG,GAAS,IAAD,EACNkB,oBAAS,GADH,mBACzCC,EADyC,aAEhBD,oBAAS,IAFO,mBAEzCG,EAFyC,KAE/BC,EAF+B,OAGxBJ,mBAAS,IAHe,mBAGzCnB,EAHyC,KAGnCwB,EAHmC,KAIhDC,sBAAY,YAAa,CACvB5B,KAAM,CACJ6B,QAAS,UACTC,UAAW,WAEbC,WAAY,CACVC,QAAS,WAEXC,OAAQ,CACNC,OAAQ,kBACRC,MAAO,kBACPC,SAAU,qBAGd,IAAM+V,EAAU,WACd/U,EAAMC,IAAI,qBAAqBC,MAAK,SAACC,GACnC5B,EACE4B,EAAEpD,KAAKE,KAAI,SAAC4D,GACV,IAAIkE,EAAM,GAOV,OANAA,EAAG,GAASlE,EAAE/H,GACdiM,EAAG,KAAWlE,EAAElD,KAChBoH,EAAG,KAAWlE,EAAEmU,OAAOrX,KACvBoH,EAAG,QAAclE,EAAEmU,OAAOC,UAAUtX,KACpCoH,EAAG,MAAYlE,EAAEqU,MACjBnQ,EAAG,KAAWlE,EAAEsU,KACTpQ,MAGXzG,GAAY,OAIhBW,qBAAU,WACR8V,MACC,IA2BHK,8BAAoBpY,GAAK,iBAAO,CAC9BqY,WAAY,WACVN,SAIJ,IAAMO,EAAcC,uBAAY,SAACve,GAAD,OAAW0O,QAAQC,IAAI3O,MACjDkI,EAAUC,mBAAQ,iBAAM,CAC5B,CACExB,KAAM,OACNyB,SAAU,QAEZ,CACEzB,KAAM,OACNyB,SAAU,QAEZ,CACEC,KAAM,SAACC,GAAD,OAAS,yBAAK5F,IAAK4F,EAAIkW,MAAO/b,IAAI,oBACxCkG,gBAAgB,EAChBC,eAAe,EACfd,QAAQ,EACRnB,KAAM,QACNyB,SAAU,SAEZ,CACEC,KAAM,SAACC,GAAD,OACJ,kBAAClG,EAAA,EAAD,CACEmG,MAAO,CAAEC,QAAS,QAClB7H,UAAU,kBACVQ,QAAS,kBAhCSsH,EAgCcH,OA/BtC1I,EAAM6e,gBAAgBhW,GADC,IAACA,IAkClB,uBAAG9H,UAAU,4BAGjBmH,QAAQ,EACRnB,KAAM,OACNyB,SAAU,QAEZ,CACEC,KAAM,SAACC,GAAD,OACJ,kBAAClG,EAAA,EAAD,CACEmG,MAAO,CAAEC,QAAS,QAClB7H,UAAU,iBACVQ,QAAS,kBApEWsH,EAoEcH,EAnExCoG,QAAQC,IAAIlG,QACZe,KAAK,CACHC,MAAO,gBACP7D,KAAM,8DACNa,KAAM,UACNiD,SAAS,EACTC,YAAY,IACXT,KANH,uCAMQ,WAAOU,GAAP,eAAAC,EAAA,0DACFD,EADE,uBAEAE,EAAM/D,EAAKgE,QAAO,SAACC,GAAD,OAAUA,EAAKlI,KAAO2G,EAAM3G,MAClD4M,QAAQC,IAAI7E,GACZvC,EAAQuC,GAJJ,SAKEd,EAAMiB,OAAO,oBAAsBxB,EAAM3G,IAL3C,OAMJ0H,KAAK,uCAAwC,CAC3C/C,KAAM,YAPJ,uBAUJ+C,KAAK,yBAVD,4CANR,uDAFyB,IAACf,IAsEpB,uBAAG9H,UAAU,kCAGjBmH,QAAQ,EACRnB,KAAM,SACNyB,SAAU,cAId,OACE,oCACE,yBACEzH,UAAU,kBACV4H,MAAO,CAAE2B,QAAS/C,EAAgB,OAAS,SAE3C,yBAAKgD,MAAM,cACT,8BACA,+BANJ,cAUA,kBAAC,IAAD,CACEpE,KAAMA,EACNmC,QAASA,EACTkC,MAAM,YACNsU,qBAAsBJ,EACtBjU,YAAY,EACZC,gBAAiBjD,EACjBkD,kBAAmB,4DChIrBqK,GAAM,CACVvC,MAAO,QAGHwC,GAAM,CACVC,WAAY,OACZhK,UAAW,QAGQ6T,G,kDACnB,WAAY/e,GAAQ,IAAD,8BACjB,cAAMA,IA0BRmY,mBAAqB,WACnB5K,QAAQC,IAAI,CACVpE,EAAMC,IAAI,6BACVD,EAAMC,IAAI,4BACTC,MAAK,YAAa,IAAD,mBAAVC,EAAU,KAAPU,EAAO,KAClB,EAAK3J,SAAS,CACZgY,oBAAqB/O,EAAEpD,KAAKE,KAAI,SAAC4D,GAC/B,IAAI4D,EAAI,GAGR,OAFAA,EAAC,KAAW5D,EAAElD,KACd8G,EAAC,GAAS5D,EAAE/H,GACL2L,KAETmR,eAAgB/U,EAAE9D,KAAKE,KAAI,SAAC4D,GAC1B,IAAI4D,EAAI,GAGR,OAFAA,EAAC,KAAW5D,EAAElD,KACd8G,EAAC,GAAS5D,EAAE/H,GACL2L,WA3CI,EAgDnBiI,gBAAkB,SAAC3P,GACjB,EAAK7F,SAAS,CACZ2e,aAAc9Y,EAAK+K,KACnBgO,aAAc/Y,EAAKoY,KACnBY,YAAa,EAAK/e,MAAM+e,WACxBC,WAAYjZ,EAAKjE,KAEnB,EAAKmd,SAASrH,QAAQrQ,QAAQxB,EAAKmZ,MACnC,EAAKC,YAAYvH,QAAQrQ,QAAQxB,EAAKqZ,UAtDtC,EAAKC,aAAejK,sBACpB,EAAKkK,SAAWlK,sBAChB,EAAK+J,YAAc/J,sBACnB,EAAK6J,SAAW7J,sBAChB,EAAKpV,MAAQ,CACXuf,iBAAiB,EACjBV,aAAc,GACdW,kBAAmB,KACnBC,kBAAmB,oBACnBX,aAAc,GACdC,YAAY,EAEZW,aAAa,EACbC,gBAAgB,EAChBC,qBAAqB,EACrBC,YAAa,GAEbC,SAAU,KACVC,aAAc,kBACdC,SAAU,GACV9H,oBAAqB,GACrB0G,eAAgB,GAChBI,WAAY,MAxBG,E,qDA0DT,IAAD,OACP,OACE,kBAAC,IAAMpQ,SAAP,KACGpO,KAAKR,MAAM2f,eAAiB,KAC3B,yBAAKhf,UAAU,cACb,yBACEA,UAAU,gBACV4H,MAAO,CACLyC,gBAAiB,YAGnB,kBAACL,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,wBACErC,MAAO,CACLkE,WAAY,SAFhB,uBAQF,kBAAC9B,EAAA,EAAD,CAAKC,GAAG,KAAKrC,MAAO,CAAEmE,cAAe,SACnC,kBAACC,GAAA,EAAD,qBACA,kBAACtJ,EAAA,EAAD,CACEnC,KAAK,OACLuH,MAAOjI,KAAKR,MAAM6f,YAClBjT,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ2f,YAAate,EAAEuC,OAAO2E,aAMhC,kBAACiC,EAAA,EAAD,CAAK/J,UAAU,2BACb,kBAACgK,EAAA,EAAD,CACEC,GAAG,KACHiC,GAAG,KACHlM,UAAU,6BACV4H,MAAO,CAAEC,QAAS,SAElB,kBAACpG,EAAA,EAAD,CACEjC,MAAM,UACNgB,QAAS,WACP,EAAKjB,SAAS,CACZyf,gBAAiB,EAAK3f,MAAM2f,eAC5BE,YAAa,OALnB,UAWA,kBAACzd,EAAA,EAAD,CACEjC,MAAM,UACN6H,UAAWxH,KAAKR,MAAM4f,oBACtBze,QAAS,SAACI,GACR,EAAKrB,SAAS,CACZ0f,qBAAsB,EAAK5f,MAAM4f,sBAEnC,IAAIK,EAAW,IAAI3G,SACnB2G,EAAS1G,OAAO,OAAQ,EAAKvZ,MAAM6f,aACnC7W,EAAM8D,KAAK,2BAA4BmT,GAAU/W,MAC/C,SAACC,GACC,GAAqB,WAAjBA,EAAEpD,KAAK+T,OAAqB,CAC9B,IAAI6B,EAAO,EAAK3b,MAAMkY,oBACtByD,EAAK7S,KAAK,CACRhH,GAAIqH,EAAEpD,KAAKA,KACX+K,KAAM,EAAK9Q,MAAM6f,cAEnB,EAAK3f,SAAS,CACZgY,oBAAqByD,EACrBgE,gBAAiB,EAAK3f,MAAM2f,eAC5BE,YAAa,GACbD,qBAAsB,EAAK5f,MACxB4f,4BAOZpf,KAAKR,MAAM4f,oBAAsB,OAAS,kBAQxDpf,KAAKR,MAAM0f,YAAc,KACxB,yBAAK/e,UAAU,cACb,yBACEA,UAAU,gBACV4H,MAAO,CACLyC,gBAAiB,UACjBxC,QAAS,SAGX,kBAACkC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,wBACErC,MAAO,CACLkE,WAAY,SAFhB,oBAQF,kBAAC9B,EAAA,EAAD,CAAKC,GAAG,KAAKrC,MAAO,CAAEmE,cAAe,SACnC,yBAAK/L,UAAU,4BACb,kBAAC,GAAD,CACE8P,YAAajQ,KAAKR,MAAMkY,oBACxBpW,GAAI,mBACJyQ,KAAM,eACN5R,UAAU,2BACVqF,IAAKxF,KAAK6e,iBAIhB,kBAAC1U,EAAA,EAAD,CAAKC,GAAG,KAAKrC,MAAO,CAAEmE,cAAe,SACnC,kBAACC,GAAA,EAAD,kBACA,kBAACtJ,EAAA,EAAD,CACEnC,KAAK,OACLuH,MAAOjI,KAAKR,MAAMggB,SAClB1c,YAAY,YACZsJ,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ8f,SAAUze,EAAEuC,OAAO2E,YAK3B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAAC+B,GAAA,EAAD,mBACA,yBAAKhM,UAAU,oBACb,kBAAC0C,EAAA,EAAD,CACEnC,KAAK,OACLP,UAAU,oBACVmB,GAAG,cACH8K,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ4f,SAAUve,EAAEuC,OAAO0X,MAAM,GACzBuE,aAAcxe,EAAEuC,OAAO0X,MAAM,GAAG7U,UAItC,2BACEhG,UAAU,oBACV+O,QAAQ,wBAEPlP,KAAKR,MAAM+f,iBAKpB,kBAACrV,EAAA,EAAD,CAAK/J,UAAU,2BACb,kBAACgK,EAAA,EAAD,CACEC,GAAG,KACHiC,GAAG,KACHlM,UAAU,6BACV4H,MAAO,CAAEC,QAAS,SAElB,kBAACpG,EAAA,EAAD,CACEjC,MAAM,UACNgB,QAAS,WACP,EAAKjB,SAAS,CACZwf,aAAc,EAAK1f,MAAM0f,YACzBE,qBAAsB,EAAK5f,MAAM4f,oBACjCE,SAAU,KACVC,aAAc,kBACdC,SAAU,OARhB,UAcA,kBAAC5d,EAAA,EAAD,CACEjC,MAAM,UACN6H,UAAWxH,KAAKR,MAAM4f,oBACtBze,QAAS,SAACI,GACR,EAAKrB,SAAS,CACZ0f,qBAAsB,EAAK5f,MAAM4f,sBAEnC,IAAIK,EAAW,IAAI3G,SACnB2G,EAAS1G,OACP,YACA,EAAK8F,aAAazH,QAAQ1G,YAE5B+O,EAAS1G,OAAO,OAAQ,EAAKvZ,MAAMggB,UACnCC,EAAS1G,OAAO,QAAS,EAAKvZ,MAAM8f,UACpC9W,EAAM8D,KAAK,wBAAyBmT,GAAU/W,MAC5C,SAACC,GACC,GAAqB,WAAjBA,EAAEpD,KAAK+T,OAAqB,CAC9B,IAAI6B,EAAO,EAAK3b,MAAM4e,eACtBlQ,QAAQC,IAAIxF,GACZwS,EAAK7S,KAAK,CACRhH,GAAIqH,EAAEpD,KAAKA,KACX+K,KAAM,EAAK9Q,MAAMggB,WAEnBtR,QAAQC,IAAIgN,GACZ,EAAKzb,SAAS,CACZwf,aAAc,EAAK1f,MAAM0f,YACzBxH,oBAAqByD,EACrBmE,SAAU,KACVC,aAAc,kBACdC,SAAU,GACVJ,qBAAsB,EAAK5f,MACxB4f,4BAOZpf,KAAKR,MAAM4f,oBAAsB,OAAS,iBAOvD,yBAAKjf,UAAU,WACb,kBAAC+J,EAAA,EAAD,KACE,kBAACmE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACpE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKhK,UAAU,YAAYoO,GAAG,KAC5B,kBAACC,EAAA,EAAD,CAAWlM,IAAI,MAAf,2BACA,wBAAInC,UAAU,iBAAd,8BAIN,kBAAC0O,EAAA,EAAD,KACE,kBAAC3E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,yBACET,MAAM,8DACN5B,MAAOqM,IAEP,yBACEjU,UAAU,2BACV4H,MAAO,CAAEkT,KAAM,MAEf,kBAAC,GAAD,CACEhL,YAAajQ,KAAKR,MAAMkY,oBACxBpW,GAAI,mBACJgR,gBAAiBtS,KAAKsS,gBACtB9M,IAAKxF,KAAK2e,YACV5M,KAAM,kBAGV,yBAAKpI,MAAM,cACT,4BACEhJ,QAAS,SAACI,GACRA,EAAEC,iBACF,EAAKtB,SAAS,CACZyf,gBAAiB,EAAK3f,MAAM2f,kBAGhChf,UAAU,kBACV4H,MAAOsM,IART,UAeN,kBAAClK,EAAA,EAAD,CAAKC,GAAG,KACN,yBACET,MAAM,8DACN5B,MAAOqM,IAEP,yBACEjU,UAAU,2BACV4H,MAAO,CAAEkT,KAAM,MAEf,kBAAC,GAAD,CACEhL,YAAajQ,KAAKR,MAAM4e,eACxB9c,GAAI,mBACJkE,IAAKxF,KAAKye,SACV1M,KAAM,eAGV,yBAAKpI,MAAM,cACT,4BACEhJ,QAAS,SAACI,GACRA,EAAEC,iBACF,EAAKtB,SAAS,CACZwf,aAAc,EAAK1f,MAAM0f,eAG7B/e,UAAU,kBACV4H,MAAOsM,IART,WAgBR,kBAACnK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,oDACA,kBAACpM,EAAA,EAAD,CACEC,YAAY,aACZpC,KAAK,OACLuH,MAAOjI,KAAKR,MAAM6e,aAClBjS,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ2e,aAActd,EAAEuC,OAAO2E,aAMjC,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC6E,GAAA,EAAD,KACE,8CACA,yBAAK9O,UAAU,oBACb,kBAAC0C,EAAA,EAAD,CACEnC,KAAK,OACLP,UAAU,oBACViM,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZsf,kBAAmBje,EAAEuC,OAAO0X,MAAM,GAClCiE,kBAAmBle,EAAEuC,OAAO0X,MAAM,GAAG7U,UAI3C,2BACEhG,UAAU,oBACV+O,QAAQ,wBAEPlP,KAAKR,MAAMyf,sBAKpB,kBAAC9U,EAAA,EAAD,CAAKC,GAAG,MACN,kBAAC6E,GAAA,EAAD,KACE,oDACA,kBAACpM,EAAA,EAAD,CACEC,YAAY,cACZpC,KAAK,OACLuH,MAAOjI,KAAKR,MAAM8e,aAClBlS,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ4e,aAAcvd,EAAEuC,OAAO2E,cAOnC,kBAACiC,EAAA,EAAD,CAAK/J,UAAU,2BACb,kBAACgK,EAAA,EAAD,CACEC,GAAG,KACHiC,GAAG,KACHlM,UAAU,6BACV4H,MAAO,CAAEC,QAAS,SAElB,kBAACpG,EAAA,EAAD,CACEjC,MAAM,UACN6H,UAAWxH,KAAKR,MAAMuf,gBACtBpe,QAAS,WACP,EAAKjB,SAAS,CACZqf,iBAAkB,EAAKvf,MAAMuf,kBAE/B,IAAIU,EAAW,IAAI3G,SACnB2G,EAAS1G,OAAO,OAAQ,EAAKvZ,MAAM6e,cACnCoB,EAAS1G,OAAO,OAAQ,EAAKvZ,MAAM8e,cACnCmB,EAAS1G,OACP,SACA,EAAK0F,SAASrH,QAAQ1G,YAExB+O,EAAS1G,OACP,YACA,EAAK4F,YAAYvH,QAAQ1G,YAE3B+O,EAAS1G,OAAO,QAAS,EAAKvZ,MAAMwf,mBAfvB,qBAgBKS,EAASC,UAhBd,IAgBb,2BAAqC,CACnC,IADmC,QAUjC,OARA1W,KACE,eACA,4BACA,cAEF,EAAKtJ,SAAS,CACZqf,iBAAiB,KAxBV,8BA6BR,EAAKvf,MAAM+e,WAYd/V,EAAMyQ,IACJ,oBAAsB,EAAKzZ,MAAMgf,WACjCiB,GACA/W,MAAK,SAACC,GACN,EAAKjJ,SAAS,CACZqf,iBAAkB,EAAKvf,MAAMuf,gBAC7BV,aAAc,GACdW,kBAAmB,KACnBC,kBAAmB,oBACnBX,aAAc,KAEhB,EAAKQ,SAAS1H,QAAQyG,gBAtBxBrV,EAAM8D,KAAK,mBAAoBmT,GAAU/W,MAAK,SAACC,GAC7C,EAAKjJ,SAAS,CACZqf,iBAAkB,EAAKvf,MAAMuf,gBAC7BV,aAAc,GACdW,kBAAmB,KACnBC,kBAAmB,oBACnBX,aAAc,KAEhB,EAAKQ,SAAS1H,QAAQyG,kBAmB3B7d,KAAKR,MAAMuf,gBAAkB,OAAS,kBAOnD,kBAAC7U,EAAA,EAAD,KACE,kBAACmE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACpE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKhK,UAAU,YAAYoO,GAAG,KAC5B,kBAACC,EAAA,EAAD,CAAWlM,IAAI,MAAf,6BAIN,kBAACuM,EAAA,EAAD,KACE,kBAAC,GAAD,CACErJ,IAAKxF,KAAK8e,SACVb,gBAAiBje,KAAKkV,2B,GArfKjS,aCwH9Bqa,GAvIS7W,sBAAW,SAACrH,EAAOoG,GAAS,IAAD,EACPkB,oBAAS,GADF,mBAC1CC,EAD0C,aAEjBD,oBAAS,IAFQ,mBAE1CG,EAF0C,KAEhCC,EAFgC,OAGzBJ,mBAAS,IAHgB,mBAG1CnB,EAH0C,KAGpCwB,EAHoC,KAIjD6W,8BAAoBpY,GAAK,iBAAO,CAC9BqY,WAAY,WACVN,SAIJvW,sBAAY,YAAa,CACvB5B,KAAM,CACJ6B,QAAS,UACTC,UAAW,WAEbC,WAAY,CACVC,QAAS,WAEXC,OAAQ,CACNC,OAAQ,kBACRC,MAAO,kBACPC,SAAU,qBAGd,IAAM+V,EAAU,WACd/U,EAAMC,IAAI,qBAAqBC,MAAK,SAACC,GACnCuF,QAAQC,IAAIxF,EAAEpD,MACdwB,EAAQ4B,EAAEpD,MACVuB,GAAY,OAGhBW,qBAAU,WACR8V,MACC,IACH,IAyBMO,EAAcC,uBAAY,SAACve,GAAD,OAAW0O,QAAQC,IAAI3O,MACjDkI,EAAUC,mBAAQ,iBAAM,CAC5B,CACExB,KAAM,OACNyB,SAAU,QAEZ,CACEzB,KAAM,eACNyB,SAAU,gBAEZ,CACEzB,KAAM,QACNyB,SAAU,SAEZ,CACEzB,KAAM,QACNyB,SAAU,SAEZ,CACEC,KAAM,SAACC,GAAD,OACJ,kBAAClG,EAAA,EAAD,CACEmG,MAAO,CAAEC,QAAS,QAClB7H,UAAU,kBACVQ,QAAS,kBA1BSsH,EA0BcH,OAzBtC1I,EAAM6e,gBAAgBhW,GADC,IAACA,IA4BlB,uBAAG9H,UAAU,4BAGjBgI,gBAAgB,EAChBC,eAAe,EACfd,QAAQ,EACRnB,KAAM,OACNyB,SAAU,QAEZ,CACEC,KAAM,SAACC,GAAD,OACJ,kBAAClG,EAAA,EAAD,CACEmG,MAAO,CAAEC,QAAS,QAClB7H,UAAU,iBACVQ,QAAS,kBAhEWsH,EAgEcH,EA/DxCoG,QAAQC,IAAIlG,QACZe,KAAK,CACHC,MAAO,gBACP7D,KAAM,oDACNa,KAAM,UACNiD,SAAS,EACTC,YAAY,IACXT,KANH,uCAMQ,WAAOU,GAAP,eAAAC,EAAA,0DACFD,EADE,uBAEAE,EAAM/D,EAAKgE,QAAO,SAACC,GAAD,OAAUA,EAAKlI,KAAO2G,EAAM3G,MAClD4M,QAAQC,IAAI7E,GACZvC,EAAQuC,GAJJ,SAKEd,EAAMiB,OAAO,oBAAsBxB,EAAM3G,IAL3C,OAMJ0H,KAAK,uCAAwC,CAC3C/C,KAAM,YAPJ,uBAUJ+C,KAAK,sBAVD,4CANR,uDAFyB,IAACf,IAkEpB,uBAAG9H,UAAU,kCAGjBgI,gBAAgB,EAChBb,QAAQ,EACRnB,KAAM,SACNyB,SAAU,cAId,OACE,oCACE,yBACEzH,UAAU,kBACV4H,MAAO,CAAE2B,QAAS/C,EAAgB,OAAS,SAE3C,yBAAKgD,MAAM,cACT,8BACA,+BANJ,cAUA,kBAAC,IAAD,CACEpE,KAAMA,EACNmC,QAASA,EACTkC,MAAM,YACNsU,qBAAsBJ,EACtBjU,YAAY,EACZC,gBAAiBjD,EACjBkD,kBAAmB,4DChIN4V,G,kDACnB,WAAYvgB,GAAQ,IAAD,8BACjB,cAAMA,IAYR8V,gBAAkB,SAAC3P,GACjB,EAAK7F,SAAS,CACZkgB,aAAcra,EAAKY,KACnB0Z,cAAeta,EAAKoG,MACpBmU,YAAava,EAAKkI,aAClBsS,cAAexa,EAAKsG,MACpB0S,YAAa,EAAK/e,MAAM+e,WACxB1I,WAAYtQ,EAAKjE,MAlBnB,EAAK0e,iBAAmBpL,sBACxB,EAAKpV,MAAQ,CACXogB,aAAc,GACdC,cAAe,GACfC,YAAa,GACbC,cAAe,GACfE,gBAAgB,EAChB1B,YAAY,EACZ1I,WAAW,MAVI,E,qDAwBT,IAAD,OACP,OACE,oCACE,yBAAK1V,UAAU,WACb,kBAAC+J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACiE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWlM,IAAI,MAAf,oBACA,wBAAInC,UAAU,iBAAd,sBAEF,kBAAC0O,EAAA,EAAD,KACE,kBAAC3E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,gDACA,kBAACvH,EAAA,EAAD,CACEC,YAAY,YACZmF,MAAOjI,KAAKR,MAAMogB,aAClBxT,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZkgB,aAAc7e,EAAEuC,OAAO2E,YAK/B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,oDACA,kBAACvH,EAAA,EAAD,CACEC,YAAY,OACZmF,MAAOjI,KAAKR,MAAMsgB,YAClB1T,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZogB,YAAa/e,EAAEuC,OAAO2E,YAK9B,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,iDACA,kBAACvH,EAAA,EAAD,CACEC,YAAY,QACZpC,KAAK,SACLuH,MAAOjI,KAAKR,MAAMqgB,cAClBzT,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZmgB,cAAe9e,EAAEuC,OAAO2E,YAKhC,kBAACkC,EAAA,EAAD,CAAKC,GAAG,KACN,iDACA,kBAACvH,EAAA,EAAD,CACEC,YAAY,QACZpC,KAAK,QACLuH,MAAOjI,KAAKR,MAAMugB,cAClB3T,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZqgB,cAAehf,EAAEuC,OAAO2E,aAMlC,kBAACiC,EAAA,EAAD,CAAK/J,UAAU,2BACb,kBAACgK,EAAA,EAAD,CACEC,GAAG,KACHiC,GAAG,KACHlM,UAAU,6BACV4H,MAAO,CAAEC,QAAS,SAElB,kBAACpG,EAAA,EAAD,CACE4F,UAAWxH,KAAKR,MAAMygB,eACtBtgB,MAAM,UACNgB,QAAS,WACP,EAAKjB,SAAS,CACZugB,gBAAiB,EAAKzgB,MAAMygB,iBAE1B,EAAKzgB,MAAM+e,WAiBb/V,EAAMyQ,IAAI,mBAAmB,EAAKzZ,MAAMqW,WAAY,CAClD1P,KAAM,EAAK3G,MAAMogB,aACjBnS,aAAc,EAAKjO,MAAMsgB,YACzBjU,MAAO,EAAKrM,MAAMugB,cAClBpU,MAAO,EAAKnM,MAAMqgB,gBACjBnX,MAAK,SAACC,GACP,EAAKjJ,SAAS,CACZugB,gBAAiB,EAAKzgB,MAAMygB,eAC5BL,aAAc,GACdC,cAAe,GACfC,YAAa,GACbC,cAAe,GACfxB,YAAY,EAAK/e,MAAM+e,aAEzB,EAAKyB,iBAAiB5I,QAAQyG,gBA9BhCrV,EAAM8D,KAAK,kBAAmB,CAC5BnG,KAAM,EAAK3G,MAAMogB,aACjBnS,aAAc,EAAKjO,MAAMsgB,YACzBjU,MAAO,EAAKrM,MAAMugB,cAClBpU,MAAO,EAAKnM,MAAMqgB,gBACjBnX,MAAK,SAACC,GACP,EAAKjJ,SAAS,CACZugB,gBAAiB,EAAKzgB,MAAMygB,eAC5BL,aAAc,GACdC,cAAe,GACfC,YAAa,GACbC,cAAe,KAEjB,EAAKC,iBAAiB5I,QAAQyG,kBAsBnC7d,KAAKR,MAAMygB,eAAiB,OAAS,mBAQpD,kBAAC/V,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,MACN,kBAACiE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWlM,IAAI,MAAf,oBAEF,kBAACuM,EAAA,EAAD,KACE,kBAAC,GAAD,CACErJ,IAAKxF,KAAKggB,iBACV/B,gBAAiBje,KAAKkV,4B,GA5JHjS,a,6BC8DxB2B,GAlEF,CACX,CACEiB,KAAM,aACNM,KAAM,YACND,QAAS,sEACTD,KAAM,8BACN4O,UAAWpI,GACX1G,OAAQ,UAEV,CACEF,KAAM,iBACNM,KAAM,gBACND,QAAS,6CACTD,KAAM,6BACN4O,UAAWN,GACXxO,OAAQ,UAEV,CACEF,KAAM,oBACNM,KAAM,qBACND,QAAS,6CACTD,KAAM,+BACN4O,UAAWsJ,GACXpY,OAAQ,UAEV,CACEF,KAAM,iBACNM,KAAM,gBACND,QAAS,6CACT2O,U,4MCrBFrV,MAAQ,CACN0gB,YAAa,yBACb5F,cAAc,EACd6F,cAAc,EACdC,aAAa,EACbC,WAAY,GACZC,OAAQ,KACRC,gBAAiB,eACjBC,YAAa,KACbC,YAAY,EACZC,eAAgB,GAChBC,mBAAoB,I,EAEtBpJ,mBAAqB,WACnB,EAAKqJ,wBACL,EAAKC,gB,EAEPD,sBAAwB,WACtBva,EAAMoC,IAAI,iCAAiCC,MAAK,SAACC,GAC/C,EAAKjJ,SAAS,CACZwgB,YAAmC,MAAtBvX,EAAEpD,KAAK2a,YAAsB,GAAKvX,EAAEpD,KAAK2a,kB,EAI5DY,yBAA2B,SAAC1b,GAC1B,EAAK1F,SAAS,CACZygB,cAAe,EAAK3gB,MAAM2gB,eAE5B9Z,EACGiG,KAAK,mCAAoC,CACxC4T,YAAa9a,IAEdsD,MAAK,SAACC,GACL,EAAKjJ,SAAS,CACZygB,cAAe,EAAK3gB,MAAM2gB,aAC1B7F,cAAe,EAAK9a,MAAM8a,aAC1B4F,YAAa9a,Q,EAIrB2b,UAAY,WACV,EAAKrhB,SAAS,CACZ0gB,aAAc,EAAK5gB,MAAM4gB,cAE3B,IAAInL,EAAW,IAAI6D,SACfkI,EAAY,EAAKxhB,MAAM8gB,OAC3BrL,EAAS8D,OAAO,QAAS,EAAKvZ,MAAMghB,aACpCna,EAAMiG,KAAK,+BAAgC2I,GAAUvM,MAAK,SAACC,GACzDqY,EAAU1Y,KAAK,CACbpG,IAAKyG,EAAEpD,KAAKqQ,IACZqL,UAAWtY,EAAEpD,KAAKqQ,IAClBsL,eAAgB,IAChBC,gBAAiB,IACjBC,YAAY,IAEd,EAAK1hB,SAAS,CACZ0gB,aAAc,EAAK5gB,MAAM4gB,YACzBG,gBAAiB,eACjBC,YAAa,KACbF,OAAQU,Q,EAIdK,aAAe,WACbrY,KAAK,CACHC,MAAO,gBACP7D,KAAM,oDACNa,KAAM,UACNiD,SAAS,EACTC,YAAY,IACXT,KANH,uCAMQ,WAAOU,GAAP,iBAAAC,EAAA,sDACFD,GACF,EAAK1J,SAAS,CACZ+gB,YAAa,EAAKjhB,MAAMihB,aAEtBa,EAAa,EAAK9hB,MAAM8gB,OACxBiB,EAAqB,EAAK/hB,MAAMkhB,eACpCra,EACGiG,KAAK,qCAAsC,CAC1CkV,UAAWD,EACXjB,OAAQ,EAAK9gB,MAAMmhB,qBAEpBjY,MAAK,SAACC,GACL,EAAKnJ,MAAMkhB,eAAejF,SAAQ,SAACgG,GACjC,IAAIC,EAAcJ,EAAW/X,QAC3B,SAACmU,GAAD,OAAWA,EAAMpc,IAAMmgB,KACvB,GACFF,EAAmBvQ,OAAOuQ,EAAmBrd,QAAQud,GAAU,GAC/DH,EAAWtQ,OAAOsQ,EAAWpd,QAAQwd,GAAc,MAErD,EAAKhiB,SAAS,CACZ4gB,OAAQgB,EACRZ,eAAgBa,EAChBd,YAAa,EAAKjhB,MAAMihB,aAG1BzX,KAAK,uCAAwC,CAC3C/C,KAAM,gBAIZ+C,KAAK,yBA/BD,2CANR,wD,EAyCF2Y,cAAgB,SAAC5Q,EAAO2M,GACtB,IAAI4D,EAAa,EAAK9hB,MAAM8gB,OAC5BgB,EAAWvQ,GAAOqQ,YAAcE,EAAWvQ,GAAOqQ,WAElD,IAAIQ,EAAqB,EAAKpiB,MAAMkhB,eAChCmB,EAAyB,EAAKriB,MAAMmhB,mBACpCiB,EAAmBE,MAAK,SAACxgB,GAAD,OAAQA,GAAMggB,EAAWvQ,GAAOzP,OAC1DsgB,EAAmB5Q,OACjB4Q,EAAmB1d,QAAQod,EAAWvQ,GAAOzP,IAC7C,GAEFugB,EAAuB7Q,OACrB6Q,EAAuB3d,QAAQod,EAAWvQ,GAAO6E,KACjD,KAGFgM,EAAmBtZ,KAAKgZ,EAAWvQ,GAAOzP,IAC1CugB,EAAuBvZ,KAAKgZ,EAAWvQ,GAAO6E,KAC9C1H,QAAQC,IAAI0T,GACZ3T,QAAQC,IAAIyT,IAEd,EAAKliB,SAAS,CACZ4gB,OAAQgB,EACRZ,eAAgBkB,EAChBjB,mBAAoBkB,K,EAGxBhB,aAAe,WACbxa,EAAMoC,IAAI,gCAAgCC,MAAK,SAACC,GAC9C,IAAIoZ,EAASpZ,EAAEpD,KAAKE,KAAI,SAACiY,GACvB,OAAO,6BACFA,GADL,IAEExb,IAAKwb,EAAM9H,IACXqL,UAAWvD,EAAM9H,IACjBsL,eAAgB,IAChBC,gBAAiB,IACjBC,YAAY,OAGhB,EAAK1hB,SAAS,CACZ4gB,OAAQyB,Q,uDAIJ,IAAD,OACHC,EAAqC,MAArBhiB,KAAKR,MAAM8gB,OAAiB,GAA5B,aAAqCtgB,KAAKR,MAAM8gB,QAIhE2B,EAAa,GACjB,OACE,oCACE,yBAAK9hB,UAAU,WACb,kBAAC+J,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkC,GAAG,MACN,kBAACgC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWlM,IAAI,MAAf,uBACA,wBAAInC,UAAU,iBAAd,kDAIF,kBAAC0O,EAAA,EAAD,KACG7O,KAAKR,MAAM8a,aAAe,KACzB,KADgCta,KAAKR,MAAM0gB,YAE3C,yBACEnY,MAAO,CACLyC,gBAAiB,YACjBC,aAAc,MACd9K,MAAO,YACPqI,QAAS,SALb,0EAYA,yBACED,MAAO,CACLyC,gBAAiB,YACjBC,aAAc,MACd9K,MAAO,QACPqI,QAAS,QAEXka,wBAAyB,CACvBC,OAAQniB,KAAKR,MAAM0gB,eAIxBlgB,KAAKR,MAAM8a,aACV,yBACEvS,MAAO,CACLuC,UAAW,SAGb,kBAAC,KAAD,CACErC,MAAOjI,KAAKR,MAAM6gB,WAClB1Q,OAnDL,CACbC,UAAU,GAmDQC,SAAU,EACVzD,SAAU,SAAC2D,GACTkS,EAAalS,KAGjB,kBAACnO,EAAA,EAAD,CACEjC,MAAM,UACN6H,SAAUxH,KAAKR,MAAM2gB,aACrBxf,QAAS,WACH,EAAKnB,MAAM0gB,cAAgB+B,EAC7B,EAAKviB,SAAS,CACZ4a,cAAe,EAAK9a,MAAM8a,eAG5B,EAAKwG,yBAAyBmB,KAIjCjiB,KAAKR,MAAM2gB,aACR,qBACA,uBAEN,kBAACve,EAAA,EAAD,CACEjC,MAAM,SACNgB,QAAS,WACP,EAAKjB,SAAS,CACZ4a,cAAe,EAAK9a,MAAM8a,iBAJhC,WAYF,yBACEvS,MAAO,CACLuC,UAAW,SAGb,kBAAC1I,EAAA,EAAD,CACEmG,MAAO,CACLuC,UAAW,OAEb3J,QAAS,WACP,EAAKjB,SAAS,CACZ4a,cAAe,EAAK9a,MAAM8a,aAC1B+F,WAAY,EAAK7gB,MAAM0gB,gBAP7B,oBAmBZ,kBAAChW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkC,GAAG,MACN,kBAACgC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWlM,IAAI,MAAf,UACA,wBAAInC,UAAU,iBAAd,mCAIF,kBAAC0O,EAAA,EAAD,KACE,wDACA,kBAAC3E,EAAA,EAAD,CAAKnC,MAAO,CAAEuC,UAAW,OAAQC,aAAc,SAC7C,kBAACJ,EAAA,EAAD,CAAKkC,GAAG,MACN,yBAAKlM,UAAU,oBACb,kBAAC0C,EAAA,EAAD,CACEnC,KAAK,OACLP,UAAU,oBACViM,SAAU,SAACrL,GACT,EAAKrB,SAAS,CACZ8gB,YAAazf,EAAEuC,OAAO0X,MAAM,GAC5BuF,gBAAiBxf,EAAEuC,OAAO0X,MAAM,GAAG7U,UAIzC,2BACEhG,UAAU,oBACV+O,QAAQ,wBAEPlP,KAAKR,MAAM+gB,mBAIlB,kBAACpW,EAAA,EAAD,CAAKkC,GAAG,KACN,kBAACzK,EAAA,EAAD,CACEjC,MAAM,UACNoI,MAAO,CAAE8J,MAAO,QAChBrK,SAAUxH,KAAKR,MAAM4gB,YACrBzf,QAAS,kBAAM,EAAKogB,cAEnB/gB,KAAKR,MAAM4gB,YACR,qBACA,gBAIV,kBAACjW,EAAA,EAAD,CAAKkC,GAAG,MACLrM,KAAKR,MAAMkhB,eAAejP,OAAS,EAClC,kBAACvH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkC,GAAG,MACN,kBAACzK,EAAA,EAAD,CACEjC,MAAM,SACNgB,QAASX,KAAKqhB,aACd7Z,SAAUxH,KAAKR,MAAMihB,YAEpBzgB,KAAKR,MAAMihB,WAAa,cAAgB,WAG7C,kBAACtW,EAAA,EAAD,CACEkC,GAAG,KACHtE,MAAO,CACLpI,MAAO,QACPqI,QAAS,SAGVhI,KAAKR,MAAMkhB,eAAejP,OACzB,iCAGJ,MAEiB,OAAtBzR,KAAKR,MAAM8gB,OACV,yBACEvY,MAAO,CACLyC,gBAAiB,YACjBC,aAAc,MACd9K,MAAO,YACPqI,QAAS,SALb,qBAU+B,IAA7BhI,KAAKR,MAAM8gB,OAAO7O,OACpB,yBACE1J,MAAO,CACLyC,gBAAiB,YACjBC,aAAc,MACd9K,MAAO,YACPqI,QAAS,SALb,+BAWA,kBAAC,KAAD,CACEsY,OAAQ0B,EACRL,cAAe3hB,KAAK2hB,0B,GArWA1e,aDuBtC8C,OAAQ,SACRE,KAAM,iCAER,CACEA,KAAM,2BACNJ,KAAM,iBACNM,KAAM,gBACND,QAAS,2GACT2O,U,4ME9BFrV,MAAQ,CACN8gB,OAAQ,GACR8B,aAAa,EACb7Z,QAAS,GACTmY,eAAgB,GAChBC,mBAAoB,GACpBF,YAAY,EACZ4B,UAAU,G,EAEZ9K,mBAAqB,WACe,OAA9B,EAAKnY,MAAM4E,SAASxE,QACtB,EAAKE,SAAS,CACZ0iB,aAAc,EAAK5iB,MAAM4iB,YACzB7Z,QAAS,EAAKnJ,MAAM4E,SAASxE,MAAM+I,UAErClC,EACGoC,IADH,8BAC8B,EAAKrJ,MAAM4E,SAASxE,MAAM+I,UACrDG,MAAK,SAACC,GACL,EAAKjJ,SAAS,CACZ0iB,aAAc,EAAK5iB,MAAM4iB,YACzB9B,OAAQ3X,EAAEpD,KAAKE,KAAI,SAACiY,GAClB,OAAO,6BACFA,GADL,IAEExb,IAAKwb,EAAM9H,IACXqL,UAAWvD,EAAM9H,IACjBsL,eAAgB,IAChBC,gBAAiB,IACjBC,YAAY,c,EAO1BkB,aAAe,WACb,EAAK5iB,SAAS,CACZ0iB,aAAc,EAAK5iB,MAAM4iB,cAE3B/b,EAAMoC,IAAN,8BAAiC,EAAKjJ,MAAM+I,UAAWG,MAAK,SAACC,GAC3D,EAAKjJ,SAAS,CACZ0iB,aAAc,EAAK5iB,MAAM4iB,YACzB9B,OAAQ3X,EAAEpD,KAAKE,KAAI,SAACiY,GAClB,OAAO,6BACFA,GADL,IAEExb,IAAKwb,EAAM9H,IACXqL,UAAWvD,EAAM9H,IACjBsL,eAAgB,IAChBC,gBAAiB,IACjBC,YAAY,a,EAMtBO,cAAgB,SAAC5Q,EAAO2M,GACtB,IAAI4D,EAAa,EAAK9hB,MAAM8gB,OAC5BgB,EAAWvQ,GAAOqQ,YAAcE,EAAWvQ,GAAOqQ,WAElD,IAAIQ,EAAqB,EAAKpiB,MAAMkhB,eAChCmB,EAAyB,EAAKriB,MAAMmhB,mBACpCiB,EAAmBE,MAAK,SAACxgB,GAAD,OAAQA,GAAMggB,EAAWvQ,GAAOzP,OAC1DsgB,EAAmB5Q,OACjB4Q,EAAmB1d,QAAQod,EAAWvQ,GAAOzP,IAC7C,GAEFugB,EAAuB7Q,OACrB6Q,EAAuB3d,QAAQod,EAAWvQ,GAAO6E,KACjD,KAGFgM,EAAmBtZ,KAAKgZ,EAAWvQ,GAAOzP,IAC1CugB,EAAuBvZ,KAAKgZ,EAAWvQ,GAAO6E,KAC9C1H,QAAQC,IAAI0T,GACZ3T,QAAQC,IAAIyT,IAEd,EAAKliB,SAAS,CACZ4gB,OAAQgB,EACRZ,eAAgBkB,EAChBjB,mBAAoBkB,K,EAGxBR,aAAe,WACbrY,KAAK,CACHC,MAAO,gBACP7D,KAAM,oDACNa,KAAM,UACNiD,SAAS,EACTC,YAAY,IACXT,KANH,uCAMQ,WAAOU,GAAP,iBAAAC,EAAA,sDACFD,GACF,EAAK1J,SAAS,CACZ+gB,YAAa,EAAKjhB,MAAMihB,aAEtBa,EAAa,EAAK9hB,MAAM8gB,OACxBiB,EAAqB,EAAK/hB,MAAMkhB,eACpCra,EACGiG,KAAK,2BAA4B,CAChCiW,IAAKhB,EACLjB,OAAQ,EAAK9gB,MAAMmhB,qBAEpBjY,MAAK,SAACC,GACL,EAAKnJ,MAAMkhB,eAAejF,SAAQ,SAACgG,GACjC,IAAIC,EAAcJ,EAAW/X,QAC3B,SAACmU,GAAD,OAAWA,EAAMpc,IAAMmgB,KACvB,GACFF,EAAmBvQ,OAAOuQ,EAAmBrd,QAAQud,GAAU,GAC/DH,EAAWtQ,OAAOsQ,EAAWpd,QAAQwd,GAAc,MAErD,EAAKhiB,SAAS,CACZ4gB,OAAQgB,EACRZ,eAAgBa,EAChBd,YAAa,EAAKjhB,MAAMihB,aAG1BzX,KAAK,uCAAwC,CAC3C/C,KAAM,gBAIZ+C,KAAK,yBA/BD,2CANR,wD,EAyCFwZ,WAAa,WACXxZ,KAAK,kEAAmE,CACtEE,QAAS,CAAC,KAAM,SACfR,MAAK,SAAC+Z,GACHA,IACF,EAAK/iB,SAAS,CACZ2iB,UAAW,EAAK7iB,MAAM6iB,WAExBhc,EACGiG,KAAK,6BAA8B,CAClCgU,OAAQ,EAAK9gB,MAAMmhB,mBAAmBlb,KAAI,SAACU,GACzC,OAAO,6BACFA,GADL,IAEEyP,IAAKzP,SAIVuC,MAAK,SAACC,GACL,IAAI+Z,EAAa,EAAKljB,MAAM8gB,OAC5BoC,EAAWjH,SAAQ,SAACiC,GAClBA,EAAM0D,YAAa,KAErB,EAAK1hB,SAAS,CACZ2iB,UAAW,EAAK7iB,MAAM6iB,SACtB/B,OAAQoC,EACR/B,mBAAoB,GACpBD,eAAgB,a,uDAMlB,IAAD,OACHsB,EAAa,aAAOhiB,KAAKR,MAAM8gB,QACnC,OACE,oCACE,yBAAKngB,UAAU,WACb,kBAAC+J,EAAA,EAAD,KACE,kBAACmE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWlM,IAAI,MAAf,iBACA,wBAAInC,UAAU,iBAAd,iCAEF,kBAAC0O,EAAA,EAAD,KACE,kBAAC3E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkC,GAAG,MACN,kBAACxJ,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,wBACZmF,MAAOjI,KAAKR,MAAM+I,QAClB6D,SAAU,SAACrL,GAAD,OACR,EAAKrB,SAAS,CAAE6I,QAASxH,EAAEuC,OAAO2E,YAIxC,kBAACkC,EAAA,EAAD,CAAKkC,GAAG,KACN,kBAACzK,EAAA,EAAD,CACEmG,MAAO,CAAE8J,MAAO,QAChBlS,MAAM,UACN6H,SAAUxH,KAAKR,MAAM4iB,YACrBzhB,QAASX,KAAKsiB,cAEbtiB,KAAKR,MAAM4iB,YAAc,eAAiB,YAIjD,kBAAClY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkC,GAAG,MACLrM,KAAKR,MAAMkhB,eAAejP,OAAS,EAClC,kBAACvH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkC,GAAG,MACN,kBAACzK,EAAA,EAAD,CACEjC,MAAM,SACNgB,QAASX,KAAKqhB,aACd7Z,SAAUxH,KAAKR,MAAMihB,YAEpBzgB,KAAKR,MAAMihB,WAAa,cAAgB,UAE3C,kBAAC7e,EAAA,EAAD,CACEjC,MAAM,UACNgB,QAASX,KAAKwiB,WACdhb,SAAUxH,KAAKR,MAAM6iB,UAEpBriB,KAAKR,MAAM6iB,SACR,aACA,yBAGR,kBAAClY,EAAA,EAAD,CACEkC,GAAG,KACHtE,MAAO,CACLpI,MAAO,QACPqI,QAAS,SAGVhI,KAAKR,MAAMkhB,eAAejP,OACzB,iCAGJ,MAEN,kBAACtH,EAAA,EAAD,CAAKkC,GAAG,MACN,kBAAC,KAAD,CACEiU,OAAQ0B,EACRL,cAAe3hB,KAAK2hB,2B,GApOA1e,aFgCtC8C,OAAQ,UAEV,CACEF,KAAM,gBACNM,KAAM,eACND,QAAS,2GACTD,KAAM,uBACN4O,UAAW/F,GACX/I,OAAQ,UAEV,CACEF,KAAM,aACNM,KAAM,YACND,QAAS,2GACTD,KAAM,2BACN4O,UAAWrH,GACXzH,OAAQ,UAEV,CACEF,KAAM,WACNM,KAAM,UACND,QAAS,2GACTD,KAAM,kCACN4O,U,4MGzDFrV,MAAQ,CACN4iB,aAAa,EACb7c,KAAM,KACNgD,QAAS,M,EAGXwD,SAAW,WACT,EAAKrM,SAAS,CACZ0iB,aAAc,EAAK5iB,MAAM4iB,e,uDAGnB,IAAD,OACP,OACE,oCACE,yBAAKjiB,UAAU,WACb,kBAACkO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAWlM,IAAI,MAAf,WACA,qEAEF,kBAACuM,EAAA,EAAD,KACE,kBAAC3E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKkC,GAAG,MACN,kBAACxJ,EAAA,EAAD,CACEnC,KAAK,OACLoC,YAAY,iBACZxB,GAAG,aAGP,kBAAC6I,EAAA,EAAD,CAAKkC,GAAG,KACN,kBAACzK,EAAA,EAAD,CACEmG,MAAO,CAAE8J,MAAO,QAChBlS,MAAM,UACN6H,SAAUxH,KAAKR,MAAM4iB,YACrBzhB,QAAS,WAC0C,KAA7C8C,SAASoN,eAAe,WAAW5I,OACrC,EAAKvI,SAAS,CACZ6I,QAAS9E,SAASoN,eAAe,WAAW5I,MAC5Cma,aAAa,MAKlBpiB,KAAKR,MAAM4iB,YAAc,eAAiB,YAIjD,kBAAClY,EAAA,EAAD,KACE,kBAAC,GAAD,CACE3B,QAASvI,KAAKR,MAAM+I,QACpB+C,OAAO,EACPS,SAAU/L,KAAK+L,oB,GApDI9I,aH2DjC8C,OAAQ,WTiDG4c,G,kDA9Gb,WAAYvjB,GAAQ,IAAD,8BACjB,cAAMA,IAuCRwB,cAAgB,WACd6C,SAASC,gBAAgBC,UAAUf,OAAO,YAC1C,EAAKlD,SAAS,CAAEe,eAAgB,EAAKjB,MAAMiB,iBA1C1B,EA4CnBmiB,UAAY,SAAAhe,GACV,OAAOA,EAAOa,KAAI,SAACC,EAAMC,GACvB,MAAoB,WAAhBD,EAAKK,OAEL,kBAAC,IAAD,CACEF,KAAMH,EAAKK,OAASL,EAAKG,KACzBgP,UAAWnP,EAAKmP,UAChBlP,IAAKA,IAIF,SAvDM,EA2DnBkd,cAAgB,SAAAljB,GACd,EAAKD,SAAS,CAAE8K,gBAAiB7K,KA5DhB,EA8DnBmjB,aAAe,SAAAjd,GACb,IAAK,IAAIkW,EAAI,EAAGA,EAAInX,GAAO6M,OAAQsK,IACjC,IAGS,IAFP,EAAK3c,MAAM4E,SAASC,SAASC,QAC3BU,GAAOmX,GAAGhW,OAASnB,GAAOmX,GAAGlW,MAG/B,OAAOjB,GAAOmX,GAAG5V,KAGrB,MAAO,SAtEP,EAAK3G,MAAQ,CACXgL,gBAAiB,OACjB/J,eAC8D,IAA5DgD,SAASC,gBAAgBvD,UAAU+D,QAAQ,aAL9B,E,gEASjB,GAAIC,UAAUC,SAASF,QAAQ,QAAU,EAAG,CAC1CT,SAASC,gBAAgBvD,WAAa,wBACtCsD,SAASC,gBAAgBC,UAAUC,OAAO,yBAC1C1E,GAAK,IAAImF,IAAiBrE,KAAKsE,KAAKye,UAAW,CAAEve,iBAAiB,IAElE,IADA,IAAIwe,EAASvf,SAASwf,iBAAiB,qBAC9BlH,EAAI,EAAGA,EAAIiH,EAAOvR,OAAQsK,IACjC7c,GAAK,IAAImF,IAAiB2e,EAAOjH,O,6CAKjC5X,UAAUC,SAASF,QAAQ,QAAU,IACvChF,GAAGwF,UACHjB,SAASC,gBAAgBvD,WAAa,yBACtCsD,SAASC,gBAAgBC,UAAUC,OAAO,2B,yCAG3B7C,GACjB,GAAyB,SAArBA,EAAEsH,QAAQhB,OAAmB,CAC/B,GAAIlD,UAAUC,SAASF,QAAQ,QAAU,EAEvC,IADA,IAAI8e,EAASvf,SAASwf,iBAAiB,qBAC9BlH,EAAI,EAAGA,EAAIiH,EAAOvR,OAAQsK,IACjC7c,GAAK,IAAImF,IAAiB2e,EAAOjH,IAGrCtY,SAASC,gBAAgBwf,UAAY,EACrCzf,SAAS0f,iBAAiBD,UAAY,EACtCljB,KAAKsE,KAAKye,UAAUG,UAAY,K,+BAuClC,OACE,oCACE,yBAAK/iB,UAAU,WACb,kBAAC,EAAD,iBACMH,KAAKZ,MADX,CAEEwF,OAAQA,GACRD,QAAS3E,KAAKR,MAAMgL,gBACpB5J,cAAeZ,KAAKY,iBAEtB,yBACET,UAAU,aACVqF,IAAI,YACJD,KAAMvF,KAAKR,MAAMgL,iBAEjB,kBAAC,EAAD,iBACMxK,KAAKZ,MADX,CAEE6B,UAAWjB,KAAK8iB,aAAa9iB,KAAKZ,MAAM4E,SAASC,UACjDrD,cAAeZ,KAAKY,cACpBH,cAAeT,KAAKR,MAAMiB,iBAE5B,kBAAC,IAAD,KACGT,KAAK4iB,UAAUhe,IAChB,kBAAC,IAAD,CAAUwe,KAAK,IAAI/d,GAAG,uBAG0B,IAAlDrF,KAAKZ,MAAM4E,SAASC,SAASC,QAAQ,QAAiB,KACpD,kBAAC,EAAD,CAAQ3D,OAAK,W,GAtGPyC,IAAMC,WaCpBogB,I,qBAAOC,eAEbC,IAASC,OACP,kBAAC,IAAD,CAAQnb,QAASgb,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOxd,KAAK,SAAS2d,OAAQ,SAACpkB,GAAD,OAAW,kBAAC,GAAgBA,MACzD,kBAAC,IAAD,CAAUgkB,KAAK,IAAI/d,GAAG,uBAG1B5B,SAASoN,eAAe,W","file":"static/js/main.3a5659bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false,\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  render() {\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </Link>\n        );\n        logoText = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </Link>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav>\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.props.toggleSidebar}\n                  >\n                    <i className={prop.icon} />\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}],\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string,\n  }),\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal,\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\",\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\",\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\",\n      });\n    }\n  };\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\",\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\",\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen,\n    });\n  };\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch,\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened,\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                <InputGroup className=\"search-bar\">\n                  <Button\n                    color=\"link\"\n                    data-target=\"#searchModal\"\n                    data-toggle=\"modal\"\n                    id=\"search-button\"\n                    onClick={this.toggleModalSearch}\n                  >\n                    <i className=\"tim-icons icon-zoom-split\" />\n                    <span className=\"d-lg-none d-md-block\">Search</span>\n                  </Button>\n                </InputGroup>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Profile</DropdownItem>\n                    </NavLink>\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Settings</DropdownItem>\n                    </NavLink>\n                    <DropdownItem divider tag=\"li\" />\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","import React from \"react\";\nimport { Container, Row, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Container fluid>\n          <Nav>\n            <NavItem>\n              <NavLink href=\"http://www.delve-serwiz.com/\">\n                DELVE SERVIZ\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"http://www.delve-serwiz.com/index.php#d_about\">\n                About Us\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <div className=\"copyright\">\n            © {new Date().getFullYear()} made with{\" \"}\n            <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\n            <a\n              href=\"https://grevity.in\"\n              target=\"_blank\"\n            >\n              Grevity\n            </a>{\" \"}\n            for a better web.\n          </div>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: `http://162.241.120.139:5000/v1/`,\n});\n","import React, {\n  useState,\n  useMemo,\n  useEffect,\n  forwardRef,\n} from \"react\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport Axios from \"./axios\";\nimport swal from \"sweetalert\";\nimport { Button } from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\nconst EventTable = forwardRef((props, ref) => {\n  const [overlayLoader, setOverlayLoader] = useState(false);\n  const [progress, setProgress] = useState(true);\n  const [data, setData] = useState([]);\n  createTheme(\"solarized\", {\n    text: {\n      primary: \"#ffffff\",\n      secondary: \"#9A9A9A\",\n    },\n    background: {\n      default: \"#27293d\",\n    },\n    action: {\n      button: \"rgba(0,0,0,.54)\",\n      hover: \"rgba(0,0,0,.08)\",\n      disabled: \"rgba(0,0,0,.12)\",\n    },\n  });\n\n  useEffect(() => {\n    if(props.data != null){\n      setProgress(false);\n    }\n  }, [props.data]);\n  const handleDeleteAction = (value) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        var arr = data.filter((item) => item.id !== value.id);\n        setData(arr);\n        await Axios.delete(\"/customer/delete/\" + value.id);\n        swal(\"Poof! Your content has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your Data is Safe!\");\n      }\n    });\n  };\n  const handleGalleryAction = (value) => {\n    return props.history.push({\n      pathname: \"/admin/event-gallery\",\n      state: { eventId: value.id },\n    });\n  };\n  const handleEditAction = (value) => {\n    setOverlayLoader(true);\n    Axios.get(\"/events/read-for-admin/\"+value.id)\n    .then(u=> {\n      setOverlayLoader(false);\n      localStorage.setItem(\"eventDataToUpdate\", JSON.stringify(u));\n      return props.history.push('/admin/manage-events');\n    })\n    \n  };\n  const handleDownloadAction = (value) => {\n    window.open(\"http://162.241.71.139:5000/v1/events/download-id-proofs/\" + value.id, \"_blank\");\n  };\n  const columns = useMemo(() => [\n    {\n      name: \"Event Id\",\n      selector: \"id\",\n    },\n    {\n      name: \"Name\",\n      selector: \"name\",\n    },\n    {\n      name: \"Customer Name\",\n      selector: \"customerName\",\n    },\n    {\n      name: \"Organisation\",\n      selector: \"customerOrganisation\",\n    },\n    {\n      name: \"Starts On\",\n      selector: \"liveFrom\",\n    },\n    {\n      name: \"Ends On\",\n      selector: \"liveTo\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleDownloadAction(row)}\n        >\n          <i className=\"tim-icons icon-cloud-download-93\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Download\",\n      selector: \"Download\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-success\"\n          onClick={() => handleGalleryAction(row)}\n        >\n          <i className=\"tim-icons icon-camera-18\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Gallery\",\n      selector: \"gallery\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleEditAction(row)}\n        >\n          <i className=\"tim-icons icon-pencil\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Edit\",\n      selector: \"edit\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-danger\"\n          onClick={() => handleDeleteAction(row)}\n        >\n          <i className=\"tim-icons icon-trash-simple\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      button: true,\n      name: \"Delete\",\n      selector: \"delete\",\n    },\n  ]);\n\n  return (\n    <>\n      <div\n        className=\"loading-overlay\"\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\n      >\n        <div class=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n        Loading...\n      </div>\n      <DataTable\n        data={props.data || []}\n        columns={columns}\n        theme=\"solarized\"\n        pagination={true}\n        progressPending={progress}\n        progressComponent={<h2>Loading Events... 📅</h2>}\n      />\n    </>\n  );\n});\n\nexport default withRouter(EventTable);\n","import React, { useState, useMemo, useEffect } from \"react\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport Axios from \"./axios\";\nimport swal from \"sweetalert\";\nimport { Button, Row, Col, Input, Label } from \"reactstrap\";\n\nconst ExpandableComponent = ({ data }) => (\n  <>\n    <Row>\n      <Col md=\"12\" style={{ margin: \"24px\" }}>\n        Question:{\" \"}\n        <div\n          style={{\n            color: \"white\",\n            padding: \"14px\",\n            marginTop: \"8px\",\n            marginBottom: \"8px\",\n            backgroundColor: \"#0000002b\",\n            borderRadius: \"4px\",\n          }}\n        >\n          {data.question}\n        </div>\n        Answer:{\" \"}\n        <div\n          style={{\n            color: data.answer == null ? \"#ff6464\" : \"white\",\n            padding: \"14px\",\n            marginTop: \"8px\",\n            backgroundColor: \"#0000002b\",\n            borderRadius: \"4px\",\n          }}\n        >\n          {data.answer == null ? \"Not Answered Yet!\" : data.answer}\n        </div>\n      </Col>\n    </Row>\n  </>\n);\n\nconst QueryTable = (props) => {\n  const [overlayLoader, setOverlayLoader] = useState(false);\n  const [progress, setProgress] = useState(true);\n  const [data, setData] = useState([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [answer, setAnswer] = useState(\"\");\n  const [openedQueryId, setOpenQueryId] = useState(\"\");\n  const [openedQueryAttendeeId, setOpenQueryAttendeeId] = useState(\"\");\n\n  useEffect(() => {\n    if (!props.inAll) {\n      Axios.get(\"query/get-latest\").then((u) => {\n        const modifiedData = u.data.map((row) => {\n          return {\n            ...row,\n            attendeeName: row.Attendee.name,\n            attendeePhone: row.Attendee.phone,\n            attendeeEmail: row.Attendee.email,\n            attendeeId: row.Attendee.id,\n            //TODO: implement event name in queries table\n            // EventName: row.Event.name,\n          };\n        });\n        setData(modifiedData);\n        setProgress(false);\n      });\n    } else {\n      if (props.eventId) {\n        Axios.get(`query/get-all/${props.eventId}`).then((u) => {\n          const modifiedData = u.data.map((row) => {\n            return {\n              ...row,\n              attendeeName: row.Attendee.name,\n              attendeePhone: row.Attendee.phone,\n              attendeeEmail: row.Attendee.email,\n              attendeeId: row.Attendee.id,\n              //TODO: implement event name in queries table\n              // EventName: row.Event.name,\n            };\n          });\n          setData(modifiedData);\n          setProgress(false);\n          props.searched();\n        });\n      } else {\n        setData([]);\n        setProgress(false);\n      }\n    }\n  }, [props.eventId]);\n\n  createTheme(\"solarized\", {\n    text: {\n      primary: \"#ffffff\",\n      secondary: \"#9A9A9A\",\n    },\n    background: {\n      default: \"#27293d\",\n    },\n    action: {\n      button: \"rgba(255,255,255, 1)\",\n      hover: \"rgba(255,255,255, 1)\",\n      disabled: \"rgba(255,255,255, 1)\",\n    },\n  });\n\n  const handleDeleteAction = (value) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        var arr = data.filter((item) => item.id !== value.id);\n        setData(arr);\n        await Axios.delete(\"/customer/delete/\" + value.id);\n        swal(\"Poof! Your content has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your Data is Safe!\");\n      }\n    });\n  };\n  const handleResolveAction = (value) => {\n    setShowModal(true);\n    setOpenQueryId(value.id);\n    setOpenQueryAttendeeId(value.attendeeId);\n  };\n  const saveAnswer = () => {\n    setIsSaving(true);\n    Axios.post(\"query/resolve\", {\n      answer: answer,\n      id: openedQueryId,\n      attendeeId: openedQueryAttendeeId,\n    }).then((u) => {\n      if (props.eventId == null) {\n        Axios.get(\"query/get-latest\").then((u) => {\n          const modifiedData = u.data.map((row) => {\n            return {\n              ...row,\n              attendeeName: row.Attendee.name,\n              attendeePhone: row.Attendee.phone,\n              attendeeEmail: row.Attendee.email,\n              attendeeId: row.Attendee.id,\n              //TODO: implement event name in queries table\n              // EventName: row.Event.name,\n            };\n          });\n          setData(modifiedData);\n          setProgress(false);\n          setIsSaving(false);\n          setShowModal(false);\n        });\n      } else {\n        Axios.get(`query/get-all/${props.eventId}`).then((u) => {\n          const modifiedData = u.data.map((row) => {\n            return {\n              ...row,\n              attendeeName: row.Attendee.name,\n              attendeePhone: row.Attendee.phone,\n              attendeeEmail: row.Attendee.email,\n              attendeeId: row.Attendee.id,\n              //TODO: implement event name in queries table\n              // EventName: row.Event.name,\n            };\n          });\n          setData(modifiedData);\n          setProgress(false);\n          setIsSaving(false);\n          setShowModal(false);\n        });\n      }\n    });\n  };\n  const columns = useMemo(() => [\n    {\n      name: \"#\",\n      selector: \"id\",\n      maxWidth: \"18px\",\n    },\n    {\n      name: \"Event Id\",\n      selector: \"EventId\",\n      maxWidth: \"18px\",\n    },\n    {\n      name: \"Event Name\",\n      selector: \"EventName\",\n    },\n    {\n      selector: \"question\",\n      name: \"Question\",\n    },\n    {\n      name: \"Answer\",\n      selector: \"answer\",\n    },\n    {\n      name: \"Attendee\",\n      selector: \"attendeeName\",\n    },\n    {\n      name: \"Attendee Phone\",\n      selector: \"attendeePhone\",\n    },\n    {\n      name: \"Attendee Email\",\n      selector: \"attendeeEmail\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleResolveAction(row)}\n        >\n          Resolve\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Edit\",\n      selector: \"edit\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-danger\"\n          onClick={() => handleDeleteAction(row)}\n        >\n          <i className=\"tim-icons icon-trash-simple\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      button: true,\n      name: \"Delete\",\n      selector: \"delete\",\n    },\n  ]);\n\n  return (\n    <>\n      {showModal ? (\n        <div className=\"Modal-Root\">\n          <div className=\"resolve-card\">\n            <Row>\n              <Col md=\"12\">\n                <h3\n                  style={{\n                    paddingTop: \"18px\",\n                  }}\n                >\n                  Resolve Query\n                </h3>\n              </Col>\n              <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\n                <Label>Answer</Label>\n                <Input\n                  type=\"textarea\"\n                  onChange={(e) => setAnswer(e.target.value)}\n                />\n              </Col>\n            </Row>\n            <Row className=\"justify-content-between\">\n              <Col\n                md=\"12\"\n                xs=\"12\"\n                className=\"d-flex justify-content-end\"\n                style={{ padding: \"18px\" }}\n              >\n                <Button\n                  color=\"warning\"\n                  onClick={() => {\n                    setIsSaving(false);\n                    setShowModal(false);\n                    setOpenQueryId(\"\");\n                    setOpenQueryAttendeeId(\"\");\n                    setAnswer(\"\");\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  color=\"success\"\n                  disabled={isSaving}\n                  onClick={saveAnswer}\n                >\n                  {isSaving ? \"Saving...\" : \"Save\"}\n                </Button>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      ) : null}\n      <div\n        className=\"loading-overlay\"\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\n      >\n        <div class=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n        Loading...\n      </div>\n      <DataTable\n        data={data || []}\n        columns={columns}\n        theme=\"solarized\"\n        pagination={true}\n        progressPending={progress}\n        expandableRowsComponent={<ExpandableComponent />}\n        expandableRows\n        progressComponent={<h2>Loading Queries...</h2>}\n      />\n    </>\n  );\n};\n\nexport default QueryTable;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport Axios from \"../components/sub/axios\";\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport EventTable from \"components/sub/eventsTable\";\nimport QueryTable from \"../components/sub/queryTable\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data2\",\n      tableState: 1,\n      currentTableCount: 0,\n      pastTableCount: 0,\n      futureTableCount: 0,\n      tableData: [],\n    };\n  }\n  componentDidMount = () => {\n    Promise.all([\n      Axios.get(\n        \"/events/get-current-raw/\" + this.state.currentTableCount.toString()\n      ),\n      Axios.get(\"/events/get-past-raw/\" + this.state.pastTableCount.toString()),\n      Axios.get(\n        \"/events/get-future-raw/\" + this.state.futureTableCount.toString()\n      ),\n    ]).then(([a, b, c]) => {\n      var tableTempData = this.state.tableData;\n      var futureTableData = c.data.map((element) => {\n        var obj = {};\n        obj[\"id\"] = element.id;\n        obj[\"customerId\"] = element.Customers.id;\n        obj[\"customerName\"] = element.Customers.name;\n        obj[\"customerOrganisation\"] = element.Customers.organisation;\n        obj[\"liveFrom\"] = new Date(element.liveFrom).toDateString();\n        obj[\"liveTo\"] = new Date(element.liveTo).toDateString();\n        obj[\"name\"] = element.name;\n        return obj;\n      });\n      tableTempData.push(futureTableData);\n      var currentTableData = a.data.map((element) => {\n        var obj = {};\n        obj[\"id\"] = element.id;\n        obj[\"customerId\"] = element.Customers.id;\n        obj[\"customerName\"] = element.Customers.name;\n        obj[\"customerOrganisation\"] = element.Customers.organisation;\n        obj[\"liveFrom\"] = new Date(element.liveFrom).toDateString();\n        obj[\"liveTo\"] = new Date(element.liveTo).toDateString();\n        obj[\"name\"] = element.name;\n        return obj;\n      });\n      tableTempData.push(currentTableData);\n      var pastTableData = b.data.map((element) => {\n        var obj = {};\n        obj[\"id\"] = element.id;\n        obj[\"customerId\"] = element.Customers.id;\n        obj[\"customerName\"] = element.Customers.name;\n        obj[\"customerOrganisation\"] = element.Customers.organisation;\n        obj[\"liveFrom\"] = new Date(element.liveFrom).toDateString();\n        obj[\"liveTo\"] = new Date(element.liveTo).toDateString();\n        obj[\"name\"] = element.name;\n        return obj;\n      });\n      tableTempData.push(pastTableData);\n\n      this.setState({\n        tableData: tableTempData,\n      });\n    });\n  };\n  setBgChartData = (name) => {\n    this.setState({\n      bigChartData: name,\n    });\n  };\n  render() {\n    console.log(this.state.tableData[this.state.tableState]);\n    return (\n      <React.Fragment>\n        <div className=\"content\">\n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"6\">\n                      <CardTitle tag=\"h2\">Events</CardTitle>\n                      <h5 className=\"card-category\">Total Events</h5>\n                    </Col>\n                    <Col sm=\"6\">\n                      <ButtonGroup\n                        className=\"btn-group-toggle float-right\"\n                        data-toggle=\"buttons\"\n                      >\n                        <Button\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data1\",\n                          })}\n                          color=\"info\"\n                          id=\"0\"\n                          size=\"sm\"\n                          onClick={() =>\n                            this.setState({\n                              tableState: 2,\n                              bigChartData: \"data1\",\n                            })\n                          }\n                        >\n                          <input\n                            defaultChecked\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Past\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-single-02\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"1\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data2\",\n                          })}\n                          onClick={() =>\n                            this.setState({\n                              tableState: 1,\n                              bigChartData: \"data2\",\n                            })\n                          }\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Current\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-gift-2\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"2\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data3\",\n                          })}\n                          onClick={() =>\n                            this.setState({\n                              tableState: 0,\n                              bigChartData: \"data3\",\n                            })\n                          }\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Upcoming\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-tap-02\" />\n                          </span>\n                        </Button>\n                      </ButtonGroup>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <EventTable\n                    data={this.state.tableData[this.state.tableState] || null}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Queries</CardTitle>\n                  <h5 className=\"card-category\">Queries Raised by Attendees</h5>\n                </CardHeader>\n                <CardBody>\n                  <QueryTable />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Table,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Dropdown,\n  Col,\n} from \"reactstrap\";\n\nclass UserProfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n    };\n  }\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Edit Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label>Full Name</label>\n                          <Input placeholder=\"Name\" type=\"text\" />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label htmlFor=\"exampleInputEmail1\">\n                            Email address\n                          </label>\n                          <Input placeholder=\"mike@email.com\" type=\"email\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Phone Number</label>\n                          <Input placeholder=\"Phone Number\" type=\"number\" />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Password</label>\n                          <Input placeholder=\"password\" type=\"password\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n                <CardFooter>\n                  <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Create Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label>Full Name</label>\n                          <Input placeholder=\"Name\" type=\"text\" />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label htmlFor=\"exampleInputEmail1\">\n                            Email address\n                          </label>\n                          <Input placeholder=\"mike@email.com\" type=\"email\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Password</label>\n                          <Input placeholder=\"password\" type=\"password\" />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Phone Number</label>\n                          <Input placeholder=\"Phone Number\" type=\"number\" />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Role</label>\n                          <Dropdown\n                            isOpen={this.state.dropdownOpen}\n                            toggle={() => {\n                              this.setState({\n                                dropdownOpen: !this.state.dropdownOpen,\n                              });\n                            }}\n                          >\n                            <DropdownToggle>Select Role</DropdownToggle>\n                            <DropdownMenu>\n                              <DropdownItem header>\n                                Roles Available\n                              </DropdownItem>\n                              <DropdownItem>Super Admin</DropdownItem>\n                              <DropdownItem>Admin</DropdownItem>\n                            </DropdownMenu>\n                          </Dropdown>\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n                <CardFooter>\n                  <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\n                    Create\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <CardHeader>\n                    <h5 className=\"title\">Users List</h5>\n                  </CardHeader>\n                  <CardBody>\n                    <Table className=\"tablesorter\" responsive>\n                      <thead className=\"text-primary\">\n                        <tr>\n                          <th>User Name</th>\n                          <th>User Email</th>\n                          <th>User Phone</th>\n                          <th className=\"text-center\">Actions</th>\n                        </tr>\n                      </thead>\n                    </Table>\n                  </CardBody>\n                </CardHeader>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React, { Component } from \"react\";\nimport JoditEditor from \"jodit-react\";\n\nclass Editor extends Component {\n  state = {\n    content: \"\",\n  };\n  returnContent = () => {\n    return this.state.content\n  }\n  render() {\n    const config = {\n      readonly: false, // all options from https://xdsoft.net/jodit/doc/\n    };\n    return (\n      <JoditEditor\n        value={this.content}\n        config={config}\n        tabIndex={1} // tabIndex of textarea\n        onBlur={(newContent) => this.setState({ content: newContent })} // preferred to use only this option to update the content for performance reasons\n        onChange={(newContent) => {}}\n      />\n    );\n  }\n}\nexport default Editor;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input, Col,Row } from \"reactstrap\";\n\nclass Autocomplete extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array),\n  };\n  static defaultProps = {\n    suggestions: [],\n  };\n  constructor(props) {\n    super(props);\n    console.log(props)\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n      id:null,\n    };\n  }\n  onChange = (e) => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n    const filteredSuggestions = suggestions.filter(\n      (suggestion) =>\n        suggestion.Name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value,\n    });\n  };\n  returnId = () => {\n    return this.state.id;\n  }\n  removeId = (id) => {\n    var idArr = document.getElementById(this.props.id).value.split(\",\");\n    const index = idArr.indexOf(id);\n    if (index > -1) {\n      idArr.splice(index, 1);\n    }\n    document.getElementById(this.props.id).value = idArr.join();\n  };\n  onClick = (e) => {\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      id: e.currentTarget.id,\n      userInput: e.currentTarget.firstChild.firstChild.innerText,\n    });\n    if(this.props.setId) this.props.setId(e.currentTarget.id);\n  };\n  setData = (data) => {\n    this.setState({\n      id: this.props.suggestions.filter((e) => e.Name == data)[0].id,\n      userInput: data,\n    });\n  }\n  setDataUsingId = (Id) => {\n    this.setState({\n      id: this.props.suggestions.filter((e) => e.id == Id)[0].id,\n      userInput: this.props.suggestions.filter((e) => e.id == Id)[0].Name,\n    });\n  }\n  onKeyDown = (e) => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n    if (e.keyCode === 13) {\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[activeSuggestion],\n      });\n    } else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n  };\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput,\n      },\n    } = this;\n\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        var fieldLength = document.getElementById(this.props.id).clientWidth;\n        suggestionsListComponent = (\n          <div className=\"row\">\n            <ul\n              class={`suggestions ${this.props.className}`}\n              style={{ width: fieldLength }}\n            >\n              {filteredSuggestions.map((suggestion, index) => {\n                let className;\n                if (index === activeSuggestion) {\n                  className = \"suggestion-active\";\n                }\n                console.log(suggestion);\n                return (\n                  <li\n                    className={className}\n                    key={suggestion.id}\n                    id={suggestion.id}\n                    onClick={onClick}\n                  >\n                    <Row>\n                      <Col md=\"6\">{suggestion.Name}</Col>\n                      {suggestion.Phone != undefined ?  <Col md=\"6\">\n                        <em>{suggestion.Phone}</em>\n                      </Col> : null}\n                    </Row>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        );\n      } else {\n        var fieldLength = document.getElementById(this.props.id).clientWidth;\n        suggestionsListComponent = (\n          <div className=\"row justify-content-center\">\n            <ul class=\"suggestions\" style={{ width: fieldLength }}>\n              <li>\n                <em>No suggestions (or wait)</em>\n              </li>\n            </ul>\n          </div>\n        );\n      }\n    }\n    return (\n      <Fragment>\n        <Input\n          type=\"text\"\n          class=\"form-control d-xl-flex\"\n          id={this.props.id}\n          placeholder={this.props.hint == null ? \"Name\" : this.props.hint}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          style={{\n            marginTop: this.props.marginTop || \"17px\",\n            paddingLeft: \"12px\",\n            marginBottom: \"0px\",\n            Height: \"38px\",\n            paddingBottom: \"7px\",\n            width: \"100%\",\n            paddingRight: \"19px\",\n          }}\n          value={userInput}\n        />\n        <div className=\"row\">{suggestionsListComponent}</div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Autocomplete;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Autocomplete extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array),\n  };\n\n  static defaultProps = {\n    suggestions: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n    };\n  }\n\n  onChange = (e) => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n    const filteredSuggestions = suggestions.filter(\n      (suggestion) =>\n        suggestion.Name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n    );\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value,\n    });\n  };\n  removeId = (id) => {\n    var idArr = document.getElementById(this.props.id).value.split(\",\");\n    const index = idArr.indexOf(id.toString());\n    if (index > -1) {\n      idArr.splice(index, 1);\n    }\n    document.getElementById(this.props.id).value = idArr.join();\n  };\n  removeAllIds = () => {\n    document.getElementById(this.props.id).value = \"\"\n  }\n  onClick = (e) => {\n    var idArr =\n      document.getElementById(this.props.id).value === \"\"\n        ? []\n        : document.getElementById(this.props.id).value.split(\",\");\n    if (idArr.includes(e.target.id)) {\n      alert(\"Already Added this Catagory\");\n    } else {\n      idArr.push(e.target.id);\n      document.getElementById(this.props.id).value = idArr.join();\n      this.props.categoryChipHit({\n        name: e.currentTarget.innerText,\n        id: e.target.id,\n      });\n    }\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n    });\n  };\n  addItemToUpdate = (data) => {\n    document.getElementById(this.props.id).value = data.id;\n    this.props.ChipHitAfterRemoving({\n      name: data.name,\n      id: data.id,\n    });\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\",\n    });\n  }\n  onKeyDown = (e) => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n    if (e.keyCode === 13) {\n      this.setState({\n        activeSuggestion: 0,\n        showSuggestions: false,\n        userInput: filteredSuggestions[activeSuggestion],\n      });\n    } else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n    } else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === filteredSuggestions.length) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n    }\n  };\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput,\n      },\n    } = this;\n\n    let suggestionsListComponent;\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        var fieldLength = document.getElementById(\"txtcategory\").clientWidth;\n        suggestionsListComponent = (\n          <div className=\"row\">\n            <ul class=\"suggestions\" style={{ width: fieldLength }}>\n              {filteredSuggestions.map((suggestion, index) => {\n                let className;\n                if (index === activeSuggestion) {\n                  className = \"suggestion-active\";\n                }\n                return (\n                  <li\n                    className={className}\n                    key={suggestion.id}\n                    id={suggestion.id}\n                    onClick={onClick}\n                  >\n                    {suggestion.Name}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        );\n      } else {\n        var fieldLength = document.getElementById(\"txtcategory\").clientWidth;\n        suggestionsListComponent = (\n          <div className=\"row justify-content-center\">\n            <ul class=\"suggestions\" style={{ width: fieldLength }}>\n              <li>\n                <em>No suggestions</em>\n              </li>\n            </ul>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <Fragment>\n        <input type=\"hidden\" id={this.props.id} />\n        <input\n          type=\"text\"\n          class=\"form-control d-xl-flex\"\n          id=\"txtcategory\"\n          placeholder={this.props.hint == null ? \"Name\" : this.props.hint}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n          style={{\n            marginTop: \"17px\",\n            paddingLeft: \"12px\",\n            Height: \"38px\",\n            paddingBottom: \"7px\",\n            width: \"100%\",\n            paddingRight: \"19px\",\n          }}\n          value={userInput}\n        />\n        <div className=\"row\">{suggestionsListComponent}</div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Autocomplete;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport routes from \"routes.js\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"blue\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  render() {\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>\n              {this.getRoutes(routes)}\n              <Redirect from=\"*\" to=\"/admin/dashboard\"/>\n            </Switch>\n            {// we don't want the Footer to be rendered on map page\n            this.props.location.pathname.indexOf(\"maps\") !== -1 ? null : (\n              <Footer fluid />\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","import React, { Component } from \"react\";\n\nclass CategoryChips extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chips: [],\n    };\n  }\n  addChip = (val) => {\n    var tempChips = this.state.chips;\n    tempChips.push(val);\n    this.setState({\n      chips: tempChips,\n    });\n  };\n  addChipByremoving = (val) => {\n    this.setState(\n      {\n        chips: [],\n      },\n      () => {\n        var tempChips = this.state.chips;\n        tempChips.push(val);\n        this.setState({\n          chips: tempChips,\n        });\n      }\n    );\n  }\n  removeAllChips = () => {\n    this.setState({\n      chips: [],\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"root-chips row\">\n          {this.state.chips.length == 0 ? (\n            <em>Nothing've been Added Yet!</em>\n          ) : (\n            this.state.chips.map((item) => (\n              <div\n                key={item.id}\n                onClick={() => {\n                  this.props.removeId(item.id);\n                  var temArr = this.state.chips.filter((element) => {\n                    return element.id != item.id;\n                  });\n                  this.setState({\n                    chips: temArr,\n                  });\n                }}\n              >\n                {item.name}\n              </div>\n            ))\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CategoryChips;\n","import React,{ Component } from \"react\";\nimport {\n  Button,\n  Row,\n  Col,\n  FormGroup,\n  Input,\n} from \"reactstrap\";\nexport default class Agendas extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          id:\"\",\n          name: \"\",\n          venue: \"\",\n          startTime: \"\",\n          endTime: \"\",\n          remarks: \"\",\n          startDate: \"\",\n        };\n    }\n    returnState = () => {\n        return this.state\n    }\n    resetState = () => {\n      this.setState({\n        name: \"\",\n        venue: \"\",\n        startTime: \"\",\n        endTime: \"\",\n        remarks: \"\",\n        startDate: \"\",\n        id:\"\",\n      });\n    }\n    setData = (data) => {\n      this.setState({\n        id:data.id,\n        name: data.name,\n        venue: data.venue,\n        startTime: new Date(data.startTime).toISOString().split(\"Z\")[0],\n        endTime: new Date(data.endTime).toISOString().split(\"Z\")[0],\n        remarks: data.remarks,\n        startDate: data.startDate,\n      });\n    }\n    render() {\n        return (\n            <Row>\n              <Col md=\"12\">\n                <FormGroup>\n                  <label>Agendas Name (Particulars)</label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Particulars\"\n                    value={this.state.name}\n                    onChange={(e) => {\n                      this.setState({\n                        name: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"6\">\n                <FormGroup>\n                  <label>Agenda Start Date & Time</label>\n                  <Input\n                    type=\"datetime-local\"\n                    value={this.state.startTime}\n                    onChange={(e) => {\n                      console.log(e.target.value)\n                      this.setState({\n                        startTime: e.target.value,\n                        startDate: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"6\">\n                <FormGroup>\n                  <label>Agenda End Date & Time</label>\n                  <Input\n                    type=\"datetime-local\"\n                    value={this.state.endTime}\n                    onChange={(e) => {\n                      this.setState({\n                        endTime: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"12\">\n                <FormGroup>\n                  <label>Agenda Venue</label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Venue\"\n                    value={this.state.venue}\n                    onChange={(e) => {\n                      this.setState({\n                        venue: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n              <Col md=\"12\">\n                <FormGroup>\n                  <label>Remarks</label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Remarks/Dress Code\"\n                    value={this.state.remarks}\n                    onChange={(e) => {\n                      this.setState({\n                        remarks: e.target.value,\n                      });\n                    }}\n                  />\n                </FormGroup>\n              </Col>\n            </Row>\n        );\n                     \n    }\n}","import React,{ Component } from \"react\";\nimport {\n    Row,\n    Col,\n    FormGroup,\n    Input,\n} from \"reactstrap\";\n\nexport default class Transfers extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          id: undefined,\n          name: \"\",\n          origin: \"\",\n          destination: \"\",\n          mode: \"\",\n          vehicleNumber: \"\",\n          driverName: \"\",\n          distance: \"\",\n          driverPhone: \"\",\n          journeyTime: \"\",\n          transferDate: \"\",\n        };\n    }\n\n    returnState = () => {\n        return this.state\n    }\n    setData = (data) => {\n      this.setState({\n        id:data.id,\n        name: data.name,\n        origin: data.origin,\n        destination: data.destination,\n        mode: data.mode,\n        vehicleNumber: data.vehicleNumber,\n        driverName: data.driverName,\n        distance: data.distance,\n        driverPhone: data.driverPhone,\n        journeyTime: data.journeyTime,\n        transferDate: data.transferDate.split(\"Z\")[0],\n      });\n    }\n    render() {\n        return (\n          <Col md=\"12\">\n            <Col md=\"12\" className=\"category-col\">\n              <label>Transfer Name</label>\n              <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Transfer Name\"\n                      value={this.state.name}\n                      onChange={(e) => {\n                        this.setState({\n                          name: e.target.value,\n                        });\n                      }}\n                    ></Input>\n                  </Col>\n                </Row>\n              </FormGroup>\n              <FormGroup>\n                <Row>\n                  <Col md=\"12\">\n                    <label>Transfer Date</label>\n                    <Input\n                      type=\"datetime-local\"\n                      value={this.state.transferDate}\n                      onChange={(e) => {\n                        this.setState({\n                          transferDate: e.target.value,\n                        });\n                      }}\n                    ></Input>\n                  </Col>\n                </Row>\n              </FormGroup>\n              <Row>\n                <Col md=\"6\">\n                  <label>Mode of Transfer</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Vehicle Type\"\n                          value={this.state.mode}\n                          onChange={(e) => {\n                            this.setState({\n                              mode: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <label>Vehicle Number</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Vehicle Number\"\n                          value={this.state.vehicleNumber}\n                          onChange={(e) => {\n                            this.setState({\n                              vehicleNumber: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"6\">\n                  <label>Driver Name</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Name\"\n                          value={this.state.driverName}\n                          onChange={(e) => {\n                            this.setState({\n                              driverName: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <label>Driver Phone</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"number\"\n                          placeholder=\"Phone Number\"\n                          value={this.state.driverPhone}\n                          onChange={(e) => {\n                            this.setState({\n                              driverPhone: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"6\">\n                  <label>Origin</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Location\"\n                          value={this.state.origin}\n                          onChange={(e) => {\n                            this.setState({\n                              origin: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <label>Destination</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Location\"\n                          value={this.state.destination}\n                          onChange={(e) => {\n                            this.setState({\n                              destination: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col md=\"6\">\n                  <label>Total Distance</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Distance (Kms)\"\n                          value={this.state.distance}\n                          onChange={(e) => {\n                            this.setState({\n                              distance: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n                <Col md=\"6\">\n                  <label>Journey Time</label>\n                  <FormGroup>\n                    <Row>\n                      <Col md=\"12\">\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Time\"\n                          value={this.state.journeyTime}\n                          onChange={(e) => {\n                            this.setState({\n                              journeyTime: e.target.value,\n                            });\n                          }}\n                        ></Input>\n                      </Col>\n                    </Row>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </Col>\n          </Col>\n        );\n\n    }\n}","import React, { createRef } from \"react\";\nimport Editor from \"../components/sub/Editor\";\nimport Autocomplete from \"../components/sub/autosuggest-norm\";\nimport Axios from \"../components/sub/axios\";\nimport AutocompleteSimple from \"../components/sub/autosuggest\";\nimport CategoryChips from \"../components/sub/categorychips\";\nimport Agendas from \"../components/sub/agendas\";\n\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Table,\n} from \"reactstrap\";\nimport Transfers from \"components/sub/transfers\";\n\nconst s26 = {\n  width: \"100%\",\n};\n\nconst s50 = {\n  marginLeft: \"15px\",\n  marginTop: \"14px\",\n};\n\nclass ManageEvents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.EditorRef = createRef();\n    this.EventAttendies = createRef();\n    this.agendaRef = createRef();\n    this.countryRef = createRef();\n    this.customerRef = createRef();\n    this.cityRef = createRef();\n\n    this.representativeNameRef = createRef();\n    this.RepresentativeNameAutocompleteRef = createRef();\n\n    this.representativeCategoryRef = createRef();\n    this.RepresentativeCategoryAutocompleteRef = createRef();\n    this.state = {\n      eventId: null,\n      eventName: \"\",\n      eventBy: null,\n      eventFrom: \"\",\n      eventTo: \"\",\n      venueName: \"\",\n      venueUrl: \"\",\n      eventImage: \"\",\n      eventPlackCardImage: \"\",\n      addedAttendie: true,\n      eventPlackCardImageName: \"Choose Image File\",\n      eventImage: \"\",\n      eventImageName: \"Choose Image File\",\n      welcomeNote: \"\",\n      countryId: null,\n      cityId: null,\n      customerId: null,\n      createNewRepresentative: false,\n      createNewRepresentativeCategory: false,\n      createdNewRepresentativeCategory: true,\n      createdRepresentative: true,\n      suggestionCities: [],\n      sugggestionCustomers: [],\n      suggestionCountries: [],\n      transfers: [],\n      agendas: [],\n      currTransferElement: null,\n      rIsFilled: true,\n      representativePhone: \"\",\n      representativeName: \"\",\n      representativeCategoryName: \"\",\n      Representatives: [],\n      EventAttendies: [],\n      representativeArr: [],\n      RepresentativesCategory: [],\n      TicketsSame: false,\n      isEditorOpen: false,\n      aTicketFileName: \"Choose Ticket File\",\n      dTicketFileName: \"Choose Ticket File\",\n      updatingAgenda: false,\n      updatingAttendee: false,\n      updatingAgendaObject: null,\n      updatingRepresentatives: false,\n      updatingRepresentativesNameId: null,\n      updatingRepresentativesCategoryId: null,\n      updatingAttendeePhone: null,\n    };\n  }\n  createNewTransfer = (data) => {\n    var tempTansfers = [];\n    tempTansfers = this.state.transfers;\n    var transferRef = createRef();\n    tempTansfers.push({\n      component: (\n        <Transfers ref={transferRef} key={this.state.transfers.length + 1} />\n      ),\n      ref: transferRef,\n      isFilled: data ? true : false,\n      data: data || {},\n    });\n    this.setState({\n      transfers: tempTansfers,\n      rIsFilled: data ? !!this.state.rIsFilled : !this.state.rIsFilled,\n    });\n  };\n  haveAnythingEmpty = (formData) => {\n    for (var key in formData) {\n      if (formData[key] === \"\") {\n        return true;\n      }\n    }\n    return false;\n  };\n  setDataToFields = (u) => {\n    var data = JSON.parse(u).data;\n    this.setState({\n      eventId: data.id,\n      eventName: data.name,\n      eventBy: data.CustomerId,\n      eventFrom: new Date(data.liveFrom).toISOString().split(\"T\")[0],\n      eventTo: new Date(data.liveTo).toISOString().split(\"T\")[0],\n      venueName: data.Locations.name,\n      venueUrl: data.Locations.url,\n      customerId: data.CustomerId,\n      eventPlackCardImageName: data.plackCardImage.split(\"/\")[\n        data.plackCardImage.split(\"/\").length - 1\n      ],\n      eventImageName: data.eventImage.split(\"/\")[\n        data.eventImage.split(\"/\").length - 1\n      ],\n      welcomeNote: data.welcomeNote,\n      countryId: data.Locations.CountryId,\n      cityId: data.Locations.CityId,\n      agendas: data.Agendas.map((a) => {\n        a = { ...a, startTime: new Date(a.startDate + \"T\" + a.startTime) };\n        a = { ...a, endTime: new Date(a.startDate + \"T\" + a.endTime) };\n        return a;\n      }),\n      EventAttendies: data.Attendees.map((a) => {\n        return {\n          ...a,\n          isSameAsArriving: a.dticket == null,\n        };\n      }),\n      representativeArr: data.Representatives_for_Events.map((a) => {\n        var obj = {};\n        obj[\"Name\"] = a.Employees.name;\n        obj[\"Category\"] = a.Representative_Categories.name;\n        obj[\"RepresentativeCategoryId\"] = a.RepresentativeCategoryId;\n        obj[\"EmployeeId\"] = a.EmployeeId;\n        obj[\"id\"] = a.id;\n        return obj;\n      }),\n    });\n    data.Transfers.map((elem) => {\n      this.createNewTransfer(elem);\n    });\n    this.countryRef.current.setDataUsingId(this.state.countryId);\n    this.cityRef.current.setDataUsingId(this.state.cityId);\n    this.customerRef.current.setDataUsingId(this.state.customerId);\n  };\n  componentWillMount = () => {\n    Promise.all([\n      Axios.get(\"/location/country/get-all\"),\n      Axios.get(\"/location/city/get-all\"),\n      Axios.get(\"/customer/get-all\"),\n      Axios.get(\"/representative/category/get-all\"),\n      Axios.get(\"/representative/employee/get-all\"),\n    ]).then(([u, a, d, e, f]) => {\n      this.setState({\n        suggestionCountries: u.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n        suggestionCities: a.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n        sugggestionCustomers: d.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          b[\"Phone\"] = a.phone;\n          return b;\n        }),\n        Representatives: f.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          b[\"Phone\"] = a.phone;\n          return b;\n        }),\n        RepresentativesCategory: e.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n      });\n      if (localStorage.getItem(\"eventDataToUpdate\"))\n        this.setDataToFields(localStorage.getItem(\"eventDataToUpdate\"));\n    });\n  };\n  categoryChipHit = (val) => {\n    this.representativeNameRef.current.addChip(val);\n  };\n  categoryChipHitAfterRemoving = (val) => {\n    this.representativeCategoryRef.current.addChipByremoving(val);\n  };\n  representativesNameChipHitAfterRemoving = (val) => {\n    this.representativeNameRef.current.addChipByremoving(val);\n  };\n  categoryNameChipHit = (val) => {\n    this.representativeCategoryRef.current.addChip(val);\n  };\n  categoryIdfromHiddenField = (val) => {\n    this.RepresentativeNameAutocompleteRef.current.removeId(val);\n  };\n  categoryIdfromHiddenField_CategoryName = (val) => {\n    this.RepresentativeCategoryAutocompleteRef.current.removeId(val);\n  };\n  modifyDataWithEventId = (EventId) => {\n    //represntatives...\n    var representativeTemp = this.state.representativeArr;\n    var newRepresentativeArr = representativeTemp.map((obj) => ({\n      ...obj,\n      EventId: EventId,\n    }));\n    //event attendies...\n    var EventAttendiesTemp = this.state.EventAttendies;\n    var newAttendiesObj = EventAttendiesTemp.map((obj) => ({\n      ...obj,\n      EventId: EventId,\n    }));\n    //event transfers...\n    var transfersTemp = this.state.transfers.map((a) => a.data);\n    var newTransferObj = transfersTemp.map((obj) => ({\n      ...obj,\n      EventId: EventId,\n    }));\n\n    //event agendas...\n    var eventAgendasTemp = this.state.agendas;\n    var newAgendasObj = eventAgendasTemp.map((obj) => ({\n      ...obj,\n      EventId: EventId,\n    }));\n\n    return {\n      Representatives: newRepresentativeArr,\n      Attendies: newAttendiesObj,\n      Transfers: newTransferObj,\n      Agendas: newAgendasObj,\n    };\n  };\n  submitEvent = (e) => {\n    e.preventDefault();\n    var eventFormData = new FormData();\n    eventFormData.append(\"name\", this.state.eventName);\n    eventFormData.append(\"liveFrom\", this.state.eventFrom);\n    eventFormData.append(\"liveTo\", this.state.eventFrom);\n    eventFormData.append(\"CustomerId\", this.state.eventBy);\n    eventFormData.append(\"PlackCardImage\", this.state.eventPlackCardImage);\n    eventFormData.append(\"desc\", this.state.welcomeNote);\n    eventFormData.append(\n      \"PlackCardImageName\",\n      this.state.eventPlackCardImageName\n    );\n    eventFormData.append(\"EventImage\", this.state.eventImage);\n    eventFormData.append(\"EventImageName\", this.state.eventImageName);\n    eventFormData.append(\"CityId\", this.state.cityId);\n    eventFormData.append(\"CountryId\", this.state.countryId);\n    eventFormData.append(\"url\", this.state.venueUrl);\n    eventFormData.append(\"venueName\", this.state.venueName);\n\n    if (this.state.eventId) {\n      //this is an update condition...\n      var EventId = this.state.eventId;\n      Axios.put(\"/events/update/\" + this.state.eventId, eventFormData).then(\n        (u) => {\n          var data = this.modifyDataWithEventId(EventId);\n          Axios.post(\"/events/upload-updated\", {\n            representatives: data.Representatives,\n            transfersData: data.Transfers,\n            attendeesData: data.Attendies,\n            agendasData: data.Agendas,\n            EventId: EventId,\n          }).then((a) => {\n            console.log(a);\n          });\n        }\n      );\n    } else {\n      Axios.post(\"/events/create\", eventFormData).then((u) => {\n        if (u.data.status == \"success\") {\n          var EventId = u.data.EventId;\n          var data = this.modifyDataWithEventId(EventId);\n          Axios.post(\"/events/upload\", {\n            representatives: data.Representatives,\n            transfersData: data.Transfers,\n            attendeesData: data.Attendies,\n            agendasData: data.Agendas,\n            EventId: EventId,\n          }).then((u) => {});\n        }\n      });\n    }\n  };\n  setCountryId = (id) => {\n    this.setState({\n      countryId: id,\n    });\n  };\n  setCityId = (id) => {\n    this.setState({\n      cityId: id,\n    });\n  };\n  setCustomerId = (id) => {\n    this.setState({\n      eventBy: id,\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Manage Events</CardTitle>\n                  <h5 className=\"card-category\">Create Event</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Event Name</label>\n                          <Input\n                            placeholder=\"Event Name\"\n                            type=\"text\"\n                            value={this.state.eventName}\n                            onChange={(e) => {\n                              this.setState({\n                                eventName: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <label>Event By</label>\n                          <Autocomplete\n                            suggestions={this.state.sugggestionCustomers}\n                            hint={\"Customer Name\"}\n                            marginTop={\"0px\"}\n                            id={\"txtEventBy\"}\n                            paddingBottom={\"0px\"}\n                            ref={this.customerRef}\n                            setId={this.setCustomerId}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Event From</label>\n                          <Input\n                            type=\"date\"\n                            value={this.state.eventFrom}\n                            onChange={(e) => {\n                              this.setState({\n                                eventFrom: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Event To</label>\n                          <Input\n                            type=\"date\"\n                            value={this.state.eventTo}\n                            onChange={(e) => {\n                              this.setState({\n                                eventTo: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Venue Name</label>\n                          <Input\n                            placeholder=\"Full Name\"\n                            type=\"text\"\n                            value={this.state.venueName}\n                            onChange={(e) => {\n                              this.setState({\n                                venueName: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Venue Location Url</label>\n                          <Input\n                            placeholder=\"Url\"\n                            type=\"text\"\n                            value={this.state.venueUrl}\n                            onChange={(e) => {\n                              this.setState({\n                                venueUrl: e.target.value,\n                              });\n                            }}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <label>Pick Plack Card Image</label>\n                        <div className=\"custom-file mb-2\">\n                          <Input\n                            type=\"file\"\n                            className=\"custom-file-input\"\n                            onChange={(e) => {\n                              this.setState({\n                                eventPlackCardImage: e.target.files[0],\n                                eventPlackCardImageName: e.target.files[0].name,\n                              });\n                            }}\n                          />\n                          <label\n                            className=\"custom-file-label\"\n                            htmlFor=\"customFileThumbanail\"\n                          >\n                            {this.state.eventPlackCardImageName}\n                          </label>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <label>Pick Event Image</label>\n                        <div className=\"custom-file mb-2\">\n                          <Input\n                            type=\"file\"\n                            className=\"custom-file-input\"\n                            onChange={(e) => {\n                              this.setState({\n                                eventImage: e.target.files[0],\n                                eventImageName: e.target.files[0].name,\n                              });\n                            }}\n                          />\n                          <label\n                            className=\"custom-file-label\"\n                            htmlFor=\"customFileThumbanail\"\n                          >\n                            {this.state.eventImageName}\n                          </label>\n                        </div>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>Country</label>\n                          <Autocomplete\n                            suggestions={this.state.suggestionCountries}\n                            hint={\"Country Name\"}\n                            marginTop={\"0px\"}\n                            id={\"txtCountrySuggest\"}\n                            ref={this.countryRef}\n                            setId={this.setCountryId}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"3\">\n                        <FormGroup>\n                          <label>City</label>\n                          <Autocomplete\n                            suggestions={this.state.suggestionCities}\n                            hint={\"City Name\"}\n                            marginTop={\"0px\"}\n                            id={\"txtCitySuggest\"}\n                            ref={this.cityRef}\n                            setId={this.setCityId}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md=\"12\">\n                        <label>Welcome Note</label>\n                        <Row>\n                          <Col md=\"12\">\n                            <Button\n                              color={this.state.isEditorOpen ? \"danger\" : \"\"}\n                              onClick={() => {\n                                if (this.state.isEditorOpen) {\n                                  this.setState({\n                                    welcomeNote: this.EditorRef.current.returnContent(),\n                                  });\n                                }\n                                this.setState({\n                                  isEditorOpen: !this.state.isEditorOpen,\n                                });\n                              }}\n                            >\n                              {this.state.isEditorOpen\n                                ? \"Save & Close Editor\"\n                                : \"Open Editor\"}\n                            </Button>\n                          </Col>\n                        </Row>\n                        {this.state.isEditorOpen ? (\n                          <Editor ref={this.EditorRef} />\n                        ) : null}\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Representatives</CardTitle>\n                  <h5 className=\"card-category\">Add Representatives</h5>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col md=\"6\">\n                      {this.state.createNewRepresentative ? (\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label>New Representative</label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Name\"\n                              value={this.state.representativeName}\n                              onChange={(e) => {\n                                this.setState({\n                                  representativeName: e.target.value,\n                                });\n                              }}\n                            ></Input>\n                          </FormGroup>\n                          <FormGroup>\n                            <label>Phone Number</label>\n                            <div\n                              style={{\n                                display: \"flex\",\n                              }}\n                            >\n                              <Input\n                                name=\"search\"\n                                className=\"form-control\"\n                                style={{\n                                  flex: \"2\",\n                                  marginTop: \"4px\",\n                                }}\n                                value={this.state.representativePhone}\n                                onChange={(e) => {\n                                  this.setState({\n                                    representativePhone: e.target.value,\n                                  });\n                                }}\n                                placeholder=\"Phone Number\"\n                              />\n                              <button\n                                disabled={!this.state.createdRepresentative}\n                                style={{\n                                  marginLeft: \"15px\",\n                                }}\n                                class=\"btn btn-success\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    createdRepresentative: !this.state\n                                      .createdRepresentative,\n                                  });\n                                  Axios.post(\n                                    \"/representative/employee/create\",\n                                    {\n                                      name: this.state.representativeName,\n                                      phone: this.state.representativePhone,\n                                    }\n                                  ).then((u) => {\n                                    if (u.data.message == \"success\") {\n                                      var temp = this.state.Representatives;\n                                      temp.push({\n                                        Name: this.state.representativeName,\n                                        Phone: this.state.representativePhone,\n                                        id: u.data.data,\n                                      });\n                                      this.setState({\n                                        createdRepresentative: !this.state\n                                          .createdRepresentative,\n                                        representativeName: \"\",\n                                        representativePhone: \"\",\n                                        createNewRepresentative: !this.state\n                                          .createNewRepresentative,\n                                        Representatives: temp,\n                                      });\n                                    }\n                                  });\n                                }}\n                              >\n                                {this.state.createdRepresentative\n                                  ? \"Save\"\n                                  : \"Saving...\"}\n                              </button>\n                              <button\n                                disabled={!this.state.createdRepresentative}\n                                style={{\n                                  marginLeft: \"15px\",\n                                  padding: \"11px\",\n                                }}\n                                class=\"btn btn-danger\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    representativeName: \"\",\n                                    representativePhone: \"\",\n                                    createNewRepresentative: !this.state\n                                      .createNewRepresentative,\n                                  });\n                                }}\n                              >\n                                <i className=\"tim-icons icon-simple-remove\" />\n                              </button>\n                            </div>\n                          </FormGroup>\n                        </Col>\n                      ) : (\n                        <Col md=\"12\" className=\"category-col\">\n                          <label>Representative Name</label>\n                          <form\n                            class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\n                            style={s26}\n                          >\n                            <div\n                              className=\"form-group d-inline mb-2\"\n                              style={{ flex: \"1\" }}\n                            >\n                              <AutocompleteSimple\n                                suggestions={this.state.Representatives}\n                                id={\"txtRepresentatveSuggest\"}\n                                categoryChipHit={this.categoryChipHit}\n                                ChipHitAfterRemoving={\n                                  this.representativesNameChipHitAfterRemoving\n                                }\n                                ref={this.RepresentativeNameAutocompleteRef}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <button\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    createNewRepresentative: !this.state\n                                      .createNewRepresentative,\n                                  });\n                                }}\n                                className=\"btn btn-success\"\n                                style={s50}\n                              >\n                                + New\n                              </button>\n                            </div>\n                          </form>\n                          <CategoryChips\n                            ref={this.representativeNameRef}\n                            removeId={this.categoryIdfromHiddenField}\n                          />\n                        </Col>\n                      )}\n                      {this.state.createNewRepresentativeCategory ? (\n                        <Col md=\"12\">\n                          <FormGroup>\n                            <label>New Representative Category</label>\n                            <div\n                              style={{\n                                display: \"flex\",\n                              }}\n                            >\n                              <Input\n                                name=\"search\"\n                                className=\"form-control\"\n                                value={this.state.representativeCategoryName}\n                                onChange={(e) => {\n                                  this.setState({\n                                    representativeCategoryName: e.target.value,\n                                  });\n                                }}\n                                style={{\n                                  flex: \"2\",\n                                  marginTop: \"4px\",\n                                }}\n                                placeholder=\"Category Name\"\n                              />\n                              <button\n                                style={{\n                                  marginLeft: \"15px\",\n                                }}\n                                disabled={\n                                  !this.state.createdNewRepresentativeCategory\n                                }\n                                class=\"btn btn-success\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    createdNewRepresentativeCategory: !this\n                                      .state.createdNewRepresentativeCategory,\n                                  });\n                                  Axios.post(\n                                    \"/representative/category/create\",\n                                    {\n                                      name: this.state\n                                        .representativeCategoryName,\n                                    }\n                                  ).then((u) => {\n                                    if (u.data.message == \"success\") {\n                                      var temp = this.state\n                                        .RepresentativesCategory;\n                                      temp.push({\n                                        Name: this.state\n                                          .representativeCategoryName,\n                                        id: u.data.data,\n                                      });\n                                      this.setState({\n                                        RepresentativesCategory: temp,\n                                        createdNewRepresentativeCategory: !this\n                                          .state\n                                          .createdNewRepresentativeCategory,\n                                        representativeCategoryName: \"\",\n                                        createNewRepresentativeCategory: !this\n                                          .state\n                                          .createNewRepresentativeCategory,\n                                      });\n                                    }\n                                  });\n                                }}\n                              >\n                                {this.state.createdNewRepresentativeCategory\n                                  ? \"Save\"\n                                  : \"Saving...\"}\n                              </button>\n                              <button\n                                style={{\n                                  marginLeft: \"15px\",\n                                  padding: \"11px\",\n                                }}\n                                class=\"btn btn-danger\"\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    representativeName: \"\",\n                                    representativePhone: \"\",\n                                    createNewRepresentativeCategory: !this.state\n                                      .createNewRepresentativeCategory,\n                                  });\n                                }}\n                              >\n                                <i className=\"tim-icons icon-simple-remove\" />\n                              </button>\n                            </div>\n                          </FormGroup>\n                        </Col>\n                      ) : (\n                        <Col md=\"12\" className=\"category-col\">\n                          <label>Representative Category</label>\n                          <form\n                            class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\n                            style={s26}\n                          >\n                            <div\n                              className=\"form-group d-inline mb-2\"\n                              style={{ flex: \"1\" }}\n                            >\n                              <AutocompleteSimple\n                                suggestions={this.state.RepresentativesCategory}\n                                id={\"txtRepresentatveCategorySuggest\"}\n                                categoryChipHit={this.categoryNameChipHit}\n                                ChipHitAfterRemoving={\n                                  this.categoryChipHitAfterRemoving\n                                }\n                                ref={this.RepresentativeCategoryAutocompleteRef}\n                              />\n                            </div>\n                            <div class=\"form-group\">\n                              <button\n                                class=\"btn btn-success\"\n                                type=\"button\"\n                                style={s50}\n                                onClick={(e) => {\n                                  e.preventDefault();\n                                  this.setState({\n                                    createNewRepresentativeCategory: !this.state\n                                      .createNewRepresentativeCategory,\n                                  });\n                                }}\n                              >\n                                + New\n                              </button>\n                            </div>\n                          </form>\n                          <CategoryChips\n                            ref={this.representativeCategoryRef}\n                            removeId={\n                              this.categoryIdfromHiddenField_CategoryName\n                            }\n                          />\n                        </Col>\n                      )}\n                    </Col>\n                    <Col md=\"6\">\n                      <Table className=\"tablesorter\" responsive>\n                        <thead className=\"text-primary\">\n                          <tr>\n                            <th>Representative Name</th>\n                            <th>Category</th>\n                            <th className=\"text-center\">Actions</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.representativeArr.map((a) => (\n                            <tr>\n                              <td>{a.Name}</td>\n                              <td>{a.Category}</td>\n                              <td>\n                                <Row>\n                                  <Col\n                                    md=\"6\"\n                                    className=\"d-flex justify-content-center\"\n                                    style={{\n                                      padding: \"0px\",\n                                    }}\n                                    onClick={() => {\n                                      var temp = this.state.representativeArr;\n                                      const index = temp.indexOf(a);\n                                      if (index > -1) {\n                                        temp.splice(index, 1);\n                                      }\n                                      this.setState({\n                                        representativeArr: temp,\n                                      });\n                                    }}\n                                  >\n                                    <i\n                                      className=\"tim-icons icon-trash-simple hoverable-danger\"\n                                      style={{ cursor: \"pointer\" }}\n                                    />\n                                  </Col>\n                                  <Col\n                                    style={{\n                                      padding: \"0px\",\n                                    }}\n                                    md=\"6\"\n                                    className=\"d-flex justify-content-center\"\n                                    onClick={() => {\n                                      this.setState({\n                                        updatingRepresentatives: true,\n                                        updatingRepresentativesNameId:\n                                          a.EmployeeId,\n                                        updatingRepresentativesCategoryId:\n                                          a.RepresentativeCategoryId,\n                                      });\n                                      this.RepresentativeNameAutocompleteRef.current.addItemToUpdate(\n                                        { id: a.EmployeeId, name: a.Name }\n                                      );\n                                      this.RepresentativeCategoryAutocompleteRef.current.addItemToUpdate(\n                                        {\n                                          id: a.RepresentativeCategoryId,\n                                          name: a.Category,\n                                        }\n                                      );\n                                    }}\n                                  >\n                                    <i\n                                      className=\"tim-icons icon-pencil hoverable\"\n                                      style={{ cursor: \"pointer\" }}\n                                    />\n                                  </Col>\n                                </Row>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </Table>\n                    </Col>\n                  </Row>\n                  <Row className=\"justify-content-between\">\n                    <Col md=\"6\" xs=\"12\" className=\"d-flex justify-content-end\">\n                      <Button\n                        color=\"success\"\n                        className=\"md-auto\"\n                        disabled={!this.state.updatingRepresentatives}\n                        onClick={() => {\n                          this.representativeNameRef.current.removeAllChips();\n                          this.representativeCategoryRef.current.removeAllChips();\n\n                          //remove all ids form hidden inputs...\n                          this.RepresentativeNameAutocompleteRef.current.removeAllIds();\n                          this.RepresentativeCategoryAutocompleteRef.current.removeAllIds();\n                          this.setState({\n                            updatingRepresentatives: false,\n                            updatingRepresentativesNameId: null,\n                            updatingRepresentativesCategoryId: null,\n                          });\n                        }}\n                      >\n                        Cancel Update\n                      </Button>\n                      <Button\n                        color=\"success\"\n                        onClick={() => {\n                          if (\n                            document.getElementById(\"txtRepresentatveSuggest\")\n                              .value != \"\" &&\n                            document.getElementById(\n                              \"txtRepresentatveCategorySuggest\"\n                            ).value != \"\"\n                          ) {\n                            var representativesIds = document\n                              .getElementById(\"txtRepresentatveSuggest\")\n                              .value.split(\",\");\n                            var representativesCatIds = document\n                              .getElementById(\"txtRepresentatveCategorySuggest\")\n                              .value.split(\",\");\n                            var representativesArray = [];\n                            representativesIds.forEach((element) => {\n                              var representativeName = this.state.Representatives.filter(\n                                (a) => a.id == element\n                              )[0][\"Name\"];\n                              representativesCatIds.forEach((elementCatId) => {\n                                var obj = {};\n                                obj[\"Name\"] = representativeName;\n                                obj[\"EmployeeId\"] = element;\n                                obj[\"RepresentativeCategoryId\"] = elementCatId;\n                                obj[\n                                  \"Category\"\n                                ] = this.state.RepresentativesCategory.filter(\n                                  (a) => a.id == elementCatId\n                                )[0][\"Name\"];\n                                representativesArray.push(obj);\n                              });\n                            });\n                            var tempArr = this.state.representativeArr;\n                            var newArr = tempArr.concat(representativesArray);\n                            var unique = [];\n                            var distinct = [];\n                            for (let i = 0; i < newArr.length; i++) {\n                              if (\n                                !unique[\n                                  newArr[i].EmployeeId +\n                                    \",\" +\n                                    newArr[i].RepresentativeCategoryId\n                                ]\n                              ) {\n                                distinct.push({\n                                  Name: newArr[i].Name,\n                                  Category: newArr[i].Category,\n                                  EmployeeId: newArr[i].EmployeeId,\n                                  RepresentativeCategoryId:\n                                    newArr[i].RepresentativeCategoryId,\n                                  id: newArr[i].id,\n                                });\n                                unique[\n                                  newArr[i].EmployeeId +\n                                    \",\" +\n                                    newArr[i].RepresentativeCategoryId\n                                ] = 1;\n                              }\n                            }\n                            console.log(distinct);\n                            var index = distinct.indexOf(\n                              distinct.filter(\n                                (a) =>\n                                  a.EmployeeId ==\n                                    this.state.updatingRepresentativesNameId &&\n                                  a.RepresentativeCategoryId ==\n                                    this.state.updatingRepresentativesCategoryId\n                              )[0]\n                            );\n                            if (index > -1) {\n                              distinct.splice(index, 1);\n                            }\n                            this.setState({\n                              representativeArr: distinct,\n                              updatingRepresentativesNameId: null,\n                              updatingRepresentativesCategoryId: null,\n                              updatingRepresentatives: !this.state\n                                .updatingRepresentatives,\n                            });\n                            this.representativeNameRef.current.removeAllChips();\n                            this.representativeCategoryRef.current.removeAllChips();\n\n                            //remove all ids form hidden inputs...\n                            this.RepresentativeNameAutocompleteRef.current.removeAllIds();\n                            this.RepresentativeCategoryAutocompleteRef.current.removeAllIds();\n                          }\n                        }}\n                      >\n                        Add\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Attendies</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col md=\"6\">\n                        <Row>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label>Attendee Full Name</label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                id=\"AttendiesName\"\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label>Attendee Phone</label>\n                              <Input\n                                type=\"number\"\n                                placeholder=\"Phone\"\n                                id=\"AttendiesPhone\"\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label>Attendee Email</label>\n                              <Input\n                                type=\"email\"\n                                placeholder=\"Email\"\n                                id=\"AttendiesEmail\"\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label>Attendee Location</label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Location\"\n                                id=\"AttendiesLocation\"\n                              />\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <Col md=\"12\" className=\"category-col\">\n                              <label>Arriving Ticket</label>\n                              <FormGroup>\n                                <Row>\n                                  <Col md=\"6\">\n                                    <Input\n                                      type=\"text\"\n                                      placeholder=\"Ticket From\"\n                                      id=\"Arr_ticketFrom\"\n                                    ></Input>\n                                  </Col>\n                                  <Col md=\"6\">\n                                    <Input\n                                      type=\"text\"\n                                      placeholder=\"Ticket To\"\n                                      id=\"Arr_ticketTo\"\n                                    ></Input>\n                                  </Col>\n                                </Row>\n                              </FormGroup>\n                              <FormGroup>\n                                <Row>\n                                  <Col md=\"12\">\n                                    <div className=\"custom-file mb-2\">\n                                      <Input\n                                        type=\"file\"\n                                        className=\"custom-file-input\"\n                                        id=\"ticket-file-from\"\n                                        onChange={(e) => {\n                                          this.setState({\n                                            aTicketFileName:\n                                              e.target.files[0].name,\n                                          });\n                                        }}\n                                      />\n                                      <label\n                                        className=\"custom-file-label\"\n                                        htmlFor=\"customFileThumbanail\"\n                                      >\n                                        {this.state.aTicketFileName}\n                                      </label>\n                                    </div>\n                                  </Col>\n                                </Row>\n                              </FormGroup>\n                            </Col>\n                          </Col>\n                          <Col md=\"12\">\n                            <FormGroup>\n                              <label class=\"checkbox\">\n                                <input\n                                  type=\"checkbox\"\n                                  id=\"SameTicketChkId\"\n                                  onChange={() => {\n                                    this.setState({\n                                      TicketsSame: !this.state.TicketsSame,\n                                    });\n                                  }}\n                                  style={{\n                                    marginRight: \"8px\",\n                                  }}\n                                />\n                                Same Ticket as Arriving Ticket\n                              </label>\n                            </FormGroup>\n                          </Col>\n                          <Col md=\"12\">\n                            <fieldset disabled={this.state.TicketsSame}>\n                              <Col md=\"12\" className=\"category-col\">\n                                <label>\n                                  Departing Ticket\n                                  {this.state.TicketsSame ? \" - Disabled\" : \"\"}\n                                </label>\n                                <FormGroup>\n                                  <Row>\n                                    <Col md=\"6\">\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Ticket From\"\n                                        id=\"Dep_ticketFrom\"\n                                      ></Input>\n                                    </Col>\n                                    <Col md=\"6\">\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Ticket To\"\n                                        id=\"Dep_ticketTo\"\n                                      ></Input>\n                                    </Col>\n                                  </Row>\n                                </FormGroup>\n                                <FormGroup>\n                                  <Row>\n                                    <Col md=\"12\">\n                                      <div className=\"custom-file mb-2\">\n                                        <Input\n                                          type=\"file\"\n                                          className=\"custom-file-input\"\n                                          id=\"ticket-file-to\"\n                                          onChange={(e) => {\n                                            this.setState({\n                                              dTicketFileName:\n                                                e.target.files[0].name,\n                                            });\n                                          }}\n                                        />\n                                        <label\n                                          className=\"custom-file-label\"\n                                          htmlFor=\"customFileThumbanail\"\n                                        >\n                                          {this.state.dTicketFileName}\n                                        </label>\n                                      </div>\n                                    </Col>\n                                  </Row>\n                                </FormGroup>\n                              </Col>\n                            </fieldset>\n                          </Col>\n                          <Col md=\"12\" className=\"d-flex justify-content-end\">\n                            <Button\n                              color=\"success\"\n                              className=\"md-auto\"\n                              disabled={!this.state.updatingAttendee}\n                              onClick={() => {\n                                document.getElementById(\"AttendiesName\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"AttendiesPhone\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"AttendiesEmail\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"AttendiesLocation\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"Arr_ticketFrom\"\n                                ).value = \"\";\n                                document.getElementById(\"Arr_ticketTo\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"Dep_ticketFrom\"\n                                ).value = \"\";\n                                document.getElementById(\"Dep_ticketTo\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"SameTicketChkId\"\n                                ).checked = false;\n                                this.setState({\n                                  TicketsSame: false,\n                                  aTicketFileName: \"Choose Ticket File\",\n                                  dTicketFileName: \"Choose Ticket File\",\n                                  updatingAttendee: false,\n                                  updatingAttendeePhone: null,\n                                });\n                              }}\n                            >\n                              Cancel Update\n                            </Button>\n                            <Button\n                              color=\"success\"\n                              className=\"md-auto\"\n                              onClick={() => {\n                                this.setState({\n                                  addedAttendie: !this.state.addedAttendie,\n                                });\n                                var newAttendieObj = {};\n                                newAttendieObj[\n                                  \"name\"\n                                ] = document.getElementById(\n                                  \"AttendiesName\"\n                                ).value;\n\n                                newAttendieObj[\n                                  \"phone\"\n                                ] = document.getElementById(\n                                  \"AttendiesPhone\"\n                                ).value;\n\n                                newAttendieObj[\n                                  \"email\"\n                                ] = document.getElementById(\n                                  \"AttendiesEmail\"\n                                ).value;\n\n                                newAttendieObj[\n                                  \"location\"\n                                ] = document.getElementById(\n                                  \"AttendiesLocation\"\n                                ).value;\n                                newAttendieObj[\n                                  \"aTicketFrom\"\n                                ] = document.getElementById(\n                                  \"Arr_ticketFrom\"\n                                ).value;\n\n                                newAttendieObj[\n                                  \"aTicketTo\"\n                                ] = document.getElementById(\n                                  \"Arr_ticketTo\"\n                                ).value;\n                                newAttendieObj[\"isSameAsArriving\"] = this.state\n                                  .TicketsSame\n                                  ? true\n                                  : false;\n                                newAttendieObj[\n                                  \"aticket\"\n                                ] = this.state.aTicketFileName;\n                                newAttendieObj[\n                                  \"dticket\"\n                                ] = this.state.dTicketFileName;\n                                //converting files to base64...\n                                let fileToLoad = document.getElementById(\n                                  \"ticket-file-from\"\n                                ).files[0];\n                                let fileone = null;\n                                let fileReader = new FileReader();\n                                fileReader.onload = function (fileLoadedEvent) {\n                                  fileone = fileLoadedEvent.target.result;\n                                  newAttendieObj[\"ticketFileFrom\"] = fileone;\n                                };\n                                if (fileToLoad) {\n                                  fileReader.readAsDataURL(fileToLoad);\n                                }\n\n                                //second file...\n                                let filetwo = null;\n                                if (!this.state.TicketsSame) {\n                                  newAttendieObj[\n                                    \"dTicketFrom\"\n                                  ] = document.getElementById(\n                                    \"Dep_ticketFrom\"\n                                  ).value;\n                                  newAttendieObj[\n                                    \"dTicketTo\"\n                                  ] = document.getElementById(\n                                    \"Dep_ticketTo\"\n                                  ).value;\n                                  let fileToLoadSecond = document.getElementById(\n                                    \"ticket-file-to\"\n                                  ).files[0];\n                                  let fileReadertwo = new FileReader();\n                                  fileReadertwo.onload = function (\n                                    fileLoadedEvent1\n                                  ) {\n                                    filetwo = fileLoadedEvent1.target.result;\n                                    newAttendieObj[\"ticketFileTo\"] = filetwo;\n                                  };\n                                  fileReadertwo.readAsDataURL(fileToLoadSecond);\n                                }\n                                var Ea = this.state.EventAttendies;\n                                if (this.state.updatingAttendeePhone) {\n                                  var index = Ea.indexOf(\n                                    Ea.filter(\n                                      (a) =>\n                                        a.phone ==\n                                        this.state.updatingAttendeePhone\n                                    )[0]\n                                  );\n                                  if (index > -1) {\n                                    Ea.splice(index, 1);\n                                  }\n                                  newAttendieObj.id = this.state.updatingAttendeeId;\n                                  Ea.push(newAttendieObj);\n                                  console.log(Ea);\n                                } else {\n                                  Ea.push(newAttendieObj);\n                                }\n                                //reseting the state...\n                                this.setState({\n                                  EventAttendies: Ea,\n                                  addedAttendie: !this.state.addedAttendie,\n                                  TicketsSame: false,\n                                  aTicketFileName: \"Choose Ticket File\",\n                                  dTicketFileName: \"Choose Ticket File\",\n                                  updatingAttendee: false,\n                                  updatingAttendeePhone: null,\n                                });\n                                document.getElementById(\"AttendiesName\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"AttendiesPhone\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"AttendiesEmail\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"AttendiesLocation\"\n                                ).value = \"\";\n                                document.getElementById(\n                                  \"Arr_ticketFrom\"\n                                ).value = \"\";\n                                document.getElementById(\"Arr_ticketTo\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"Dep_ticketFrom\"\n                                ).value = \"\";\n                                document.getElementById(\"Dep_ticketTo\").value =\n                                  \"\";\n                                document.getElementById(\n                                  \"SameTicketChkId\"\n                                ).checked = false;\n                              }}\n                            >\n                              Add\n                            </Button>\n                          </Col>\n                        </Row>\n                      </Col>\n                      <Col md=\"6\">\n                        <Table className=\"tablesorter\" responsive>\n                          <thead className=\"text-primary\">\n                            <tr>\n                              <th>Attendee Name</th>\n                              <th>Attendee Phone</th>\n                              <th className=\"text-center\">Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.state.EventAttendies.map((element) => (\n                              <tr\n                                style={{\n                                  backgroundColor: this.haveAnythingEmpty(\n                                    element\n                                  )\n                                    ? \"#0000005e\"\n                                    : \"transparent\",\n                                }}\n                              >\n                                <td>{element[\"name\"]}</td>\n                                <td>{element[\"phone\"]}</td>\n                                <td>\n                                  <Row>\n                                    <Col\n                                      md=\"6\"\n                                      style={{\n                                        padding: \"0px\",\n                                      }}\n                                      className=\"d-flex justify-content-center\"\n                                      onClick={() => {\n                                        var temp = this.state.EventAttendies;\n                                        var index = temp.indexOf(element);\n                                        if (index > -1) {\n                                          temp.splice(index, 1);\n                                        }\n                                        this.setState({\n                                          EventAttendies: temp,\n                                        });\n                                      }}\n                                    >\n                                      <i className=\"tim-icons icon-trash-simple hoverable-danger\" />\n                                    </Col>\n                                    <Col\n                                      md=\"6\"\n                                      style={{\n                                        padding: \"0px\",\n                                      }}\n                                      className=\"d-flex justify-content-center\"\n                                      onClick={() => {\n                                        this.setState({\n                                          updatingAttendeePhone: element.phone,\n                                        });\n                                        document.getElementById(\n                                          \"AttendiesName\"\n                                        ).value = element[\"name\"];\n                                        document.getElementById(\n                                          \"AttendiesPhone\"\n                                        ).value = element[\"phone\"];\n                                        document.getElementById(\n                                          \"AttendiesEmail\"\n                                        ).value = element[\"email\"];\n                                        document.getElementById(\n                                          \"AttendiesLocation\"\n                                        ).value = element[\"location\"];\n                                        document.getElementById(\n                                          \"Arr_ticketFrom\"\n                                        ).value = element[\"aTicketFrom\"];\n                                        document.getElementById(\n                                          \"Arr_ticketTo\"\n                                        ).value = element[\"aTicketTo\"];\n                                        document.getElementById(\n                                          \"Dep_ticketFrom\"\n                                        ).value = element[\"dTicketFrom\"] || \"\";\n                                        document.getElementById(\n                                          \"Dep_ticketTo\"\n                                        ).value = element[\"dTicketTo\"] || \"\";\n                                        document.getElementById(\n                                          \"SameTicketChkId\"\n                                        ).checked =\n                                          element[\"dTicketFrom\"] == null;\n                                        this.setState({\n                                          updatingAttendee: true,\n                                          TicketsSame:\n                                            element[\"dTicketFrom\"] == null,\n                                          aTicketFileName: element[\n                                            \"aticket\"\n                                          ].split(\"/\")[\n                                            element[\"aticket\"].split(\"/\")\n                                              .length - 1\n                                          ],\n                                          dTicketFileName:\n                                            element[\"dticket\"]?.split(\"/\")[\n                                              element[\"dticket\"].split(\"/\")\n                                                .length - 1\n                                            ] || \"Choose Ticket File\",\n                                        });\n                                      }}\n                                    >\n                                      <i className=\"tim-icons icon-pencil hoverable\" />\n                                    </Col>\n                                  </Row>\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </Table>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Transfers</CardTitle>\n                  <Row className=\"justify-content-between\">\n                    <Col md=\"4\" xs=\"4\" className=\"d-flex align-items-center\">\n                      <h5 className=\"card-category\">Create Transfers</h5>\n                    </Col>\n                    <Col md=\"4\" xs=\"8\" className=\"d-flex justify-content-end\">\n                      <Button\n                        color=\"success\"\n                        onClick={() => this.createNewTransfer()}\n                        disabled={!this.state.rIsFilled}\n                      >\n                        Create New\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      {this.state.transfers.map((element) =>\n                        element.isFilled ? null : element.component\n                      )}\n                    </Row>\n                    <Row className=\"justify-content-between\">\n                      {this.state.rIsFilled ? null : (\n                        <Col\n                          md=\"12\"\n                          xs=\"12\"\n                          className=\"d-flex justify-content-end\"\n                        >\n                          <Button\n                            color=\"warning\"\n                            onClick={() => {\n                              var temp = this.state.transfers;\n                              temp.forEach((element) => {\n                                var index;\n                                if (!element.isFilled) {\n                                  if (!element.data.id) {\n                                    index = temp.indexOf(element);\n                                  }\n                                  element.isFilled = !element.isFilled;\n                                }\n                                if (index > -1) {\n                                  temp.splice(index, 1);\n                                }\n                                this.setState({\n                                  transfers: temp,\n                                  rIsFilled: !this.state.rIsFilled,\n                                });\n                              });\n                            }}\n                          >\n                            Cancel\n                          </Button>\n                          <Button\n                            color=\"success\"\n                            onClick={() => {\n                              var tempTransfers = this.state.transfers;\n                              tempTransfers.forEach((element) => {\n                                if (!element.isFilled) {\n                                  element.data = element.ref.current.returnState();\n                                  element.isFilled = !element.isFilled;\n                                }\n                              });\n                              this.setState({\n                                transfers: tempTransfers,\n                                rIsFilled: !this.state.rIsFilled,\n                              });\n                            }}\n                          >\n                            Save\n                          </Button>\n                        </Col>\n                      )}\n                    </Row>\n                    <Row>\n                      <Col md=\"12\">\n                        <Table className=\"tablesorter\" responsive>\n                          <thead className=\"text-primary\">\n                            <tr>\n                              <th>Transfer Name</th>\n                              <th>Date</th>\n                              <th>Origin</th>\n                              <th>Destination</th>\n                              <th className=\"text-center\">Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.state.transfers.map((element) =>\n                              element.isFilled ? (\n                                <tr>\n                                  <td>{element.data.name}</td>\n                                  <td>{element.data.transferDate}</td>\n                                  <td>{element.data.origin}</td>\n                                  <td>{element.data.destination}</td>\n                                  <td>\n                                    <Row>\n                                      <Col\n                                        md=\"6\"\n                                        className=\"d-flex justify-content-center\"\n                                        style={{\n                                          padding: \"0px\",\n                                        }}\n                                        onClick={() => {\n                                          var temp = this.state.transfers;\n                                          var index = temp.indexOf(element);\n                                          if (index > -1) {\n                                            temp.splice(index, 1);\n                                          }\n                                          this.setState({\n                                            transfers: temp,\n                                          });\n                                        }}\n                                      >\n                                        <i className=\"tim-icons icon-trash-simple hoverable-danger\" />\n                                      </Col>\n                                      <Col\n                                        md=\"6\"\n                                        style={{\n                                          padding: \"0px\",\n                                        }}\n                                        className=\"d-flex justify-content-center\"\n                                        onClick={() => {\n                                          var temp = this.state.transfers;\n                                          var index = temp.indexOf(element);\n                                          temp[index].isFilled = false;\n                                          // temp[index].ref.current.setData(element.data)\n                                          this.setState(\n                                            {\n                                              rIsFilled: !this.state.rIsFilled,\n                                              transfers: temp,\n                                            },\n                                            () => {\n                                              temp[index].ref.current.setData(\n                                                element.data\n                                              );\n                                            }\n                                          );\n                                        }}\n                                      >\n                                        <i className=\"tim-icons icon-pencil hoverable\" />\n                                      </Col>\n                                    </Row>\n                                  </td>\n                                </tr>\n                              ) : null\n                            )}\n                          </tbody>\n                        </Table>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Event Agendas</CardTitle>\n                  <h5 className=\"card-category\">Create Agendas</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col md=\"6\">\n                        <Agendas ref={this.agendaRef} />\n                        <Col md=\"12\" className=\"d-flex justify-content-end\">\n                          <Button\n                            color=\"success\"\n                            className=\"md-auto\"\n                            disabled={!this.state.updatingAgenda}\n                            onClick={() => {\n                              this.agendaRef.current.resetState();\n                              this.setState({\n                                updatingAgenda: false,\n                                updatingAgendaObject: null,\n                              });\n                            }}\n                          >\n                            Cancel Update\n                          </Button>\n                          <Button\n                            color=\"success\"\n                            className=\"md-auto\"\n                            onClick={() => {\n                              var data = this.state.agendas;\n                              if (this.state.updatingAgendaObject) {\n                                var index = data.indexOf(\n                                  this.state.updatingAgendaObject\n                                );\n                                console.log(index);\n                                if (index > -1) {\n                                  data.splice(index, 1);\n                                }\n                              }\n                              data.push(this.agendaRef.current.returnState());\n                              this.setState(\n                                {\n                                  agendas: data,\n                                  updatingAgendaObject: null,\n                                },\n                                () => {\n                                  this.agendaRef.current.resetState();\n                                }\n                              );\n                            }}\n                          >\n                            Add\n                          </Button>\n                        </Col>\n                      </Col>\n                      <Col md=\"6\">\n                        <Table className=\"tablesorter\" responsive>\n                          <thead className=\"text-primary\">\n                            <tr>\n                              <th>Agenda Name</th>\n                              <th>Start</th>\n                              <th>End</th>\n                              <th>Venue</th>\n                              <th className=\"text-center\">Actions</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.state.agendas.map((element) => (\n                              <tr>\n                                <td>{element.name}</td>\n                                <td>\n                                  {new Date(element.startTime).toDateString() +\n                                    \" \" +\n                                    new Date(element.startTime).toLocaleString(\n                                      \"en-US\",\n                                      {\n                                        hour: \"numeric\",\n                                        minute: \"numeric\",\n                                        hour12: true,\n                                      }\n                                    )}\n                                </td>\n                                <td>\n                                  {new Date(element.endTime).toDateString() +\n                                    \" \" +\n                                    new Date(element.endTime).toLocaleString(\n                                      \"en-US\",\n                                      {\n                                        hour: \"numeric\",\n                                        minute: \"numeric\",\n                                        hour12: true,\n                                      }\n                                    ) || \"Onwards\"}\n                                </td>\n                                <td>{element.venue}</td>\n                                <td>\n                                  <Row>\n                                    <Col\n                                      md=\"6\"\n                                      className=\"d-flex justify-content-center\"\n                                      style={{\n                                        padding: \"0px\",\n                                      }}\n                                      onClick={() => {\n                                        var temp = this.state.agendas;\n                                        var index = temp.indexOf(element);\n                                        if (index > -1) {\n                                          temp.splice(index, 1);\n                                        }\n                                        this.setState({\n                                          agendas: temp,\n                                        });\n                                      }}\n                                    >\n                                      <i className=\"tim-icons icon-trash-simple hoverable-danger\" />\n                                    </Col>\n                                    <Col\n                                      md=\"6\"\n                                      style={{\n                                        padding: \"0px\",\n                                      }}\n                                      onClick={() => {\n                                        this.agendaRef.current.setData(element);\n                                        this.setState({\n                                          updatingAgenda: true,\n                                          updatingAgendaObject: element,\n                                        });\n                                      }}\n                                      className=\"d-flex justify-content-center\"\n                                    >\n                                      <i className=\"tim-icons icon-pencil hoverable\" />\n                                    </Col>\n                                  </Row>\n                                </td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </Table>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\" className=\"d-flex justify-content-end\">\n              <Button\n                color=\"success\"\n                style={{\n                  padding: \"18px\",\n                  paddingRight: \"38px\",\n                  paddingLeft: \"38px\",\n                }}\n                onClick={(e) => this.submitEvent(e)}\n              >\n                Save Event\n              </Button>\n            </Col>\n          </Row>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ManageEvents;\n","import React, { useState, useMemo, useCallback, useEffect, forwardRef, useImperativeHandle } from \"react\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport Axios from \"./axios\";\nimport swal from \"sweetalert\";\nimport {\n  Button\n} from \"reactstrap\";\n\nconst MyComponentHook = forwardRef((props,ref) => {\n  const [overlayLoader, setOverlayLoader] = useState(false);\n  const [progress, setProgress] = useState(true);\n  const [data, setData] = useState([]);\n  createTheme(\"solarized\", {\n    text: {\n      primary: \"#ffffff\",\n      secondary: \"#9A9A9A\",\n    },\n    background: {\n      default: \"#27293d\",\n    },\n    action: {\n      button: \"rgba(0,0,0,.54)\",\n      hover: \"rgba(0,0,0,.08)\",\n      disabled: \"rgba(0,0,0,.12)\",\n    },\n  });\n  const getData = () => {\n    Axios.get(\"/location/get-all\").then((u) => {\n      setData(\n        u.data.map((a) => {\n          var obj = {};\n          obj[\"id\"] = a.id\n          obj[\"Name\"] = a.name;\n          obj[\"City\"] = a.Cities.name;\n          obj[\"Country\"] = a.Cities.Countries.name;\n          obj[\"Image\"] = a.image;\n          obj[\"desc\"] = a.desc;\n          return obj;\n        })\n      );\n      setProgress(false);\n    });\n  }\n  \n  useEffect(() => {\n    getData()\n  }, []);\n\n  const handleDeleteAction = (value) => {\n    console.log(value);\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this content!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        var arr = data.filter((item) => item.id !== value.id);\n        console.log(arr)\n        setData(arr);\n        await Axios.delete(\"/location/delete/\" + value.id);\n        swal(\"Poof! Your content has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your content is safe!\");\n      }\n    });\n  };\n  const handleEditAction = (value) => {\n    props.setDataInParent(value)\n  };\n  useImperativeHandle(ref, () => ({\n    resetTable: () => {\n      getData();\n    },\n  }));\n\n  const updateState = useCallback((state) => console.log(state));\n  const columns = useMemo(() => [\n    {\n      name: \"Name\",\n      selector: \"Name\",\n    },\n    {\n      name: \"City\",\n      selector: \"City\",\n    },\n    {\n      cell: (row) => <img src={row.Image} alt=\"location image\" />,\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Image\",\n      selector: \"Image\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleEditAction(row)}\n        >\n          <i className=\"tim-icons icon-pencil\" />\n        </Button>\n      ),\n      button: true,\n      name: \"Edit\",\n      selector: \"edit\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-danger\"\n          onClick={() => handleDeleteAction(row)}\n        >\n          <i className=\"tim-icons icon-trash-simple\" />\n        </Button>\n      ),\n      button: true,\n      name: \"Delete\",\n      selector: \"delete\",\n    },\n  ]);\n\n  return (\n    <>\n      <div\n        className=\"loading-overlay\"\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\n      >\n        <div class=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n        Loading...\n      </div>\n      <DataTable\n        data={data}\n        columns={columns}\n        theme=\"solarized\"\n        onSelectedRowsChange={updateState}\n        pagination={true}\n        progressPending={progress}\n        progressComponent={<h2>Hang on...😊</h2>}\n      />\n    </>\n  );\n});\n\nexport default MyComponentHook;\n","import React, { Component, createRef } from \"react\";\nimport Autocomplete from \"../components/sub/autosuggest-norm\";\nimport swal from \"sweetalert\";\nimport {\n  Button,\n  Input,\n  FormGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Label,\n} from \"reactstrap\";\nimport Axios from \"../components/sub/axios\";\nimport MyComponentHook from \"components/sub/cities&countriesTable\";\n\nconst s26 = {\n  width: \"100%\",\n};\n\nconst s50 = {\n  marginLeft: \"15px\",\n  marginTop: \"14px\",\n};\n\nexport default class CitiesCountries extends Component {\n  constructor(props) {\n    super(props);\n    this.cityModalRef = createRef();\n    this.tableRef = createRef();\n    this._countryRef = createRef();\n    this._cityRef = createRef();\n    this.state = {\n      createdLocation: true,\n      locationName: \"\",\n      locationImageFile: null,\n      locationImageName: \"Choose Image File\",\n      locationDesc: \"\",\n      isAnUpdate: false,\n\n      createdCity: true,\n      createdCountry: true,\n      modalCountryCreated: true,\n      countryName: \"\",\n\n      cityFile: null,\n      cityFileName: \"Choose New File\",\n      cityName: \"\",\n      suggestionCountries: [],\n      suggestionCity: [],\n      locationId: null,\n    };\n  }\n  componentWillMount = () => {\n    Promise.all([\n      Axios.get(\"/location/country/get-all\"),\n      Axios.get(\"/location/city/get-all\"),\n    ]).then(([u, a]) => {\n      this.setState({\n        suggestionCountries: u.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n        suggestionCity: a.data.map((a) => {\n          var b = {};\n          b[\"Name\"] = a.name;\n          b[\"id\"] = a.id;\n          return b;\n        }),\n      });\n    });\n  };\n  setDataToFields = (data) => {\n    this.setState({\n      locationName: data.Name,\n      locationDesc: data.desc,\n      isAnUpdate: !this.state.isAnUpdate,\n      locationId: data.id,\n    });\n    this._cityRef.current.setData(data.City);\n    this._countryRef.current.setData(data.Country);\n  };\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.createdCountry ? null : (\n          <div className=\"Modal-Root\">\n            <div\n              className=\"Country-Modal\"\n              style={{\n                backgroundColor: \"#27293d\",\n              }}\n            >\n              <Col md=\"12\">\n                <Row>\n                  <Col md=\"12\">\n                    <h3\n                      style={{\n                        paddingTop: \"18px\",\n                      }}\n                    >\n                      Create New Country\n                    </h3>\n                  </Col>\n                  <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\n                    <Label>Country Name</Label>\n                    <Input\n                      type=\"text\"\n                      value={this.state.countryName}\n                      onChange={(e) => {\n                        this.setState({\n                          countryName: e.target.value,\n                        });\n                      }}\n                    />\n                  </Col>\n                </Row>\n                <Row className=\"justify-content-between\">\n                  <Col\n                    md=\"12\"\n                    xs=\"12\"\n                    className=\"d-flex justify-content-end\"\n                    style={{ padding: \"18px\" }}\n                  >\n                    <Button\n                      color=\"warning\"\n                      onClick={() => {\n                        this.setState({\n                          createdCountry: !this.state.createdCountry,\n                          countryName: \"\",\n                        });\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      color=\"success\"\n                      disabled={!this.state.modalCountryCreated}\n                      onClick={(e) => {\n                        this.setState({\n                          modalCountryCreated: !this.state.modalCountryCreated,\n                        });\n                        var formdata = new FormData();\n                        formdata.append(\"name\", this.state.countryName);\n                        Axios.post(\"/location/country/create\", formdata).then(\n                          (u) => {\n                            if (u.data.status == \"success\") {\n                              var temp = this.state.suggestionCountries;\n                              temp.push({\n                                id: u.data.data,\n                                Name: this.state.countryName,\n                              });\n                              this.setState({\n                                suggestionCountries: temp,\n                                createdCountry: !this.state.createdCountry,\n                                countryName: \"\",\n                                modalCountryCreated: !this.state\n                                  .modalCountryCreated,\n                              });\n                            }\n                          }\n                        );\n                      }}\n                    >\n                      {this.state.modalCountryCreated ? \"Save\" : \"Saving...\"}\n                    </Button>\n                  </Col>\n                </Row>\n              </Col>\n            </div>\n          </div>\n        )}\n        {this.state.createdCity ? null : (\n          <div className=\"Modal-Root\">\n            <div\n              className=\"Country-Modal\"\n              style={{\n                backgroundColor: \"#27293d\",\n                padding: \"19px\",\n              }}\n            >\n              <Row>\n                <Col md=\"12\">\n                  <h3\n                    style={{\n                      paddingTop: \"18px\",\n                    }}\n                  >\n                    Create New City\n                  </h3>\n                </Col>\n                <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\n                  <div className=\"form-group d-inline mb-2\">\n                    <Autocomplete\n                      suggestions={this.state.suggestionCountries}\n                      id={\"category-suggest\"}\n                      hint={\"Country Name\"}\n                      className=\"suggestions-in-container\"\n                      ref={this.cityModalRef}\n                    />\n                  </div>\n                </Col>\n                <Col md=\"12\" style={{ paddingBottom: \"16px\" }}>\n                  <Label>City Name</Label>\n                  <Input\n                    type=\"text\"\n                    value={this.state.cityName}\n                    placeholder=\"City Name\"\n                    onChange={(e) => {\n                      this.setState({\n                        cityName: e.target.value,\n                      });\n                    }}\n                  />\n                </Col>\n                <Col md=\"12\">\n                  <Label>City Image</Label>\n                  <div className=\"custom-file mb-2\">\n                    <Input\n                      type=\"file\"\n                      className=\"custom-file-input\"\n                      id=\"ticket-file\"\n                      onChange={(e) => {\n                        this.setState({\n                          cityFile: e.target.files[0],\n                          cityFileName: e.target.files[0].name,\n                        });\n                      }}\n                    />\n                    <label\n                      className=\"custom-file-label\"\n                      htmlFor=\"customFileThumbanail\"\n                    >\n                      {this.state.cityFileName}\n                    </label>\n                  </div>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-between\">\n                <Col\n                  md=\"12\"\n                  xs=\"12\"\n                  className=\"d-flex justify-content-end\"\n                  style={{ padding: \"18px\" }}\n                >\n                  <Button\n                    color=\"warning\"\n                    onClick={() => {\n                      this.setState({\n                        createdCity: !this.state.createdCity,\n                        modalCountryCreated: !this.state.modalCountryCreated,\n                        cityFile: null,\n                        cityFileName: \"Choose New File\",\n                        cityName: \"\",\n                      });\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    color=\"success\"\n                    disabled={!this.state.modalCountryCreated}\n                    onClick={(e) => {\n                      this.setState({\n                        modalCountryCreated: !this.state.modalCountryCreated,\n                      });\n                      var formdata = new FormData();\n                      formdata.append(\n                        \"countryId\",\n                        this.cityModalRef.current.returnId()\n                      );\n                      formdata.append(\"name\", this.state.cityName);\n                      formdata.append(\"image\", this.state.cityFile);\n                      Axios.post(\"/location/city/create\", formdata).then(\n                        (u) => {\n                          if (u.data.status == \"success\") {\n                            var temp = this.state.suggestionCity;\n                            console.log(u)\n                            temp.push({\n                              id: u.data.data,\n                              Name: this.state.cityName,\n                            });\n                            console.log(temp)\n                            this.setState({\n                              createdCity: !this.state.createdCity,\n                              suggestionCountries: temp,\n                              cityFile: null,\n                              cityFileName: \"Choose New File\",\n                              cityName: \"\",\n                              modalCountryCreated: !this.state\n                                .modalCountryCreated,\n                            });\n                          }\n                        }\n                      );\n                    }}\n                  >\n                    {this.state.modalCountryCreated ? \"Save\" : \"Saving...\"}\n                  </Button>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        )}\n        <div className=\"content\">\n          <Row>\n            <Card>\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <CardTitle tag=\"h2\">Manage City Attractions</CardTitle>\n                    <h5 className=\"card-category\">create city attractions</h5>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col md=\"6\">\n                    <div\n                      class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\n                      style={s26}\n                    >\n                      <div\n                        className=\"form-group d-inline mb-2\"\n                        style={{ flex: \"1\" }}\n                      >\n                        <Autocomplete\n                          suggestions={this.state.suggestionCountries}\n                          id={\"category-suggest\"}\n                          categoryChipHit={this.categoryChipHit}\n                          ref={this._countryRef}\n                          hint={\"Country Name\"}\n                        />\n                      </div>\n                      <div class=\"form-group\">\n                        <button\n                          onClick={(e) => {\n                            e.preventDefault();\n                            this.setState({\n                              createdCountry: !this.state.createdCountry,\n                            });\n                          }}\n                          className=\"btn btn-success\"\n                          style={s50}\n                        >\n                          New\n                        </button>\n                      </div>\n                    </div>\n                  </Col>\n                  <Col md=\"6\">\n                    <div\n                      class=\"form-inline d-flex flex-row flex-fill justify-content-start\"\n                      style={s26}\n                    >\n                      <div\n                        className=\"form-group d-inline mb-2\"\n                        style={{ flex: \"1\" }}\n                      >\n                        <Autocomplete\n                          suggestions={this.state.suggestionCity}\n                          id={\"category-suggest\"}\n                          ref={this._cityRef}\n                          hint={\"City Name\"}\n                        />\n                      </div>\n                      <div class=\"form-group\">\n                        <button\n                          onClick={(e) => {\n                            e.preventDefault();\n                            this.setState({\n                              createdCity: !this.state.createdCity,\n                            });\n                          }}\n                          className=\"btn btn-success\"\n                          style={s50}\n                        >\n                          New\n                        </button>\n                      </div>\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <label>Place of Interest</label>\n                      <Input\n                        placeholder=\"Place Name\"\n                        type=\"text\"\n                        value={this.state.locationName}\n                        onChange={(e) => {\n                          this.setState({\n                            locationName: e.target.value,\n                          });\n                        }}\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <label>Place Image</label>\n                      <div className=\"custom-file mb-2\">\n                        <Input\n                          type=\"file\"\n                          className=\"custom-file-input\"\n                          onChange={(e) => {\n                            this.setState({\n                              locationImageFile: e.target.files[0],\n                              locationImageName: e.target.files[0].name,\n                            });\n                          }}\n                        />\n                        <label\n                          className=\"custom-file-label\"\n                          htmlFor=\"customFileThumbanail\"\n                        >\n                          {this.state.locationImageName}\n                        </label>\n                      </div>\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"12\">\n                    <FormGroup>\n                      <label>Place Discription</label>\n                      <Input\n                        placeholder=\"Description\"\n                        type=\"text\"\n                        value={this.state.locationDesc}\n                        onChange={(e) => {\n                          this.setState({\n                            locationDesc: e.target.value,\n                          });\n                        }}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"justify-content-between\">\n                  <Col\n                    md=\"12\"\n                    xs=\"12\"\n                    className=\"d-flex justify-content-end\"\n                    style={{ padding: \"18px\" }}\n                  >\n                    <Button\n                      color=\"success\"\n                      disabled={!this.state.createdLocation}\n                      onClick={() => {\n                        this.setState({\n                          createdLocation: !this.state.createdLocation,\n                        });\n                        var formdata = new FormData();\n                        formdata.append(\"name\", this.state.locationName);\n                        formdata.append(\"desc\", this.state.locationDesc);\n                        formdata.append(\n                          \"CityId\",\n                          this._cityRef.current.returnId()\n                        );\n                        formdata.append(\n                          \"CountryId\",\n                          this._countryRef.current.returnId()\n                        );\n                        formdata.append(\"image\", this.state.locationImageFile);\n                        for (var value of formdata.values()) {\n                          if (!value) {\n                            swal(\n                              \"Can't Update\",\n                              \"All Fields Are Mandatory!\",\n                              \"error\"\n                            );\n                            this.setState({\n                              createdLocation: true,\n                            });\n                            return;\n                          }\n                        }\n                        if (!this.state.isAnUpdate) {\n                          Axios.post(\"/location/create\", formdata).then((u) => {\n                            this.setState({\n                              createdLocation: !this.state.createdLocation,\n                              locationName: \"\",\n                              locationImageFile: null,\n                              locationImageName: \"Choose Image File\",\n                              locationDesc: \"\",\n                            });\n                            this.tableRef.current.resetTable();\n                          });\n                        } else {\n                          Axios.put(\n                            \"/location/update/\" + this.state.locationId,\n                            formdata\n                          ).then((u) => {\n                            this.setState({\n                              createdLocation: !this.state.createdLocation,\n                              locationName: \"\",\n                              locationImageFile: null,\n                              locationImageName: \"Choose Image File\",\n                              locationDesc: \"\",\n                            });\n                            this.tableRef.current.resetTable();\n                          });\n                        }\n                      }}\n                    >\n                      {this.state.createdLocation ? \"Save\" : \"Saving...\"}\n                    </Button>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Row>\n          <Row>\n            <Card>\n              <CardHeader>\n                <Row>\n                  <Col className=\"text-left\" sm=\"6\">\n                    <CardTitle tag=\"h2\">Added City Attractions</CardTitle>\n                  </Col>\n                </Row>\n              </CardHeader>\n              <CardBody>\n                <MyComponentHook\n                  ref={this.tableRef}\n                  setDataInParent={this.setDataToFields}\n                />\n              </CardBody>\n            </Card>\n          </Row>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, {\n  useState,\n  useMemo,\n  useCallback,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport Axios from \"./axios\";\nimport swal from \"sweetalert\";\nimport { Button } from \"reactstrap\";\nconst MyComponentHook = forwardRef((props, ref) => {\n  const [overlayLoader, setOverlayLoader] = useState(false);\n  const [progress, setProgress] = useState(true);\n  const [data, setData] = useState([]);\n  useImperativeHandle(ref, () => ({\n    resetTable: () => {\n      getData();\n    },\n  }));\n\n  createTheme(\"solarized\", {\n    text: {\n      primary: \"#ffffff\",\n      secondary: \"#9A9A9A\",\n    },\n    background: {\n      default: \"#27293d\",\n    },\n    action: {\n      button: \"rgba(0,0,0,.54)\",\n      hover: \"rgba(0,0,0,.08)\",\n      disabled: \"rgba(0,0,0,.12)\",\n    },\n  });\n  const getData = () => {\n    Axios.get(\"/customer/get-all\").then((u) => {\n      console.log(u.data);\n      setData(u.data);\n      setProgress(false);\n    });\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const handleDeleteAction = (value) => {\n    console.log(value);\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        var arr = data.filter((item) => item.id !== value.id);\n        console.log(arr);\n        setData(arr);\n        await Axios.delete(\"/customer/delete/\" + value.id);\n        swal(\"Poof! Your content has been deleted!\", {\n          icon: \"success\",\n        });\n      } else {\n        swal(\"Your Data is Safe!\");\n      }\n    });\n  };\n  const handleEditAction = (value) => {\n    props.setDataInParent(value);\n  };\n  const updateState = useCallback((state) => console.log(state));\n  const columns = useMemo(() => [\n    {\n      name: \"Name\",\n      selector: \"name\",\n    },\n    {\n      name: \"Organisation\",\n      selector: \"organisation\",\n    },\n    {\n      name: \"Phone\",\n      selector: \"phone\",\n    },\n    {\n      name: \"Email\",\n      selector: \"email\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-primary\"\n          onClick={() => handleEditAction(row)}\n        >\n          <i className=\"tim-icons icon-pencil\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      allowOverflow: true,\n      button: true,\n      name: \"Edit\",\n      selector: \"edit\",\n    },\n    {\n      cell: (row) => (\n        <Button\n          style={{ padding: \"15px\" }}\n          className=\"btn btn-danger\"\n          onClick={() => handleDeleteAction(row)}\n        >\n          <i className=\"tim-icons icon-trash-simple\" />\n        </Button>\n      ),\n      ignoreRowClick: true,\n      button: true,\n      name: \"Delete\",\n      selector: \"delete\",\n    },\n  ]);\n\n  return (\n    <>\n      <div\n        className=\"loading-overlay\"\n        style={{ display: overlayLoader ? \"flex\" : \"none\" }}\n      >\n        <div class=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n        Loading...\n      </div>\n      <DataTable\n        data={data}\n        columns={columns}\n        theme=\"solarized\"\n        onSelectedRowsChange={updateState}\n        pagination={true}\n        progressPending={progress}\n        progressComponent={<h2>Hang on...😊</h2>}\n      />\n    </>\n  );\n});\n\nexport default MyComponentHook;\n","import React, { Component, createRef } from \"react\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Input,\n} from \"reactstrap\";\nimport CustomerTable from \"../components/sub/customersTable\";\nimport Axios from \"../components/sub/axios\";\nexport default class customers extends Component {\n  constructor(props) {\n    super(props);\n    this.CustomerTableRef = createRef();\n    this.state = {\n      customerName: \"\",\n      customerPhone: \"\",\n      customerOrg: \"\",\n      customerEmail: \"\",\n      createdCutomer: true,\n      isAnUpdate: false,\n      customerId:null,\n    };\n  }\n  setDataToFields = (data) => {\n    this.setState({\n      customerName: data.name,\n      customerPhone: data.phone,\n      customerOrg: data.organisation,\n      customerEmail: data.email,\n      isAnUpdate: !this.state.isAnUpdate,\n      customerId: data.id,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Manage Customers</CardTitle>\n                  <h5 className=\"card-category\">Add new Customers</h5>\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col md=\"6\">\n                      <label>Customer Name</label>\n                      <Input\n                        placeholder=\"Full Name\"\n                        value={this.state.customerName}\n                        onChange={(e) => {\n                          this.setState({\n                            customerName: e.target.value,\n                          });\n                        }}\n                      />\n                    </Col>\n                    <Col md=\"6\">\n                      <label>Organisation Name</label>\n                      <Input\n                        placeholder=\"Name\"\n                        value={this.state.customerOrg}\n                        onChange={(e) => {\n                          this.setState({\n                            customerOrg: e.target.value,\n                          });\n                        }}\n                      />\n                    </Col>\n                    <Col md=\"6\">\n                      <label>Customer Phone</label>\n                      <Input\n                        placeholder=\"Phone\"\n                        type=\"number\"\n                        value={this.state.customerPhone}\n                        onChange={(e) => {\n                          this.setState({\n                            customerPhone: e.target.value,\n                          });\n                        }}\n                      />\n                    </Col>\n                    <Col md=\"6\">\n                      <label>Customer Email</label>\n                      <Input\n                        placeholder=\"Email\"\n                        type=\"email\"\n                        value={this.state.customerEmail}\n                        onChange={(e) => {\n                          this.setState({\n                            customerEmail: e.target.value,\n                          });\n                        }}\n                      />\n                    </Col>\n                  </Row>\n                  <Row className=\"justify-content-between\">\n                    <Col\n                      md=\"12\"\n                      xs=\"12\"\n                      className=\"d-flex justify-content-end\"\n                      style={{ padding: \"18px\" }}\n                    >\n                      <Button\n                        disabled={!this.state.createdCutomer}\n                        color=\"success\"\n                        onClick={() => {\n                          this.setState({\n                            createdCutomer: !this.state.createdCutomer,\n                          });\n                          if(!this.state.isAnUpdate){\n                            Axios.post(\"customer/create\", {\n                              name: this.state.customerName,\n                              organisation: this.state.customerOrg,\n                              email: this.state.customerEmail,\n                              phone: this.state.customerPhone,\n                            }).then((u) => {\n                              this.setState({\n                                createdCutomer: !this.state.createdCutomer,\n                                customerName: \"\",\n                                customerPhone: \"\",\n                                customerOrg: \"\",\n                                customerEmail: \"\",\n                              });\n                              this.CustomerTableRef.current.resetTable();\n                            });\n                          } else {\n                            Axios.put(\"customer/update/\"+this.state.customerId, {\n                              name: this.state.customerName,\n                              organisation: this.state.customerOrg,\n                              email: this.state.customerEmail,\n                              phone: this.state.customerPhone,\n                            }).then((u) => {\n                              this.setState({\n                                createdCutomer: !this.state.createdCutomer,\n                                customerName: \"\",\n                                customerPhone: \"\",\n                                customerOrg: \"\",\n                                customerEmail: \"\",\n                                isAnUpdate:!this.state.isAnUpdate\n                              });\n                              this.CustomerTableRef.current.resetTable();\n                            });\n                          }\n                        }}\n                      >\n                        {this.state.createdCutomer ? \"Save\" : \"Saving...\"}\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Added Customers</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <CustomerTable\n                    ref={this.CustomerTableRef}\n                    setDataInParent={this.setDataToFields}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n","import Dashboard from \"views/Dashboard.js\";\nimport UserProfile from \"views/UserProfile.js\";\nimport ManageEvents from \"views/ManageEvents.js\";\nimport CitiesCountries from \"views/cities&countries.js\";\nimport Customers from \"views/customers.js\";\nimport AboutCompany from \"views/AboutCompany\";\nimport EventGallery from \"views/EventGallery\";\nimport Queries from \"views/queries\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/manage-events\",\n    name: \"Manage Events\",\n    rtlName: \"إخطارات\",\n    icon: \"tim-icons icon-calendar-60\",\n    component: ManageEvents,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/Cities-Countries\",\n    name: \"Cities & Countries\",\n    rtlName: \"إخطارات\",\n    icon: \"tim-icons icon-book-bookmark\",\n    component: CitiesCountries,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/About-Company\",\n    name: \"About Company\",\n    rtlName: \"إخطارات\",\n    component: AboutCompany,\n    layout: \"/admin\",\n    icon: \"tim-icons icon-single-copy-04\",\n  },\n  {\n    icon: \"tim-icons icon-camera-18\",\n    path: \"/event-gallery\",\n    name: \"Event Gallery\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    component: EventGallery,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Manage Users\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-badge\",\n    component: UserProfile,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/customers\",\n    name: \"Customers\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-single-02\",\n    component: Customers,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/queries\",\n    name: \"Queries\",\n    rtlName: \"ملف تعريفي للمستخدم\",\n    icon: \"tim-icons icon-alert-circle-exc\",\n    component: Queries,\n    layout: \"/admin\",\n  },\n];\nexport default routes;\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Input,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport axios from \"../components/sub/axios\";\nimport JoditEditor from \"jodit-react\";\nimport Gallery from \"react-grid-gallery\";\nimport swal from \"sweetalert\";\n\nexport default class AboutCompany extends Component {\n  state = {\n    description: \"Loading Description...\",\n    isEditorOpen: false,\n    updatingDesc: false,\n    savingImage: false,\n    editorText: \"\",\n    images: null,\n    pickedImageName: \"Choose Image\",\n    pickedImage: null,\n    isDeleting: false,\n    selectedImages: [],\n    selectedImageNames: [],\n  };\n  componentWillMount = () => {\n    this.getCompanyDescription();\n    this.getAllImages();\n  };\n  getCompanyDescription = () => {\n    axios.get(\"about-company/get-description\").then((u) => {\n      this.setState({\n        description: u.data.description == null ? \"\" : u.data.description,\n      });\n    });\n  };\n  updateCompanyDescription = (text) => {\n    this.setState({\n      updatingDesc: !this.state.updatingDesc,\n    });\n    axios\n      .post(\"about-company/update-description\", {\n        description: text,\n      })\n      .then((u) => {\n        this.setState({\n          updatingDesc: !this.state.updatingDesc,\n          isEditorOpen: !this.state.isEditorOpen,\n          description: text,\n        });\n      });\n  };\n  saveImage = () => {\n    this.setState({\n      savingImage: !this.state.savingImage,\n    });\n    var formData = new FormData();\n    var tempImage = this.state.images;\n    formData.append(\"image\", this.state.pickedImage);\n    axios.post(\"about-company/upload-picture\", formData).then((u) => {\n      tempImage.push({\n        src: u.data.url,\n        thumbnail: u.data.url,\n        thumbnailWidth: 320,\n        thumbnailHeight: 320,\n        isSelected: false,\n      });\n      this.setState({\n        savingImage: !this.state.savingImage,\n        pickedImageName: \"Choose Image\",\n        pickedImage: null,\n        images: tempImage,\n      });\n    });\n  };\n  deleteImages = () => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        this.setState({\n          isDeleting: !this.state.isDeleting,\n        });\n        var tempImages = this.state.images;\n        var tempSelectedImages = this.state.selectedImages;\n        axios\n          .post(\"about-company/delete-pictures-bulk\", {\n            deleteIds: tempSelectedImages,\n            images: this.state.selectedImageNames,\n          })\n          .then((u) => {\n            this.state.selectedImages.forEach((imageId) => {\n              var imageObject = tempImages.filter(\n                (image) => image.id == imageId\n              )[0];\n              tempSelectedImages.splice(tempSelectedImages.indexOf(imageId), 1);\n              tempImages.splice(tempImages.indexOf(imageObject), 1);\n            });\n            this.setState({\n              images: tempImages,\n              selectedImages: tempSelectedImages,\n              isDeleting: !this.state.isDeleting,\n            });\n\n            swal(\"Poof! Your content has been deleted!\", {\n              icon: \"success\",\n            });\n          });\n      } else {\n        swal(\"Your Images are Safe!\");\n      }\n    });\n  };\n  onSelectImage = (index, image) => {\n    var tempImages = this.state.images;\n    tempImages[index].isSelected = !tempImages[index].isSelected;\n\n    var selectedImagesTemp = this.state.selectedImages;\n    var selectedImagesNameTemp = this.state.selectedImageNames;\n    if (selectedImagesTemp.some((id) => id == tempImages[index].id)) {\n      selectedImagesTemp.splice(\n        selectedImagesTemp.indexOf(tempImages[index].id),\n        1\n      );\n      selectedImagesNameTemp.splice(\n        selectedImagesNameTemp.indexOf(tempImages[index].url),\n        1\n      );\n    } else {\n      selectedImagesTemp.push(tempImages[index].id);\n      selectedImagesNameTemp.push(tempImages[index].url);\n      console.log(selectedImagesNameTemp);\n      console.log(selectedImagesTemp);\n    }\n    this.setState({\n      images: tempImages,\n      selectedImages: selectedImagesTemp,\n      selectedImageNames: selectedImagesNameTemp,\n    });\n  };\n  getAllImages = () => {\n    axios.get(\"about-company/get-all-images\").then((u) => {\n      var Images = u.data.map((image) => {\n        return {\n          ...image,\n          src: image.url,\n          thumbnail: image.url,\n          thumbnailWidth: 320,\n          thumbnailHeight: 320,\n          isSelected: false,\n        };\n      });\n      this.setState({\n        images: Images,\n      });\n    });\n  };\n  render() {\n    var galleryImages = this.state.images == null ? [] : [...this.state.images];\n    const config = {\n      readonly: false,\n    };\n    var editedText = \"\";\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col xs=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Company Description</CardTitle>\n                  <h5 className=\"card-category\">\n                    Details & Other Description about the Company\n                  </h5>\n                </CardHeader>\n                <CardBody>\n                  {this.state.isEditorOpen ? null : this.state.description ===\n                    \"\" ? (\n                    <div\n                      style={{\n                        backgroundColor: \"#ffffffc4\",\n                        borderRadius: \"8px\",\n                        color: \"#ffffffad\",\n                        padding: \"24px\",\n                      }}\n                    >\n                      No Description Available Yet! Open Editor and Create a\n                      Description Now\n                    </div>\n                  ) : (\n                    <div\n                      style={{\n                        backgroundColor: \"#ffffffc4\",\n                        borderRadius: \"8px\",\n                        color: \"black\",\n                        padding: \"24px\",\n                      }}\n                      dangerouslySetInnerHTML={{\n                        __html: this.state.description,\n                      }}\n                    ></div>\n                  )}\n                  {this.state.isEditorOpen ? (\n                    <div\n                      style={{\n                        marginTop: \"18px\",\n                      }}\n                    >\n                      <JoditEditor\n                        value={this.state.editorText}\n                        config={config}\n                        tabIndex={1}\n                        onChange={(newContent) => {\n                          editedText = newContent;\n                        }}\n                      />\n                      <Button\n                        color=\"success\"\n                        disabled={this.state.updatingDesc}\n                        onClick={() => {\n                          if (this.state.description === editedText) {\n                            this.setState({\n                              isEditorOpen: !this.state.isEditorOpen,\n                            });\n                          } else {\n                            this.updateCompanyDescription(editedText);\n                          }\n                        }}\n                      >\n                        {this.state.updatingDesc\n                          ? \"Saving Please Wait\"\n                          : \"Save & Close Editor\"}\n                      </Button>\n                      <Button\n                        color=\"danger\"\n                        onClick={() => {\n                          this.setState({\n                            isEditorOpen: !this.state.isEditorOpen,\n                          });\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  ) : (\n                    <div\n                      style={{\n                        marginTop: \"18px\",\n                      }}\n                    >\n                      <Button\n                        style={{\n                          marginTop: \"8px\",\n                        }}\n                        onClick={() => {\n                          this.setState({\n                            isEditorOpen: !this.state.isEditorOpen,\n                            editorText: this.state.description,\n                          });\n                        }}\n                      >\n                        Open Editor\n                      </Button>\n                    </div>\n                  )}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h2\">Images</CardTitle>\n                  <h5 className=\"card-category\">\n                    Sample Event Images and Others\n                  </h5>\n                </CardHeader>\n                <CardBody>\n                  <label>Pick Plack Card Image</label>\n                  <Row style={{ marginTop: \"12px\", marginBottom: \"18px\" }}>\n                    <Col xs=\"10\">\n                      <div className=\"custom-file mb-2\">\n                        <Input\n                          type=\"file\"\n                          className=\"custom-file-input\"\n                          onChange={(e) => {\n                            this.setState({\n                              pickedImage: e.target.files[0],\n                              pickedImageName: e.target.files[0].name,\n                            });\n                          }}\n                        />\n                        <label\n                          className=\"custom-file-label\"\n                          htmlFor=\"customFileThumbanail\"\n                        >\n                          {this.state.pickedImageName}\n                        </label>\n                      </div>\n                    </Col>\n                    <Col xs=\"2\">\n                      <Button\n                        color=\"success\"\n                        style={{ width: \"100%\" }}\n                        disabled={this.state.savingImage}\n                        onClick={() => this.saveImage()}\n                      >\n                        {this.state.savingImage\n                          ? \"Saving Please Wait\"\n                          : \"Save Image\"}\n                      </Button>\n                    </Col>\n                  </Row>\n                  <Col xs=\"12\">\n                    {this.state.selectedImages.length > 0 ? (\n                      <Row>\n                        <Col xs=\"12\">\n                          <Button\n                            color=\"danger\"\n                            onClick={this.deleteImages}\n                            disabled={this.state.isDeleting}\n                          >\n                            {this.state.isDeleting ? \"Deleting...\" : \"Delete\"}\n                          </Button>\n                        </Col>\n                        <Col\n                          xs=\"12\"\n                          style={{\n                            color: \"white\",\n                            padding: \"12px\",\n                          }}\n                        >\n                          {this.state.selectedImages.length +\n                            \" Image(s) have been selected\"}\n                        </Col>\n                      </Row>\n                    ) : null}\n                  </Col>\n                  {this.state.images === null ? (\n                    <div\n                      style={{\n                        backgroundColor: \"#0000002e\",\n                        borderRadius: \"8px\",\n                        color: \"#ffffffad\",\n                        padding: \"24px\",\n                      }}\n                    >\n                      Loading Images...\n                    </div>\n                  ) : this.state.images.length === 0 ? (\n                    <div\n                      style={{\n                        backgroundColor: \"#0000002e\",\n                        borderRadius: \"8px\",\n                        color: \"#ffffffad\",\n                        padding: \"24px\",\n                      }}\n                    >\n                      No Images've been Added Yet\n                    </div>\n                  ) : (\n                    <Gallery\n                      images={galleryImages}\n                      onSelectImage={this.onSelectImage}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Input,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n  Table,\n} from \"reactstrap\";\nimport Gallery from \"react-grid-gallery\";\nimport axios from \"../components/sub/axios\";\nimport swal from \"sweetalert\";\n\nexport default class EventGallery extends Component {\n  state = {\n    images: [],\n    isSearching: false,\n    eventId: \"\",\n    selectedImages: [],\n    selectedImageNames: [],\n    isDeleting: false,\n    isMoving: false,\n  };\n  componentWillMount = () => {\n    if (this.props.location.state !== null) {\n      this.setState({\n        isSearching: !this.state.isSearching,\n        eventId: this.props.location.state.eventId,\n      });\n      axios\n        .get(`/events/get-gallery/${this.props.location.state.eventId}`)\n        .then((u) => {\n          this.setState({\n            isSearching: !this.state.isSearching,\n            images: u.data.map((image) => {\n              return {\n                ...image,\n                src: image.url,\n                thumbnail: image.url,\n                thumbnailWidth: 320,\n                thumbnailHeight: 320,\n                isSelected: false,\n              };\n            }),\n          });\n        });\n    }\n  };\n  searchImages = () => {\n    this.setState({\n      isSearching: !this.state.isSearching,\n    });\n    axios.get(`/events/get-gallery/${this.state.eventId}`).then((u) => {\n      this.setState({\n        isSearching: !this.state.isSearching,\n        images: u.data.map((image) => {\n          return {\n            ...image,\n            src: image.url,\n            thumbnail: image.url,\n            thumbnailWidth: 320,\n            thumbnailHeight: 320,\n            isSelected: false,\n          };\n        }),\n      });\n    });\n  };\n  onSelectImage = (index, image) => {\n    var tempImages = this.state.images;\n    tempImages[index].isSelected = !tempImages[index].isSelected;\n\n    var selectedImagesTemp = this.state.selectedImages;\n    var selectedImagesNameTemp = this.state.selectedImageNames;\n    if (selectedImagesTemp.some((id) => id == tempImages[index].id)) {\n      selectedImagesTemp.splice(\n        selectedImagesTemp.indexOf(tempImages[index].id),\n        1\n      );\n      selectedImagesNameTemp.splice(\n        selectedImagesNameTemp.indexOf(tempImages[index].url),\n        1\n      );\n    } else {\n      selectedImagesTemp.push(tempImages[index].id);\n      selectedImagesNameTemp.push(tempImages[index].url);\n      console.log(selectedImagesNameTemp);\n      console.log(selectedImagesTemp);\n    }\n    this.setState({\n      images: tempImages,\n      selectedImages: selectedImagesTemp,\n      selectedImageNames: selectedImagesNameTemp,\n    });\n  };\n  deleteImages = () => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover it!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then(async (willDelete) => {\n      if (willDelete) {\n        this.setState({\n          isDeleting: !this.state.isDeleting,\n        });\n        var tempImages = this.state.images;\n        var tempSelectedImages = this.state.selectedImages;\n        axios\n          .post(\"events/delete-image-bulk\", {\n            Ids: tempSelectedImages,\n            images: this.state.selectedImageNames,\n          })\n          .then((u) => {\n            this.state.selectedImages.forEach((imageId) => {\n              var imageObject = tempImages.filter(\n                (image) => image.id == imageId\n              )[0];\n              tempSelectedImages.splice(tempSelectedImages.indexOf(imageId), 1);\n              tempImages.splice(tempImages.indexOf(imageObject), 1);\n            });\n            this.setState({\n              images: tempImages,\n              selectedImages: tempSelectedImages,\n              isDeleting: !this.state.isDeleting,\n            });\n\n            swal(\"Poof! Your content has been deleted!\", {\n              icon: \"success\",\n            });\n          });\n      } else {\n        swal(\"Your Images are Safe!\");\n      }\n    });\n  };\n  useInAbout = () => {\n    swal(\"Are you sure you want to use these images in about section too?\", {\n      buttons: [\"No\", \"Yes\"],\n    }).then((ans) => {\n      if (ans) {\n        this.setState({\n          isMoving: !this.state.isMoving,\n        });\n        axios\n          .post(\"about-company/use-in-about\", {\n            images: this.state.selectedImageNames.map((name) => {\n              return {\n                ...name,\n                url: name,\n              };\n            }),\n          })\n          .then((u) => {\n            var imagesTemp = this.state.images;\n            imagesTemp.forEach((image) => {\n              image.isSelected = false;\n            });\n            this.setState({\n              isMoving: !this.state.isMoving,\n              images: imagesTemp,\n              selectedImageNames: [],\n              selectedImages: [],\n            });\n          });\n      }\n    });\n  };\n  render() {\n    var galleryImages = [...this.state.images];\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h2\">Event Gallery</CardTitle>\n                <h5 className=\"card-category\">Images Uploaded by attendees</h5>\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col xs=\"10\">\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Enter Event Full Name\"\n                      value={this.state.eventId}\n                      onChange={(e) =>\n                        this.setState({ eventId: e.target.value })\n                      }\n                    />\n                  </Col>\n                  <Col xs=\"2\">\n                    <Button\n                      style={{ width: \"100%\" }}\n                      color=\"success\"\n                      disabled={this.state.isSearching}\n                      onClick={this.searchImages}\n                    >\n                      {this.state.isSearching ? \"Searching...\" : \"Search\"}\n                    </Button>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs=\"12\">\n                    {this.state.selectedImages.length > 0 ? (\n                      <Row>\n                        <Col xs=\"12\">\n                          <Button\n                            color=\"danger\"\n                            onClick={this.deleteImages}\n                            disabled={this.state.isDeleting}\n                          >\n                            {this.state.isDeleting ? \"Deleting...\" : \"Delete\"}\n                          </Button>\n                          <Button\n                            color=\"primary\"\n                            onClick={this.useInAbout}\n                            disabled={this.state.isMoving}\n                          >\n                            {this.state.isMoving\n                              ? \"Copying...\"\n                              : \"Use in About Section\"}\n                          </Button>\n                        </Col>\n                        <Col\n                          xs=\"12\"\n                          style={{\n                            color: \"white\",\n                            padding: \"12px\",\n                          }}\n                        >\n                          {this.state.selectedImages.length +\n                            \" Image(s) have been selected\"}\n                        </Col>\n                      </Row>\n                    ) : null}\n                  </Col>\n                  <Col xs=\"12\">\n                    <Gallery\n                      images={galleryImages}\n                      onSelectImage={this.onSelectImage}\n                    />\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Col,\n  Row,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Input,\n  Button,\n} from \"reactstrap\";\nimport QueryTable from \"../components/sub/queryTable\";\n\nexport default class Queries extends Component {\n  state = {\n    isSearching: false,\n    data: null,\n    eventId: null,\n  };\n\n  searched = () => {\n    this.setState({\n      isSearching: !this.state.isSearching,\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Card>\n            <CardHeader>\n              <CardTitle tag=\"h2\">Queries</CardTitle>\n              <h5>Search Queries Specific to any Event</h5>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col xs=\"10\">\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Enter Event Id\"\n                    id=\"EventId\"\n                  />\n                </Col>\n                <Col xs=\"2\">\n                  <Button\n                    style={{ width: \"100%\" }}\n                    color=\"success\"\n                    disabled={this.state.isSearching}\n                    onClick={() => {\n                      if (document.getElementById(\"EventId\").value !== \"\") {\n                        this.setState({\n                          eventId: document.getElementById(\"EventId\").value,\n                          isSearching: true,\n                        });\n                      }\n                    }}\n                  >\n                    {this.state.isSearching ? \"Searching...\" : \"Search\"}\n                  </Button>\n                </Col>\n              </Row>\n              <Row>\n                <QueryTable\n                  eventId={this.state.eventId}\n                  inAll={true}\n                  searched={this.searched}\n                />\n              </Row>\n            </CardBody>\n          </Card>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/Admin/Admin.js\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}